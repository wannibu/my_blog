2021-07-28 09:42:45.066  INFO 11152 --- [restartedMain] black.lyg.blog.BlogApplication           : Starting BlogApplication on Administraror with PID 11152 (D:\Desktop\blog\blog-master\target\classes started by Administrator in D:\Desktop\blog\blog-master)
2021-07-28 09:42:45.073 DEBUG 11152 --- [restartedMain] black.lyg.blog.BlogApplication           : Running with Spring Boot v2.2.6.RELEASE, Spring v5.2.5.RELEASE
2021-07-28 09:42:45.073  INFO 11152 --- [restartedMain] black.lyg.blog.BlogApplication           : The following profiles are active: dev
2021-07-28 09:42:45.110  INFO 11152 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-07-28 09:42:45.110  INFO 11152 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-07-28 09:42:45.696  INFO 11152 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-28 09:42:45.696  INFO 11152 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-28 09:42:45.727  INFO 11152 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16ms. Found 0 Redis repository interfaces.
2021-07-28 09:42:45.821  WARN 11152 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[black.lyg.blog]' package. Please check your configuration.
2021-07-28 09:42:46.354  INFO 11152 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-07-28 09:42:46.369  INFO 11152 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-28 09:42:46.369  INFO 11152 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-28 09:42:46.369  INFO 11152 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : An older version [1.2.14] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.23]
2021-07-28 09:42:46.369  INFO 11152 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.14] using APR version [1.6.2].
2021-07-28 09:42:46.369  INFO 11152 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-07-28 09:42:46.369  INFO 11152 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-07-28 09:42:47.360  INFO 11152 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.0.2l  25 May 2017]
2021-07-28 09:42:47.498  INFO 11152 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-28 09:42:47.498  INFO 11152 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2388 ms
2021-07-28 09:42:47.530  INFO 11152 --- [restartedMain] o.s.boot.web.servlet.RegistrationBean    : Filter webStatFilter was not registered (possibly already registered?)
2021-07-28 09:42:48.597  INFO 11152 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-28 09:42:48.690  INFO 11152 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-07-28 09:42:49.240  INFO 11152 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-07-28 09:42:49.287  INFO 11152 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-07-28 09:42:49.287  INFO 11152 --- [restartedMain] black.lyg.blog.BlogApplication           : Started BlogApplication in 4.66 seconds (JVM running for 6.254)
2021-07-28 09:42:49.334  INFO 11152 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-28 09:42:51.449 ERROR 11152 --- [Druid-ConnectionPool-Create-73088796] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/blog1?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC, errorCode 0, state 08S01

com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:156) ~[druid-1.1.16.jar:1.1.16]
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:218) ~[druid-1.1.16.jar:1.1.16]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:150) ~[druid-1.1.16.jar:1.1.16]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1598) ~[druid-1.1.16.jar:1.1.16]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1662) ~[druid-1.1.16.jar:1.1.16]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2601) ~[druid-1.1.16.jar:1.1.16]
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_221]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_221]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_221]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_221]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:956) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 9 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method) ~[na:1.8.0_221]
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79) ~[na:1.8.0_221]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350) ~[na:1.8.0_221]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206) ~[na:1.8.0_221]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188) ~[na:1.8.0_221]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[na:1.8.0_221]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[na:1.8.0_221]
	at java.net.Socket.connect(Socket.java:589) ~[na:1.8.0_221]
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 12 common frames omitted

2021-07-28 09:42:53.493 ERROR 11152 --- [Druid-ConnectionPool-Create-73088796] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/blog1?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC, errorCode 0, state 08S01

com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:156) ~[druid-1.1.16.jar:1.1.16]
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:218) ~[druid-1.1.16.jar:1.1.16]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:150) ~[druid-1.1.16.jar:1.1.16]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1598) ~[druid-1.1.16.jar:1.1.16]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1662) ~[druid-1.1.16.jar:1.1.16]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2601) ~[druid-1.1.16.jar:1.1.16]
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_221]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_221]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_221]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_221]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:956) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 9 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method) ~[na:1.8.0_221]
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79) ~[na:1.8.0_221]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350) ~[na:1.8.0_221]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206) ~[na:1.8.0_221]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188) ~[na:1.8.0_221]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[na:1.8.0_221]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[na:1.8.0_221]
	at java.net.Socket.connect(Socket.java:589) ~[na:1.8.0_221]
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 12 common frames omitted

2021-07-28 09:42:53.493  INFO 11152 --- [Druid-ConnectionPool-Create-73088796] c.a.druid.pool.DruidAbstractDataSource   : {dataSource-1} failContinuous is true
2021-07-28 09:42:56.042 ERROR 11152 --- [Druid-ConnectionPool-Create-73088796] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/blog1?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC, errorCode 0, state 08S01

com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:156) ~[druid-1.1.16.jar:1.1.16]
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:218) ~[druid-1.1.16.jar:1.1.16]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:150) ~[druid-1.1.16.jar:1.1.16]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1598) ~[druid-1.1.16.jar:1.1.16]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1662) ~[druid-1.1.16.jar:1.1.16]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2601) ~[druid-1.1.16.jar:1.1.16]
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_221]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_221]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_221]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_221]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:956) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 9 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method) ~[na:1.8.0_221]
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79) ~[na:1.8.0_221]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350) ~[na:1.8.0_221]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206) ~[na:1.8.0_221]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188) ~[na:1.8.0_221]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[na:1.8.0_221]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[na:1.8.0_221]
	at java.net.Socket.connect(Socket.java:589) ~[na:1.8.0_221]
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 12 common frames omitted

2021-07-28 09:42:58.569 ERROR 11152 --- [Druid-ConnectionPool-Create-73088796] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/blog1?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC, errorCode 0, state 08S01

com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:156) ~[druid-1.1.16.jar:1.1.16]
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:218) ~[druid-1.1.16.jar:1.1.16]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:150) ~[druid-1.1.16.jar:1.1.16]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1598) ~[druid-1.1.16.jar:1.1.16]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1662) ~[druid-1.1.16.jar:1.1.16]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2601) ~[druid-1.1.16.jar:1.1.16]
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_221]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_221]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_221]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_221]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:956) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 9 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method) ~[na:1.8.0_221]
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79) ~[na:1.8.0_221]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350) ~[na:1.8.0_221]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206) ~[na:1.8.0_221]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188) ~[na:1.8.0_221]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[na:1.8.0_221]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[na:1.8.0_221]
	at java.net.Socket.connect(Socket.java:589) ~[na:1.8.0_221]
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 12 common frames omitted

2021-07-28 09:43:01.122 ERROR 11152 --- [Druid-ConnectionPool-Create-73088796] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/blog1?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC, errorCode 0, state 08S01

com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:156) ~[druid-1.1.16.jar:1.1.16]
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:218) ~[druid-1.1.16.jar:1.1.16]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:150) ~[druid-1.1.16.jar:1.1.16]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1598) ~[druid-1.1.16.jar:1.1.16]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1662) ~[druid-1.1.16.jar:1.1.16]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2601) ~[druid-1.1.16.jar:1.1.16]
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_221]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_221]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_221]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_221]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:956) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 9 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method) ~[na:1.8.0_221]
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79) ~[na:1.8.0_221]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350) ~[na:1.8.0_221]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206) ~[na:1.8.0_221]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188) ~[na:1.8.0_221]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[na:1.8.0_221]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[na:1.8.0_221]
	at java.net.Socket.connect(Socket.java:589) ~[na:1.8.0_221]
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 12 common frames omitted

2021-07-28 09:43:03.665 ERROR 11152 --- [Druid-ConnectionPool-Create-73088796] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/blog1?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC, errorCode 0, state 08S01

com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:156) ~[druid-1.1.16.jar:1.1.16]
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:218) ~[druid-1.1.16.jar:1.1.16]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:150) ~[druid-1.1.16.jar:1.1.16]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1598) ~[druid-1.1.16.jar:1.1.16]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1662) ~[druid-1.1.16.jar:1.1.16]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2601) ~[druid-1.1.16.jar:1.1.16]
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_221]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_221]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_221]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_221]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:956) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 9 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method) ~[na:1.8.0_221]
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79) ~[na:1.8.0_221]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350) ~[na:1.8.0_221]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206) ~[na:1.8.0_221]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188) ~[na:1.8.0_221]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[na:1.8.0_221]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[na:1.8.0_221]
	at java.net.Socket.connect(Socket.java:589) ~[na:1.8.0_221]
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 12 common frames omitted

2021-07-28 09:43:06.222 ERROR 11152 --- [Druid-ConnectionPool-Create-73088796] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/blog1?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC, errorCode 0, state 08S01

com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:156) ~[druid-1.1.16.jar:1.1.16]
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:218) ~[druid-1.1.16.jar:1.1.16]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:150) ~[druid-1.1.16.jar:1.1.16]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1598) ~[druid-1.1.16.jar:1.1.16]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1662) ~[druid-1.1.16.jar:1.1.16]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2601) ~[druid-1.1.16.jar:1.1.16]
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_221]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_221]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_221]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_221]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:956) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 9 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method) ~[na:1.8.0_221]
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79) ~[na:1.8.0_221]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350) ~[na:1.8.0_221]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206) ~[na:1.8.0_221]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188) ~[na:1.8.0_221]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[na:1.8.0_221]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[na:1.8.0_221]
	at java.net.Socket.connect(Socket.java:589) ~[na:1.8.0_221]
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 12 common frames omitted

2021-07-28 09:43:08.739  INFO 11152 --- [Druid-ConnectionPool-Create-73088796] c.a.druid.pool.DruidAbstractDataSource   : {dataSource-1} failContinuous is false
2021-07-28 09:43:08.739 DEBUG 11152 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc 
2021-07-28 09:43:08.764 DEBUG 11152 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 
2021-07-28 09:43:08.804 DEBUG 11152 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:43:08.804 DEBUG 11152 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 09:43:08.804 DEBUG 11152 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:43:08.804 DEBUG 11152 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 09:43:08.804 DEBUG 11152 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 09:43:08.820 DEBUG 11152 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 09:43:08.825 DEBUG 11152 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:43:08.825 DEBUG 11152 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 09:43:08.825 DEBUG 11152 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:43:08.825 DEBUG 11152 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 09:43:08.825 DEBUG 11152 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 09:43:08.828 DEBUG 11152 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 09:43:08.828 DEBUG 11152 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:43:08.828 DEBUG 11152 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 09:43:08.828 DEBUG 11152 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:43:08.828 DEBUG 11152 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 09:43:08.828 DEBUG 11152 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 09:43:08.828 DEBUG 11152 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 09:43:08.831 DEBUG 11152 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:43:08.831 DEBUG 11152 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 09:43:08.831 DEBUG 11152 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:43:08.834 DEBUG 11152 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 10
2021-07-28 09:43:08.951  INFO 11152 --- [restartedMain] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2021-07-28 09:43:08.951  INFO 11152 --- [restartedMain] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2021-07-28 09:43:16.243  INFO 700 --- [restartedMain] black.lyg.blog.BlogApplication           : Starting BlogApplication on Administraror with PID 700 (D:\Desktop\blog\blog-master\target\classes started by Administrator in D:\Desktop\blog\blog-master)
2021-07-28 09:43:16.243 DEBUG 700 --- [restartedMain] black.lyg.blog.BlogApplication           : Running with Spring Boot v2.2.6.RELEASE, Spring v5.2.5.RELEASE
2021-07-28 09:43:16.243  INFO 700 --- [restartedMain] black.lyg.blog.BlogApplication           : The following profiles are active: dev
2021-07-28 09:43:16.283  INFO 700 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-07-28 09:43:16.283  INFO 700 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-07-28 09:43:16.865  INFO 700 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-28 09:43:16.865  INFO 700 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-28 09:43:16.881  INFO 700 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15ms. Found 0 Redis repository interfaces.
2021-07-28 09:43:16.975  WARN 700 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[black.lyg.blog]' package. Please check your configuration.
2021-07-28 09:43:17.466  INFO 700 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-07-28 09:43:17.482  INFO 700 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-28 09:43:17.482  INFO 700 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-28 09:43:17.482  INFO 700 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : An older version [1.2.14] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.23]
2021-07-28 09:43:17.482  INFO 700 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.14] using APR version [1.6.2].
2021-07-28 09:43:17.482  INFO 700 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-07-28 09:43:17.482  INFO 700 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-07-28 09:43:18.493  INFO 700 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.0.2l  25 May 2017]
2021-07-28 09:43:18.587  INFO 700 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-28 09:43:18.587  INFO 700 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2304 ms
2021-07-28 09:43:18.634  INFO 700 --- [restartedMain] o.s.boot.web.servlet.RegistrationBean    : Filter webStatFilter was not registered (possibly already registered?)
2021-07-28 09:43:19.627  INFO 700 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-28 09:43:19.706  INFO 700 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-07-28 09:43:20.193  INFO 700 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-07-28 09:43:20.238  INFO 700 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-07-28 09:43:20.238  INFO 700 --- [restartedMain] black.lyg.blog.BlogApplication           : Started BlogApplication in 4.323 seconds (JVM running for 5.635)
2021-07-28 09:43:20.285  INFO 700 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-28 09:43:21.369 DEBUG 700 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc 
2021-07-28 09:43:21.385 DEBUG 700 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 
2021-07-28 09:43:21.416 DEBUG 700 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:43:21.416 DEBUG 700 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 09:43:21.416 DEBUG 700 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:43:21.416 DEBUG 700 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 09:43:21.416 DEBUG 700 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 09:43:21.416 DEBUG 700 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 09:43:21.416 DEBUG 700 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:43:21.416 DEBUG 700 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 09:43:21.416 DEBUG 700 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:43:21.416 DEBUG 700 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 09:43:21.416 DEBUG 700 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 09:43:21.416 DEBUG 700 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 09:43:21.416 DEBUG 700 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:43:21.432 DEBUG 700 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 09:43:21.432 DEBUG 700 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:43:21.432 DEBUG 700 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 09:43:21.432 DEBUG 700 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 09:43:21.432 DEBUG 700 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 09:43:21.432 DEBUG 700 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:43:21.432 DEBUG 700 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 09:43:21.432 DEBUG 700 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:43:21.432 DEBUG 700 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 10
2021-07-28 09:43:21.543  INFO 700 --- [restartedMain] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2021-07-28 09:43:21.543  INFO 700 --- [restartedMain] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2021-07-28 09:43:25.268  INFO 700 --- [restartedMain] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-07-28 09:43:25.283 ERROR 700 --- [restartedMain] o.s.boot.SpringApplication               : Application run failed

java.lang.IllegalStateException: Failed to execute CommandLineRunner
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:787) [spring-boot-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:768) [spring-boot-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:322) [spring-boot-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226) [spring-boot-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at black.lyg.blog.BlogApplication.main(BlogApplication.java:12) [classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_221]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_221]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_221]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_221]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-2.2.6.RELEASE.jar:2.2.6.RELEASE]
Caused by: org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 127.0.0.1:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1199) ~[spring-data-redis-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1178) ~[spring-data-redis-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:942) ~[spring-data-redis-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:353) ~[spring-data-redis-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:134) ~[spring-data-redis-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:97) ~[spring-data-redis-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:84) ~[spring-data-redis-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:215) ~[spring-data-redis-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:188) ~[spring-data-redis-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:96) ~[spring-data-redis-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.data.redis.core.DefaultHashOperations.put(DefaultHashOperations.java:191) ~[spring-data-redis-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at black.lyg.blog.config.StartupRunner.run(StartupRunner.java:26) ~[classes/:na]
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:784) [spring-boot-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 10 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 127.0.0.1:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78) ~[lettuce-core-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56) ~[lettuce-core-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:234) ~[lettuce-core-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at io.lettuce.core.RedisClient.connect(RedisClient.java:207) ~[lettuce-core-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115) ~[spring-data-redis-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at java.util.Optional.orElseGet(Optional.java:267) ~[na:1.8.0_221]
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115) ~[spring-data-redis-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1197) ~[spring-data-redis-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 22 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method) ~[na:1.8.0_221]
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717) ~[na:1.8.0_221]
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:330) ~[netty-transport-4.1.48.Final.jar:4.1.48.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334) ~[netty-transport-4.1.48.Final.jar:4.1.48.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:702) ~[netty-transport-4.1.48.Final.jar:4.1.48.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650) ~[netty-transport-4.1.48.Final.jar:4.1.48.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576) ~[netty-transport-4.1.48.Final.jar:4.1.48.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.48.Final.jar:4.1.48.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.48.Final.jar:4.1.48.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.48.Final.jar:4.1.48.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.48.Final.jar:4.1.48.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_221]

2021-07-28 09:43:25.283  INFO 700 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2021-07-28 09:43:25.519  INFO 700 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closing ...
2021-07-28 09:43:25.519  INFO 700 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2021-07-28 09:44:46.917  INFO 7836 --- [restartedMain] black.lyg.blog.BlogApplication           : Starting BlogApplication on Administraror with PID 7836 (D:\Desktop\blog\blog-master\target\classes started by Administrator in D:\Desktop\blog\blog-master)
2021-07-28 09:44:46.917 DEBUG 7836 --- [restartedMain] black.lyg.blog.BlogApplication           : Running with Spring Boot v2.2.6.RELEASE, Spring v5.2.5.RELEASE
2021-07-28 09:44:46.927  INFO 7836 --- [restartedMain] black.lyg.blog.BlogApplication           : The following profiles are active: dev
2021-07-28 09:44:46.952  INFO 7836 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-07-28 09:44:46.952  INFO 7836 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-07-28 09:44:47.619  INFO 7836 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-28 09:44:47.619  INFO 7836 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-28 09:44:47.652  INFO 7836 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16ms. Found 0 Redis repository interfaces.
2021-07-28 09:44:47.761  WARN 7836 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[black.lyg.blog]' package. Please check your configuration.
2021-07-28 09:44:48.411  INFO 7836 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-07-28 09:44:48.411  INFO 7836 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-28 09:44:48.411  INFO 7836 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-28 09:44:48.411  INFO 7836 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : An older version [1.2.14] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.23]
2021-07-28 09:44:48.411  INFO 7836 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.14] using APR version [1.6.2].
2021-07-28 09:44:48.411  INFO 7836 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-07-28 09:44:48.411  INFO 7836 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-07-28 09:44:49.441  INFO 7836 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.0.2l  25 May 2017]
2021-07-28 09:44:49.567  INFO 7836 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-28 09:44:49.567  INFO 7836 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2615 ms
2021-07-28 09:44:49.598  INFO 7836 --- [restartedMain] o.s.boot.web.servlet.RegistrationBean    : Filter webStatFilter was not registered (possibly already registered?)
2021-07-28 09:44:50.542  INFO 7836 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-28 09:44:50.620  INFO 7836 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-07-28 09:44:51.111  INFO 7836 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-07-28 09:44:51.143  INFO 7836 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-07-28 09:44:51.143  INFO 7836 --- [restartedMain] black.lyg.blog.BlogApplication           : Started BlogApplication in 4.73 seconds (JVM running for 6.205)
2021-07-28 09:44:51.174  INFO 7836 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-28 09:44:52.132 DEBUG 7836 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc 
2021-07-28 09:44:52.147 DEBUG 7836 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 
2021-07-28 09:44:52.163 DEBUG 7836 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:44:52.163 DEBUG 7836 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 09:44:52.178 DEBUG 7836 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:44:52.178 DEBUG 7836 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 09:44:52.178 DEBUG 7836 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 09:44:52.178 DEBUG 7836 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 09:44:52.178 DEBUG 7836 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:44:52.178 DEBUG 7836 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 09:44:52.178 DEBUG 7836 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:44:52.178 DEBUG 7836 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 09:44:52.178 DEBUG 7836 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 09:44:52.178 DEBUG 7836 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 09:44:52.178 DEBUG 7836 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:44:52.178 DEBUG 7836 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 09:44:52.178 DEBUG 7836 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:44:52.178 DEBUG 7836 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 09:44:52.178 DEBUG 7836 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 09:44:52.178 DEBUG 7836 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 09:44:52.178 DEBUG 7836 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:44:52.178 DEBUG 7836 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 09:44:52.178 DEBUG 7836 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:44:52.194 DEBUG 7836 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 10
2021-07-28 09:44:52.272  INFO 7836 --- [restartedMain] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2021-07-28 09:44:52.272  INFO 7836 --- [restartedMain] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2021-07-28 09:44:53.923  INFO 7836 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：挖掘机技术哪家强
2021-07-28 09:44:53.923  INFO 7836 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java常见关键字final、static、super、abstract、this
2021-07-28 09:44:53.923  INFO 7836 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：山东菏泽曹县流弊六六六，卧底宝贝儿
2021-07-28 09:44:53.923  INFO 7836 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：随笔
2021-07-28 09:44:53.923  INFO 7836 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：欢迎使用 Markdown在线编辑器 MdEditor
2021-07-28 09:44:53.923  INFO 7836 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java中 equals() 和 hashCode()的关系
2021-07-28 09:44:53.923  INFO 7836 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（二）：Hash
2021-07-28 09:44:53.939  INFO 7836 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（一）：String
2021-07-28 09:44:53.939  INFO 7836 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java合并两个int数组
2021-07-28 09:44:53.939  INFO 7836 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：条件注解@Conditional
2021-07-28 09:44:53.939  INFO 7836 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 初始化redis中blogCount的数量为：10
2021-07-28 09:45:24.199  INFO 7836 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-28 09:45:24.199  INFO 7836 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-28 09:45:24.208  INFO 7836 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 9 ms
2021-07-28 09:45:24.268 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==>  Preparing: SELECT count(0) FROM blog 
2021-07-28 09:45:24.268 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==> Parameters: 
2021-07-28 09:45:24.270 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.findBlogAll_COUNT     : <==      Total: 1
2021-07-28 09:45:24.389 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc LIMIT ? 
2021-07-28 09:45:24.390 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 5(Integer)
2021-07-28 09:45:24.393 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:45:24.393 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 09:45:24.394 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:45:24.394 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 09:45:24.394 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 09:45:24.395 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 09:45:24.396 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:45:24.396 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 09:45:24.397 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:45:24.397 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 09:45:24.397 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 09:45:24.398 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 09:45:24.399 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:45:24.399 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 09:45:24.400 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:45:24.400 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 09:45:24.400 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 09:45:24.402 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 09:45:24.402 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:45:24.402 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 09:45:24.403 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:45:24.405 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 5
2021-07-28 09:45:24.411 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.T.selectSeveralTopTypes          : ==>  Preparing: select distinct t.type_id,t.name,count(*) as number from type t,blog b where t.type_id = b.type_id group by t.type_id order by number desc limit ? 
2021-07-28 09:45:24.412 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.T.selectSeveralTopTypes          : ==> Parameters: 6(Integer)
2021-07-28 09:45:24.414 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.T.selectSeveralTopTypes          : <==      Total: 4
2021-07-28 09:45:24.419  INFO 7836 --- [http-nio-8080-exec-1] black.lyg.blog.service.TagService        : 从redis中获取数据：[]
2021-07-28 09:45:24.420 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.TagMapper.findSeveralTopTags     : ==>  Preparing: select distinct t.tag_id,t.name ,count(*) as number from tag t ,blog_tag bt where t.tag_id = bt.tag_id group by t.tag_id, t.name order by number desc limit ? 
2021-07-28 09:45:24.420 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.TagMapper.findSeveralTopTags     : ==> Parameters: 10(Integer)
2021-07-28 09:45:24.427 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.TagMapper.findSeveralTopTags     : <==      Total: 7
2021-07-28 09:45:24.428  INFO 7836 --- [http-nio-8080-exec-1] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=21, name=Redis, BlogNumber=5)
2021-07-28 09:45:24.429  INFO 7836 --- [http-nio-8080-exec-1] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=22, name=Java, BlogNumber=4)
2021-07-28 09:45:24.430  INFO 7836 --- [http-nio-8080-exec-1] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=20, name=设计模式, BlogNumber=3)
2021-07-28 09:45:24.431  INFO 7836 --- [http-nio-8080-exec-1] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=1, name=Spring, BlogNumber=2)
2021-07-28 09:45:24.432  INFO 7836 --- [http-nio-8080-exec-1] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=24, name=测试, BlogNumber=2)
2021-07-28 09:45:24.432  INFO 7836 --- [http-nio-8080-exec-1] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=2, name=Mybatis, BlogNumber=1)
2021-07-28 09:45:24.433  INFO 7836 --- [http-nio-8080-exec-1] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=23, name=MySQL, BlogNumber=1)
2021-07-28 09:45:24.433  INFO 7836 --- [http-nio-8080-exec-1] black.lyg.blog.service.TagService        : 从Mysql中查找到由标签显示博客的数据：[TagTops(tagId=21, name=Redis, BlogNumber=5), TagTops(tagId=22, name=Java, BlogNumber=4), TagTops(tagId=20, name=设计模式, BlogNumber=3), TagTops(tagId=1, name=Spring, BlogNumber=2), TagTops(tagId=24, name=测试, BlogNumber=2), TagTops(tagId=2, name=Mybatis, BlogNumber=1), TagTops(tagId=23, name=MySQL, BlogNumber=1)]
2021-07-28 09:45:24.472  INFO 7836 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 09:45:24.503 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.mapper.BlogMapper.selectByExample  : ==>  Preparing: SELECT blog_id,type_id,user_id,title,content,first_picture,flag,description,views,appreciation,share_statement,comment,publish,recommend,create_time,update_time FROM blog order by update_time desc limit 8 
2021-07-28 09:45:24.504 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.mapper.BlogMapper.selectByExample  : ==> Parameters: 
2021-07-28 09:45:24.507 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.mapper.BlogMapper.selectByExample  : <==      Total: 8
2021-07-28 09:45:24.508  INFO 7836 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 将blog数据添加到TheLatestBlog中，标题为挖掘机技术哪家强
2021-07-28 09:45:24.510  INFO 7836 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 将blog数据添加到TheLatestBlog中，标题为Java常见关键字final、static、super、abstract、this
2021-07-28 09:45:24.510  INFO 7836 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 将blog数据添加到TheLatestBlog中，标题为山东菏泽曹县流弊六六六，卧底宝贝儿
2021-07-28 09:45:24.512  INFO 7836 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 将blog数据添加到TheLatestBlog中，标题为随笔
2021-07-28 09:45:24.512  INFO 7836 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 将blog数据添加到TheLatestBlog中，标题为欢迎使用 Markdown在线编辑器 MdEditor
2021-07-28 09:45:24.515  INFO 7836 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 将blog数据添加到TheLatestBlog中，标题为Java中 equals() 和 hashCode()的关系
2021-07-28 09:45:24.516  INFO 7836 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 将blog数据添加到TheLatestBlog中，标题为redis学习笔记（二）：Hash
2021-07-28 09:45:24.516  INFO 7836 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 将blog数据添加到TheLatestBlog中，标题为redis学习笔记（一）：String
2021-07-28 09:45:28.711  INFO 7836 --- [http-nio-8080-exec-4] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 09:46:32.315 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.blog.mapper.TypeMapper.selectCount   : ==>  Preparing: SELECT COUNT(type_id) FROM type 
2021-07-28 09:46:32.316 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.blog.mapper.TypeMapper.selectCount   : ==> Parameters: 
2021-07-28 09:46:32.318 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.blog.mapper.TypeMapper.selectCount   : <==      Total: 1
2021-07-28 09:46:32.323 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.B.selectBlogByTypeId_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE type_id = ? 
2021-07-28 09:46:32.323 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.B.selectBlogByTypeId_COUNT       : ==> Parameters: 6(Integer)
2021-07-28 09:46:32.325 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.B.selectBlogByTypeId_COUNT       : <==      Total: 1
2021-07-28 09:46:32.325 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.selectBlogByTypeId    : ==>  Preparing: select * from blog where type_id = ? LIMIT ? 
2021-07-28 09:46:32.326 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.selectBlogByTypeId    : ==> Parameters: 6(Integer), 5(Integer)
2021-07-28 09:46:32.328 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:46:32.328 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 09:46:32.329 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:46:32.329 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 09:46:32.329 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 09:46:32.330 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 09:46:32.331 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 09:46:32.331 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 09:46:32.332 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 09:46:32.332 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.selectBlogByTypeId    : <==      Total: 5
2021-07-28 09:46:32.338 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 09:46:32.338 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 8(Integer)
2021-07-28 09:46:32.340 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 09:46:32.341 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 09:46:32.341 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 1(Integer)
2021-07-28 09:46:32.342 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 09:46:32.344 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 09:46:32.344 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 15(Integer)
2021-07-28 09:46:32.345 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 09:46:32.345 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 09:46:32.346 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 22(Integer)
2021-07-28 09:46:32.346 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 09:46:32.347 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 09:46:32.347 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 16(Integer)
2021-07-28 09:46:32.348 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 09:46:32.349 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 09:46:32.350 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 21(Integer)
2021-07-28 09:46:32.350 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 09:46:32.351 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 09:46:32.352 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 17(Integer)
2021-07-28 09:46:32.352 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 09:46:32.353 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 09:46:32.353 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 21(Integer)
2021-07-28 09:46:32.354 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 09:46:32.355 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 09:46:32.355 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 18(Integer)
2021-07-28 09:46:32.356 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 09:46:32.357 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 09:46:32.357 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 22(Integer)
2021-07-28 09:46:32.358 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 09:46:32.647  INFO 7836 --- [http-nio-8080-exec-7] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 09:46:36.728 DEBUG 7836 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==>  Preparing: SELECT count(0) FROM blog 
2021-07-28 09:46:36.728 DEBUG 7836 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==> Parameters: 
2021-07-28 09:46:36.730 DEBUG 7836 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.findBlogAll_COUNT     : <==      Total: 1
2021-07-28 09:46:36.730 DEBUG 7836 --- [http-nio-8080-exec-8] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc LIMIT ? 
2021-07-28 09:46:36.730 DEBUG 7836 --- [http-nio-8080-exec-8] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 5(Integer)
2021-07-28 09:46:36.732 DEBUG 7836 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:46:36.732 DEBUG 7836 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 09:46:36.734 DEBUG 7836 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:46:36.734 DEBUG 7836 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 09:46:36.734 DEBUG 7836 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 09:46:36.735 DEBUG 7836 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 09:46:36.735 DEBUG 7836 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:46:36.736 DEBUG 7836 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 09:46:36.736 DEBUG 7836 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:46:36.737 DEBUG 7836 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 09:46:36.737 DEBUG 7836 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 09:46:36.738 DEBUG 7836 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 09:46:36.738 DEBUG 7836 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:46:36.738 DEBUG 7836 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 09:46:36.739 DEBUG 7836 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:46:36.739 DEBUG 7836 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 09:46:36.739 DEBUG 7836 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 09:46:36.740 DEBUG 7836 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 09:46:36.741 DEBUG 7836 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:46:36.741 DEBUG 7836 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 09:46:36.742 DEBUG 7836 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:46:36.743 DEBUG 7836 --- [http-nio-8080-exec-8] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 5
2021-07-28 09:46:36.746  INFO 7836 --- [http-nio-8080-exec-8] black.lyg.blog.service.TagService        : 从redis中获取数据：[TagTops(tagId=20, name=设计模式, BlogNumber=3), TagTops(tagId=21, name=Redis, BlogNumber=5), TagTops(tagId=22, name=Java, BlogNumber=4), TagTops(tagId=2, name=Mybatis, BlogNumber=1), TagTops(tagId=1, name=Spring, BlogNumber=2), TagTops(tagId=24, name=测试, BlogNumber=2), TagTops(tagId=23, name=MySQL, BlogNumber=1)]
2021-07-28 09:46:36.747  INFO 7836 --- [http-nio-8080-exec-8] black.lyg.blog.service.TagService        : 从redis中查找到由标签显示博客的数据：[TagTops(tagId=21, name=Redis, BlogNumber=5), TagTops(tagId=22, name=Java, BlogNumber=4), TagTops(tagId=20, name=设计模式, BlogNumber=3), TagTops(tagId=1, name=Spring, BlogNumber=2), TagTops(tagId=24, name=测试, BlogNumber=2), TagTops(tagId=2, name=Mybatis, BlogNumber=1), TagTops(tagId=23, name=MySQL, BlogNumber=1)]
2021-07-28 09:46:36.749  INFO 7836 --- [http-nio-8080-exec-8] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 09:46:37.007  INFO 7836 --- [http-nio-8080-exec-4] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 09:48:24.640  INFO 7836 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.loginPage', args=[]}
2021-07-28 09:48:24.642  INFO 7836 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:48:24.642  INFO 7836 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : result : admin/login 
2021-07-28 09:48:29.877  INFO 7836 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.login', args=[zhangsan, 123456, org.apache.catalina.session.StandardSessionFacade@63b820c8, {}]}
2021-07-28 09:48:29.881 DEBUG 7836 --- [http-nio-8080-exec-6] .l.b.m.U.selectUserNameByNameAndPassWord : ==>  Preparing: select * from user where username = ? and password = ? 
2021-07-28 09:48:29.881 DEBUG 7836 --- [http-nio-8080-exec-6] .l.b.m.U.selectUserNameByNameAndPassWord : ==> Parameters: zhangsan(String), E10ADC3949BA59ABBE56E057F20F883E(String)
2021-07-28 09:48:29.883 DEBUG 7836 --- [http-nio-8080-exec-6] .l.b.m.U.selectUserNameByNameAndPassWord : <==      Total: 1
2021-07-28 09:48:29.883  INFO 7836 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:48:29.883  INFO 7836 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : result : admin/index 
2021-07-28 09:48:30.155  INFO 7836 --- [http-nio-8080-exec-8] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 09:48:35.123  INFO 7836 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/zhangsan;jsessionid=43D6F66F290442A4383713C38B943921', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, zhangsan, 1]}
2021-07-28 09:48:35.126 DEBUG 7836 --- [http-nio-8080-exec-4] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 09:48:35.126 DEBUG 7836 --- [http-nio-8080-exec-4] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: zhangsan(String)
2021-07-28 09:48:35.127 DEBUG 7836 --- [http-nio-8080-exec-4] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 09:48:35.127 DEBUG 7836 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 09:48:35.128 DEBUG 7836 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: zhangsan(String), 8(Integer)
2021-07-28 09:48:35.129 DEBUG 7836 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 09:48:35.130 DEBUG 7836 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 09:48:35.130 DEBUG 7836 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 2(Integer)
2021-07-28 09:48:35.132 DEBUG 7836 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:48:35.132 DEBUG 7836 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 09:48:35.133 DEBUG 7836 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:48:35.133 DEBUG 7836 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 09:48:35.134 DEBUG 7836 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 09:48:35.134 DEBUG 7836 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 09:48:35.134 DEBUG 7836 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 1
2021-07-28 09:48:35.135 DEBUG 7836 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 09:48:35.135 DEBUG 7836 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 09:48:35.136 DEBUG 7836 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 09:48:35.136  INFO 7836 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:48:35.137  INFO 7836 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 09:48:35.392  INFO 7836 --- [http-nio-8080-exec-5] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 09:48:37.392  INFO 7836 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/18/edit', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.editPage', args=[{}, 18]}
2021-07-28 09:48:37.394  INFO 7836 --- [http-nio-8080-exec-3] black.lyg.blog.service.BlogService       : 从redis中获取Blog的数据，标题为Java常见关键字final、static、super、abstract、this
2021-07-28 09:48:37.396 DEBUG 7836 --- [http-nio-8080-exec-3] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 09:48:37.396 DEBUG 7836 --- [http-nio-8080-exec-3] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 18(Integer)
2021-07-28 09:48:37.398 DEBUG 7836 --- [http-nio-8080-exec-3] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 09:48:37.399 DEBUG 7836 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 09:48:37.399 DEBUG 7836 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 09:48:37.400 DEBUG 7836 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 09:48:37.401 DEBUG 7836 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TagMapper.selectAll    : ==>  Preparing: SELECT tag_id,name FROM tag 
2021-07-28 09:48:37.401 DEBUG 7836 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TagMapper.selectAll    : ==> Parameters: 
2021-07-28 09:48:37.402 DEBUG 7836 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TagMapper.selectAll    : <==      Total: 7
2021-07-28 09:48:37.402  INFO 7836 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:48:37.402  INFO 7836 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : result : admin/blogs-input 
2021-07-28 09:48:37.655  INFO 7836 --- [http-nio-8080-exec-9] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 09:48:46.368  INFO 7836 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/add', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogAdd', args=[Blog(blogId=18, typeId=6, userId=null, title=Java常见关键字final、static、super、abstract、this, content=用此blog记录我学习的过程，文中若有不恰当的地方，还望友情指出互相学习。
***
Java有超过50多个关键字，这篇文章主要讲解一些常见的几个关键字，有兴趣的同学还可以[点此查看更多关键字](https://data-flair.training/blogs/java-keywords/)，下面进入正题：
# final
final关键字主要有三种用法：修饰类、修饰方法、修饰成员变量
* **修饰类**
    * 如果一个类被final修饰，则这个类不能被继承，例如：
    ```java
    final class A {
    }
    ```
    下面的代码则无法编译：
    ```java
    class B extends A {    //编译错误
    }
    ```

* **修饰方法**
    * 当final关键字修饰在方法上时，这表明此方法不能被重写，例如：
    ```java
    class A {
    	final void method(){}
    }
    ```
    下面的代码则无法编译
    ```java
    class B extends A{
    	void method(){}          //编译错误
    }
    ```
* **修饰成员变量**
    * 对于基本类型 final使其数值不变
    * 对于引用类型 final使其引用不变
    ```java
    final String message = "hello";
    message = "world";  //cannot assign value to final variable 'message'
    ```
****注意：一个类不能同时被final和abstract修饰。因为被final修饰的类不能被继承；而被abstract修饰的类本身没有实现，必须通过子类来实现，也就是说要被继承****
***
# static
static关键字主要有三种用法：静态内部类、静态变量、静态方法、静态导包
* **静态内部类与非静态内部类**
    * 非静态内部类依赖于外部类的实例，也就是说要先创建外部类的实例，才能用这个实例去创建非静态内部类，而静态内部类不需要
    * 静态内部类可以声明静态成员变量和方法，而非静态内部类不行
    * 非静态内部类可以随意访问外部类的成员变量和方法（静态+非静态），而静态内部类只能访问外部类的静态成员变量和方法
```java
public class OuterClass {

    public String name;
    public static Integer number;

    /**
     * 非静态内部类
     */
    public class InnerClass{
        //static Integer age; //非静态内部类不可以声明静态方法或变量
        Integer age;

        public void method() {
            System.out.println(name);  //非静态内部类可以随意访问外部类的成员变量和方法
        }
    }

    /**
     * 静态内部类
     */
    public static class StaticInnerClass{
        static Integer age;    //静态内部类可以声明静态成员变量和方法
        public void method(){
            System.out.println(number);   //静态内部类可以访问外部类的静态成员变量和方法，但不能访问外部类的非静态的成员变量和方法
        }
    }

    public static void main(String[] args) {
        OuterClass outerClass = new OuterClass();
        InnerClass innerClass = outerClass.new InnerClass();
        StaticInnerClass staticInnerClass = new StaticInnerClass();
    }
}
```
* **静态方法与静态成员变量**
    * 静态方法与静态变量可以通过类名去访问
```java
public class A  {

    static String phone;

    static void staticMethod(){
    }

    void NonStaticMethod(){
    }

    public static void main(String[] args) {
        A.phone = "123456";
        A.staticMethod();
        
        A a = new A();
        a.NonStaticMethod();
    }
}
```
 * **静态导包**
 格式为：import static 这两个关键字连用可以指定导入某个类中的指定静态资源，并且不需要使用类名调用类中静态成员，可以直接使用类中静态成员变量和成员方法
***
# super
当派生类和基类具有相同的成员变量和方法时，在这种情况下，可能存在歧义，可以使用super关键字来解决，下面通过具体例子讲解：
```java
class Vehicle {
    int maxSpeed = 100;
    void stop(){
    	System.out.println("Vehicle stop"); 
    }
}
	
class Car extends Vehicle{
	int maxSpeed = 120;
	void display() { 
	    /* print maxSpeed of base class (vehicle) */
	    System.out.println("Maximum Speed: " + super.maxSpeed); 
    }
    void stop(){
    	super.stop();
    } 
}
	
class Test { 
	public static void main(String[] args) { 
	     Car car= new Car(); 
	     car.display();
	     car.stop(); 
	} 
} 
```
输出结果：
```java
Maximum Speed: 100
Vehicle stop
```
***
# abstract
* abstract关键字可以修饰类或方法
* abstract类可以扩展，但不能直接实例化，抽象类的目的是由派生类继承
* abstract方法不在声明他的类中实现，但必须在某个子类中重写
* 抽象类既可以有抽象方法又可以拥有非抽象方法
* 当一个类中某个方法被abstract修饰，则该类也必须被abstract修饰

举例说明：
```java
abstract class A  
{ 
    abstract void m1();  //abstract方法不在声明他的类中实现
      
    // 抽象类既可以有抽象方法又可以拥有非抽象方法 
    void m2() 
    { 
        System.out.println("This is a concrete method."); 
    } 
} 
   
class B extends A  
{  
    // B必须重写A中的抽象方法m1()
    void m1() { 
        System.out.println("B's implementation of m2."); 
    } 
} 
  
public class AbstractDemo  
{ 
    public static void main(String args[])  
    { 
        B b = new B(); 
        b.m1(); 
        b.m2(); 
    } 
} 
```
输出结果：

```java
B's implementation of m2.
This is a concrete method.
```
***
# this
基本上，this关键字用于引用类的当前实例。例如：

```java
class Manager {
    Employees[] employees;
     
    void manageEmployees() {
        int totalEmp = this.employees.length;
        System.out.println("Total employees: " + totalEmp);
        this.report();
    }
     
    void report() { }
}
```
在上面的例子中，this关键字用在了两个地方：
* this.employees.length:用于获取类Manager当前实例的变量
* this.report(): 调用类Manager当前实例的方法

**注意：不能使用this关键字访问静态变量或方法，因为静态成员属于静态类实例而不是对象实例**, firstPicture=https://img0.baidu.com/it/u=2970102104,2596451141&fm=26&fmt=auto&gp=0.jpg, flag=原创, description=Java有超过50多个关键字，这篇文章主要讲解一些常见的几个关键字，有兴趣的同学还可以点此查看更多关键字，下面进入正题：, views=null, appreciation=true, shareStatement=true, comment=true, publish=true, recommend=true, createTime=null, updateTime=null, type=null, user=null, tags=null), org.apache.catalina.session.StandardSessionFacade@63b820c8, {}, 22]}
2021-07-28 09:48:46.369 DEBUG 7836 --- [http-nio-8080-exec-10] b.l.b.m.TypeMapper.selectByPrimaryKey    : ==>  Preparing: SELECT type_id,name FROM type WHERE type_id = ? 
2021-07-28 09:48:46.369 DEBUG 7836 --- [http-nio-8080-exec-10] b.l.b.m.TypeMapper.selectByPrimaryKey    : ==> Parameters: 6(Integer)
2021-07-28 09:48:46.370 DEBUG 7836 --- [http-nio-8080-exec-10] b.l.b.m.TypeMapper.selectByPrimaryKey    : <==      Total: 1
2021-07-28 09:48:46.370 DEBUG 7836 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 09:48:46.371 DEBUG 7836 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 22(String)
2021-07-28 09:48:46.371 DEBUG 7836 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 09:48:46.378 DEBUG 7836 --- [http-nio-8080-exec-10] b.l.b.m.B.updateByPrimaryKeySelective    : ==>  Preparing: UPDATE blog SET type_id = ?,user_id = ?,title = ?,content = ?,first_picture = ?,flag = ?,description = ?,appreciation = ?,share_statement = ?,comment = ?,publish = ?,recommend = ?,update_time = ? WHERE blog_id = ? 
2021-07-28 09:48:46.381 DEBUG 7836 --- [http-nio-8080-exec-10] b.l.b.m.B.updateByPrimaryKeySelective    : ==> Parameters: 6(Integer), 2(Integer), Java常见关键字final、static、super、abstract、this(String), 用此blog记录我学习的过程，文中若有不恰当的地方，还望友情指出互相学习。
***
Java有超过50多个关键字，这篇文章主要讲解一些常见的几个关键字，有兴趣的同学还可以[点此查看更多关键字](https://data-flair.training/blogs/java-keywords/)，下面进入正题：
# final
final关键字主要有三种用法：修饰类、修饰方法、修饰成员变量
* **修饰类**
    * 如果一个类被final修饰，则这个类不能被继承，例如：
    ```java
    final class A {
    }
    ```
    下面的代码则无法编译：
    ```java
    class B extends A {    //编译错误
    }
    ```

* **修饰方法**
    * 当final关键字修饰在方法上时，这表明此方法不能被重写，例如：
    ```java
    class A {
    	final void method(){}
    }
    ```
    下面的代码则无法编译
    ```java
    class B extends A{
    	void method(){}          //编译错误
    }
    ```
* **修饰成员变量**
    * 对于基本类型 final使其数值不变
    * 对于引用类型 final使其引用不变
    ```java
    final String message = "hello";
    message = "world";  //cannot assign value to final variable 'message'
    ```
****注意：一个类不能同时被final和abstract修饰。因为被final修饰的类不能被继承；而被abstract修饰的类本身没有实现，必须通过子类来实现，也就是说要被继承****
***
# static
static关键字主要有三种用法：静态内部类、静态变量、静态方法、静态导包
* **静态内部类与非静态内部类**
    * 非静态内部类依赖于外部类的实例，也就是说要先创建外部类的实例，才能用这个实例去创建非静态内部类，而静态内部类不需要
    * 静态内部类可以声明静态成员变量和方法，而非静态内部类不行
    * 非静态内部类可以随意访问外部类的成员变量和方法（静态+非静态），而静态内部类只能访问外部类的静态成员变量和方法
```java
public class OuterClass {

    public String name;
    public static Integer number;

    /**
     * 非静态内部类
     */
    public class InnerClass{
        //static Integer age; //非静态内部类不可以声明静态方法或变量
        Integer age;

        public void method() {
            System.out.println(name);  //非静态内部类可以随意访问外部类的成员变量和方法
        }
    }

    /**
     * 静态内部类
     */
    public static class StaticInnerClass{
        static Integer age;    //静态内部类可以声明静态成员变量和方法
        public void method(){
            System.out.println(number);   //静态内部类可以访问外部类的静态成员变量和方法，但不能访问外部类的非静态的成员变量和方法
        }
    }

    public static void main(String[] args) {
        OuterClass outerClass = new OuterClass();
        InnerClass innerClass = outerClass.new InnerClass();
        StaticInnerClass staticInnerClass = new StaticInnerClass();
    }
}
```
* **静态方法与静态成员变量**
    * 静态方法与静态变量可以通过类名去访问
```java
public class A  {

    static String phone;

    static void staticMethod(){
    }

    void NonStaticMethod(){
    }

    public static void main(String[] args) {
        A.phone = "123456";
        A.staticMethod();
        
        A a = new A();
        a.NonStaticMethod();
    }
}
```
 * **静态导包**
 格式为：import static 这两个关键字连用可以指定导入某个类中的指定静态资源，并且不需要使用类名调用类中静态成员，可以直接使用类中静态成员变量和成员方法
***
# super
当派生类和基类具有相同的成员变量和方法时，在这种情况下，可能存在歧义，可以使用super关键字来解决，下面通过具体例子讲解：
```java
class Vehicle {
    int maxSpeed = 100;
    void stop(){
    	System.out.println("Vehicle stop"); 
    }
}
	
class Car extends Vehicle{
	int maxSpeed = 120;
	void display() { 
	    /* print maxSpeed of base class (vehicle) */
	    System.out.println("Maximum Speed: " + super.maxSpeed); 
    }
    void stop(){
    	super.stop();
    } 
}
	
class Test { 
	public static void main(String[] args) { 
	     Car car= new Car(); 
	     car.display();
	     car.stop(); 
	} 
} 
```
输出结果：
```java
Maximum Speed: 100
Vehicle stop
```
***
# abstract
* abstract关键字可以修饰类或方法
* abstract类可以扩展，但不能直接实例化，抽象类的目的是由派生类继承
* abstract方法不在声明他的类中实现，但必须在某个子类中重写
* 抽象类既可以有抽象方法又可以拥有非抽象方法
* 当一个类中某个方法被abstract修饰，则该类也必须被abstract修饰

举例说明：
```java
abstract class A  
{ 
    abstract void m1();  //abstract方法不在声明他的类中实现
      
    // 抽象类既可以有抽象方法又可以拥有非抽象方法 
    void m2() 
    { 
        System.out.println("This is a concrete method."); 
    } 
} 
   
class B extends A  
{  
    // B必须重写A中的抽象方法m1()
    void m1() { 
        System.out.println("B's implementation of m2."); 
    } 
} 
  
public class AbstractDemo  
{ 
    public static void main(String args[])  
    { 
        B b = new B(); 
        b.m1(); 
        b.m2(); 
    } 
} 
```
输出结果：

```java
B's implementation of m2.
This is a concrete method.
```
***
# this
基本上，this关键字用于引用类的当前实例。例如：

```java
class Manager {
    Employees[] employees;
     
    void manageEmployees() {
        int totalEmp = this.employees.length;
        System.out.println("Total employees: " + totalEmp);
        this.report();
    }
     
    void report() { }
}
```
在上面的例子中，this关键字用在了两个地方：
* this.employees.length:用于获取类Manager当前实例的变量
* this.report(): 调用类Manager当前实例的方法

**注意：不能使用this关键字访问静态变量或方法，因为静态成员属于静态类实例而不是对象实例**(String), https://img0.baidu.com/it/u=2970102104,2596451141&fm=26&fmt=auto&gp=0.jpg(String), 原创(String), Java有超过50多个关键字，这篇文章主要讲解一些常见的几个关键字，有兴趣的同学还可以点此查看更多关键字，下面进入正题：(String), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2021-07-28 09:48:46.375(Timestamp), 18(Integer)
2021-07-28 09:48:46.383 DEBUG 7836 --- [http-nio-8080-exec-10] b.l.b.m.B.updateByPrimaryKeySelective    : <==    Updates: 1
2021-07-28 09:48:46.385 DEBUG 7836 --- [http-nio-8080-exec-10] b.l.b.m.BlogTagMapper.deleteByExample    : ==>  Preparing: DELETE FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 09:48:46.385 DEBUG 7836 --- [http-nio-8080-exec-10] b.l.b.m.BlogTagMapper.deleteByExample    : ==> Parameters: 18(Integer)
2021-07-28 09:48:46.385 DEBUG 7836 --- [http-nio-8080-exec-10] b.l.b.m.BlogTagMapper.deleteByExample    : <==    Updates: 1
2021-07-28 09:48:46.387 DEBUG 7836 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.BlogTagMapper.insert   : ==>  Preparing: INSERT INTO blog_tag ( blog_tag_id,blog_id,tag_id ) VALUES( ?,?,? ) 
2021-07-28 09:48:46.387 DEBUG 7836 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.BlogTagMapper.insert   : ==> Parameters: null, 18(Integer), 22(Integer)
2021-07-28 09:48:46.388 DEBUG 7836 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.BlogTagMapper.insert   : <==    Updates: 1
2021-07-28 09:48:46.392  INFO 7836 --- [http-nio-8080-exec-10] black.lyg.blog.service.BlogService       : 删除redis中key为blogtags的hash数据类型
2021-07-28 09:48:46.392 DEBUG 7836 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.selectByPrimaryKey    : ==>  Preparing: SELECT blog_id,type_id,user_id,title,content,first_picture,flag,description,views,appreciation,share_statement,comment,publish,recommend,create_time,update_time FROM blog WHERE blog_id = ? 
2021-07-28 09:48:46.392 DEBUG 7836 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.selectByPrimaryKey    : ==> Parameters: 18(Integer)
2021-07-28 09:48:46.393 DEBUG 7836 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.selectByPrimaryKey    : <==      Total: 1
2021-07-28 09:48:46.395  INFO 7836 --- [http-nio-8080-exec-10] black.lyg.blog.service.BlogService       : 更新redis中TheLatestBlog的数据，标题为Java常见关键字final、static、super、abstract、this
2021-07-28 09:48:46.397  INFO 7836 --- [http-nio-8080-exec-10] black.lyg.blog.service.BlogService       : 更新redis中AllBlog的数据，标题为Java常见关键字final、static、super、abstract、this
2021-07-28 09:48:46.401  INFO 7836 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:48:46.401  INFO 7836 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : result : redirect:/admin/blogs 
2021-07-28 09:49:37.827 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==>  Preparing: SELECT count(0) FROM blog 
2021-07-28 09:49:37.828 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==> Parameters: 
2021-07-28 09:49:37.830 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.findBlogAll_COUNT     : <==      Total: 1
2021-07-28 09:49:37.830 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc LIMIT ? 
2021-07-28 09:49:37.831 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 5(Integer)
2021-07-28 09:49:37.833 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:49:37.833 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 09:49:37.835 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:49:37.835 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 09:49:37.835 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 09:49:37.838 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 09:49:37.838 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:49:37.838 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 09:49:37.840 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:49:37.840 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 09:49:37.840 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 09:49:37.840 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 09:49:37.841 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:49:37.841 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 09:49:37.841 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:49:37.842 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 09:49:37.842 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 09:49:37.843 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 09:49:37.843 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:49:37.844 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 09:49:37.846 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:49:37.846 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 5
2021-07-28 09:49:37.849  INFO 7836 --- [http-nio-8080-exec-1] black.lyg.blog.service.TagService        : 从redis中获取数据：[]
2021-07-28 09:49:37.849 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.TagMapper.findSeveralTopTags     : ==>  Preparing: select distinct t.tag_id,t.name ,count(*) as number from tag t ,blog_tag bt where t.tag_id = bt.tag_id group by t.tag_id, t.name order by number desc limit ? 
2021-07-28 09:49:37.849 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.TagMapper.findSeveralTopTags     : ==> Parameters: 10(Integer)
2021-07-28 09:49:37.851 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.TagMapper.findSeveralTopTags     : <==      Total: 7
2021-07-28 09:49:37.854  INFO 7836 --- [http-nio-8080-exec-1] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=21, name=Redis, BlogNumber=5)
2021-07-28 09:49:37.854  INFO 7836 --- [http-nio-8080-exec-1] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=22, name=Java, BlogNumber=4)
2021-07-28 09:49:37.855  INFO 7836 --- [http-nio-8080-exec-1] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=20, name=设计模式, BlogNumber=3)
2021-07-28 09:49:37.856  INFO 7836 --- [http-nio-8080-exec-1] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=1, name=Spring, BlogNumber=2)
2021-07-28 09:49:37.857  INFO 7836 --- [http-nio-8080-exec-1] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=24, name=测试, BlogNumber=2)
2021-07-28 09:49:37.858  INFO 7836 --- [http-nio-8080-exec-1] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=2, name=Mybatis, BlogNumber=1)
2021-07-28 09:49:37.859  INFO 7836 --- [http-nio-8080-exec-1] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=23, name=MySQL, BlogNumber=1)
2021-07-28 09:49:37.859  INFO 7836 --- [http-nio-8080-exec-1] black.lyg.blog.service.TagService        : 从Mysql中查找到由标签显示博客的数据：[TagTops(tagId=21, name=Redis, BlogNumber=5), TagTops(tagId=22, name=Java, BlogNumber=4), TagTops(tagId=20, name=设计模式, BlogNumber=3), TagTops(tagId=1, name=Spring, BlogNumber=2), TagTops(tagId=24, name=测试, BlogNumber=2), TagTops(tagId=2, name=Mybatis, BlogNumber=1), TagTops(tagId=23, name=MySQL, BlogNumber=1)]
2021-07-28 09:49:37.860  INFO 7836 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 09:49:38.134  INFO 7836 --- [http-nio-8080-exec-5] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 09:49:42.458 DEBUG 7836 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==>  Preparing: SELECT count(0) FROM blog 
2021-07-28 09:49:42.459 DEBUG 7836 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==> Parameters: 
2021-07-28 09:49:42.461 DEBUG 7836 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.findBlogAll_COUNT     : <==      Total: 1
2021-07-28 09:49:42.461 DEBUG 7836 --- [http-nio-8080-exec-3] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc LIMIT ? 
2021-07-28 09:49:42.461 DEBUG 7836 --- [http-nio-8080-exec-3] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 5(Integer)
2021-07-28 09:49:42.462 DEBUG 7836 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:49:42.462 DEBUG 7836 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 09:49:42.463 DEBUG 7836 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:49:42.463 DEBUG 7836 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 09:49:42.463 DEBUG 7836 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 09:49:42.464 DEBUG 7836 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 09:49:42.465 DEBUG 7836 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:49:42.466 DEBUG 7836 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 09:49:42.466 DEBUG 7836 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:49:42.466 DEBUG 7836 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 09:49:42.467 DEBUG 7836 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 09:49:42.467 DEBUG 7836 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 09:49:42.468 DEBUG 7836 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:49:42.469 DEBUG 7836 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 09:49:42.469 DEBUG 7836 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:49:42.469 DEBUG 7836 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 09:49:42.469 DEBUG 7836 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 09:49:42.469 DEBUG 7836 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 09:49:42.470 DEBUG 7836 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:49:42.470 DEBUG 7836 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 09:49:42.470 DEBUG 7836 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:49:42.472 DEBUG 7836 --- [http-nio-8080-exec-3] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 5
2021-07-28 09:49:42.474  INFO 7836 --- [http-nio-8080-exec-3] black.lyg.blog.service.TagService        : 从redis中获取数据：[TagTops(tagId=20, name=设计模式, BlogNumber=3), TagTops(tagId=21, name=Redis, BlogNumber=5), TagTops(tagId=22, name=Java, BlogNumber=4), TagTops(tagId=2, name=Mybatis, BlogNumber=1), TagTops(tagId=1, name=Spring, BlogNumber=2), TagTops(tagId=24, name=测试, BlogNumber=2), TagTops(tagId=23, name=MySQL, BlogNumber=1)]
2021-07-28 09:49:42.474  INFO 7836 --- [http-nio-8080-exec-3] black.lyg.blog.service.TagService        : 从redis中查找到由标签显示博客的数据：[TagTops(tagId=21, name=Redis, BlogNumber=5), TagTops(tagId=22, name=Java, BlogNumber=4), TagTops(tagId=20, name=设计模式, BlogNumber=3), TagTops(tagId=1, name=Spring, BlogNumber=2), TagTops(tagId=24, name=测试, BlogNumber=2), TagTops(tagId=2, name=Mybatis, BlogNumber=1), TagTops(tagId=23, name=MySQL, BlogNumber=1)]
2021-07-28 09:49:42.475  INFO 7836 --- [http-nio-8080-exec-3] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 09:49:42.754  INFO 7836 --- [http-nio-8080-exec-10] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 09:50:21.827  INFO 7836 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.loginPage', args=[]}
2021-07-28 09:50:21.827  INFO 7836 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:50:21.827  INFO 7836 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : result : admin/login 
2021-07-28 09:50:26.641  INFO 7836 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.login', args=[admin, lyg0918, org.apache.catalina.session.StandardSessionFacade@63b820c8, {}]}
2021-07-28 09:50:26.641 DEBUG 7836 --- [http-nio-8080-exec-8] .l.b.m.U.selectUserNameByNameAndPassWord : ==>  Preparing: select * from user where username = ? and password = ? 
2021-07-28 09:50:26.641 DEBUG 7836 --- [http-nio-8080-exec-8] .l.b.m.U.selectUserNameByNameAndPassWord : ==> Parameters: admin(String), 89446CF944BBA2485A8562075A0E0BB7(String)
2021-07-28 09:50:26.642 DEBUG 7836 --- [http-nio-8080-exec-8] .l.b.m.U.selectUserNameByNameAndPassWord : <==      Total: 0
2021-07-28 09:50:26.643  INFO 7836 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:50:26.643  INFO 7836 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : result : redirect:admin 
2021-07-28 09:50:39.546 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==>  Preparing: SELECT count(0) FROM blog 
2021-07-28 09:50:39.546 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==> Parameters: 
2021-07-28 09:50:39.548 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.findBlogAll_COUNT     : <==      Total: 1
2021-07-28 09:50:39.549 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc LIMIT ? 
2021-07-28 09:50:39.549 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 5(Integer)
2021-07-28 09:50:39.551 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:50:39.551 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 09:50:39.552 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:50:39.553 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 09:50:39.553 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 09:50:39.554 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 09:50:39.555 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:50:39.555 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 09:50:39.556 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:50:39.556 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 09:50:39.556 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 09:50:39.557 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 09:50:39.558 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:50:39.558 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 09:50:39.559 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:50:39.559 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 09:50:39.559 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 09:50:39.560 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 09:50:39.560 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:50:39.560 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 09:50:39.561 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:50:39.561 DEBUG 7836 --- [http-nio-8080-exec-1] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 5
2021-07-28 09:50:39.564  INFO 7836 --- [http-nio-8080-exec-1] black.lyg.blog.service.TagService        : 从redis中获取数据：[TagTops(tagId=20, name=设计模式, BlogNumber=3), TagTops(tagId=21, name=Redis, BlogNumber=5), TagTops(tagId=22, name=Java, BlogNumber=4), TagTops(tagId=2, name=Mybatis, BlogNumber=1), TagTops(tagId=1, name=Spring, BlogNumber=2), TagTops(tagId=24, name=测试, BlogNumber=2), TagTops(tagId=23, name=MySQL, BlogNumber=1)]
2021-07-28 09:50:39.564  INFO 7836 --- [http-nio-8080-exec-1] black.lyg.blog.service.TagService        : 从redis中查找到由标签显示博客的数据：[TagTops(tagId=21, name=Redis, BlogNumber=5), TagTops(tagId=22, name=Java, BlogNumber=4), TagTops(tagId=20, name=设计模式, BlogNumber=3), TagTops(tagId=1, name=Spring, BlogNumber=2), TagTops(tagId=24, name=测试, BlogNumber=2), TagTops(tagId=2, name=Mybatis, BlogNumber=1), TagTops(tagId=23, name=MySQL, BlogNumber=1)]
2021-07-28 09:50:39.566  INFO 7836 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 09:50:39.852  INFO 7836 --- [http-nio-8080-exec-5] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 09:50:45.972  INFO 7836 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.loginPage', args=[]}
2021-07-28 09:50:45.973  INFO 7836 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:50:45.973  INFO 7836 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : result : admin/login 
2021-07-28 09:51:04.733  INFO 7836 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.login', args=[admin, lyg0918, org.apache.catalina.session.StandardSessionFacade@63b820c8, {}]}
2021-07-28 09:51:04.733 DEBUG 7836 --- [http-nio-8080-exec-10] .l.b.m.U.selectUserNameByNameAndPassWord : ==>  Preparing: select * from user where username = ? and password = ? 
2021-07-28 09:51:04.733 DEBUG 7836 --- [http-nio-8080-exec-10] .l.b.m.U.selectUserNameByNameAndPassWord : ==> Parameters: admin(String), 89446CF944BBA2485A8562075A0E0BB7(String)
2021-07-28 09:51:04.733 DEBUG 7836 --- [http-nio-8080-exec-10] .l.b.m.U.selectUserNameByNameAndPassWord : <==      Total: 0
2021-07-28 09:51:04.734  INFO 7836 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:51:04.734  INFO 7836 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : result : redirect:admin 
2021-07-28 09:51:25.009  INFO 7836 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.loginPage', args=[]}
2021-07-28 09:51:25.009  INFO 7836 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:51:25.009  INFO 7836 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : result : admin/login 
2021-07-28 09:51:31.241  INFO 7836 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.login', args=[zhangsan, 123456, org.apache.catalina.session.StandardSessionFacade@63b820c8, {}]}
2021-07-28 09:51:31.241 DEBUG 7836 --- [http-nio-8080-exec-7] .l.b.m.U.selectUserNameByNameAndPassWord : ==>  Preparing: select * from user where username = ? and password = ? 
2021-07-28 09:51:31.242 DEBUG 7836 --- [http-nio-8080-exec-7] .l.b.m.U.selectUserNameByNameAndPassWord : ==> Parameters: zhangsan(String), E10ADC3949BA59ABBE56E057F20F883E(String)
2021-07-28 09:51:31.243 DEBUG 7836 --- [http-nio-8080-exec-7] .l.b.m.U.selectUserNameByNameAndPassWord : <==      Total: 1
2021-07-28 09:51:31.243  INFO 7836 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:51:31.243  INFO 7836 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : result : admin/index 
2021-07-28 09:51:31.505  INFO 7836 --- [http-nio-8080-exec-4] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 09:51:36.970  INFO 7836 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/logout', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.logout', args=[org.apache.catalina.session.StandardSessionFacade@63b820c8]}
2021-07-28 09:51:36.971  INFO 7836 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:51:36.971  INFO 7836 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : result : redirect:admin 
2021-07-28 09:51:36.976  INFO 7836 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.loginPage', args=[]}
2021-07-28 09:51:36.976  INFO 7836 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:51:36.976  INFO 7836 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : result : admin/login 
2021-07-28 09:51:36.987 ERROR 7836 --- [http-nio-8080-exec-9] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: Cannot call sendError() after the response has been committed] with root cause

java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:472) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at com.alibaba.druid.support.http.WebStatFilter$StatHttpServletResponseWrapper.sendError(WebStatFilter.java:343) ~[druid-1.1.16.jar:1.1.16]
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:488) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:53) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124) ~[druid-1.1.16.jar:1.1.16]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_221]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_221]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_221]

2021-07-28 09:51:36.992 ERROR 7836 --- [http-nio-8080-exec-9] s.e.ErrorMvcAutoConfiguration$StaticView : Cannot render error page for request [/admin/admin] and exception [Cannot call sendError() after the response has been committed] as the response has already been committed. As a result, the response may have the wrong status code.
2021-07-28 09:51:44.277  INFO 7836 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.login', args=[admin, 123456, org.apache.catalina.session.StandardSessionFacade@63b820c8, {}]}
2021-07-28 09:51:44.278 DEBUG 7836 --- [http-nio-8080-exec-3] .l.b.m.U.selectUserNameByNameAndPassWord : ==>  Preparing: select * from user where username = ? and password = ? 
2021-07-28 09:51:44.278 DEBUG 7836 --- [http-nio-8080-exec-3] .l.b.m.U.selectUserNameByNameAndPassWord : ==> Parameters: admin(String), E10ADC3949BA59ABBE56E057F20F883E(String)
2021-07-28 09:51:44.279 DEBUG 7836 --- [http-nio-8080-exec-3] .l.b.m.U.selectUserNameByNameAndPassWord : <==      Total: 0
2021-07-28 09:51:44.279  INFO 7836 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:51:44.279  INFO 7836 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : result : redirect:admin 
2021-07-28 09:51:44.284  INFO 7836 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.loginPage', args=[]}
2021-07-28 09:51:44.284  INFO 7836 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:51:44.284  INFO 7836 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : result : admin/login 
2021-07-28 09:51:44.291 ERROR 7836 --- [http-nio-8080-exec-10] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: Cannot call sendError() after the response has been committed] with root cause

java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:472) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at com.alibaba.druid.support.http.WebStatFilter$StatHttpServletResponseWrapper.sendError(WebStatFilter.java:343) ~[druid-1.1.16.jar:1.1.16]
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:488) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:53) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124) ~[druid-1.1.16.jar:1.1.16]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_221]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_221]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_221]

2021-07-28 09:51:44.294 ERROR 7836 --- [http-nio-8080-exec-10] s.e.ErrorMvcAutoConfiguration$StaticView : Cannot render error page for request [/admin/admin] and exception [Cannot call sendError() after the response has been committed] as the response has already been committed. As a result, the response may have the wrong status code.
2021-07-28 09:51:49.781  INFO 7836 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.login', args=[admin, lyg0918, org.apache.catalina.session.StandardSessionFacade@63b820c8, {}]}
2021-07-28 09:51:49.782 DEBUG 7836 --- [http-nio-8080-exec-2] .l.b.m.U.selectUserNameByNameAndPassWord : ==>  Preparing: select * from user where username = ? and password = ? 
2021-07-28 09:51:49.782 DEBUG 7836 --- [http-nio-8080-exec-2] .l.b.m.U.selectUserNameByNameAndPassWord : ==> Parameters: admin(String), 89446CF944BBA2485A8562075A0E0BB7(String)
2021-07-28 09:51:49.783 DEBUG 7836 --- [http-nio-8080-exec-2] .l.b.m.U.selectUserNameByNameAndPassWord : <==      Total: 0
2021-07-28 09:51:49.783  INFO 7836 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:51:49.783  INFO 7836 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : result : redirect:admin 
2021-07-28 09:51:49.788  INFO 7836 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.loginPage', args=[]}
2021-07-28 09:51:49.788  INFO 7836 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:51:49.788  INFO 7836 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : result : admin/login 
2021-07-28 09:51:49.792 ERROR 7836 --- [http-nio-8080-exec-8] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: Cannot call sendError() after the response has been committed] with root cause

java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:472) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at com.alibaba.druid.support.http.WebStatFilter$StatHttpServletResponseWrapper.sendError(WebStatFilter.java:343) ~[druid-1.1.16.jar:1.1.16]
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:488) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:53) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124) ~[druid-1.1.16.jar:1.1.16]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_221]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_221]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_221]

2021-07-28 09:51:49.795 ERROR 7836 --- [http-nio-8080-exec-8] s.e.ErrorMvcAutoConfiguration$StaticView : Cannot render error page for request [/admin/admin] and exception [Cannot call sendError() after the response has been committed] as the response has already been committed. As a result, the response may have the wrong status code.
2021-07-28 09:51:58.297  INFO 7836 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.login', args=[admin, lyg0918, org.apache.catalina.session.StandardSessionFacade@63b820c8, {}]}
2021-07-28 09:51:58.297 DEBUG 7836 --- [http-nio-8080-exec-7] .l.b.m.U.selectUserNameByNameAndPassWord : ==>  Preparing: select * from user where username = ? and password = ? 
2021-07-28 09:51:58.297 DEBUG 7836 --- [http-nio-8080-exec-7] .l.b.m.U.selectUserNameByNameAndPassWord : ==> Parameters: admin(String), 89446CF944BBA2485A8562075A0E0BB7(String)
2021-07-28 09:51:58.299 DEBUG 7836 --- [http-nio-8080-exec-7] .l.b.m.U.selectUserNameByNameAndPassWord : <==      Total: 0
2021-07-28 09:51:58.299  INFO 7836 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:51:58.299  INFO 7836 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : result : redirect:admin 
2021-07-28 09:51:58.304  INFO 7836 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.loginPage', args=[]}
2021-07-28 09:51:58.305  INFO 7836 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:51:58.305  INFO 7836 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : result : admin/login 
2021-07-28 09:51:58.309 ERROR 7836 --- [http-nio-8080-exec-4] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: Cannot call sendError() after the response has been committed] with root cause

java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:472) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at com.alibaba.druid.support.http.WebStatFilter$StatHttpServletResponseWrapper.sendError(WebStatFilter.java:343) ~[druid-1.1.16.jar:1.1.16]
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:488) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:53) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124) ~[druid-1.1.16.jar:1.1.16]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_221]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_221]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_221]

2021-07-28 09:51:58.313 ERROR 7836 --- [http-nio-8080-exec-4] s.e.ErrorMvcAutoConfiguration$StaticView : Cannot render error page for request [/admin/admin] and exception [Cannot call sendError() after the response has been committed] as the response has already been committed. As a result, the response may have the wrong status code.
2021-07-28 09:52:19.028  INFO 10436 --- [restartedMain] black.lyg.blog.BlogApplication           : Starting BlogApplication on Administraror with PID 10436 (D:\Desktop\blog\blog-master\target\classes started by Administrator in D:\Desktop\blog\blog-master)
2021-07-28 09:52:19.030 DEBUG 10436 --- [restartedMain] black.lyg.blog.BlogApplication           : Running with Spring Boot v2.2.6.RELEASE, Spring v5.2.5.RELEASE
2021-07-28 09:52:19.031  INFO 10436 --- [restartedMain] black.lyg.blog.BlogApplication           : The following profiles are active: dev
2021-07-28 09:52:19.076  INFO 10436 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-07-28 09:52:19.076  INFO 10436 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-07-28 09:52:19.559  INFO 10436 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-28 09:52:19.561  INFO 10436 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-28 09:52:19.584  INFO 10436 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14ms. Found 0 Redis repository interfaces.
2021-07-28 09:52:19.668  WARN 10436 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[black.lyg.blog]' package. Please check your configuration.
2021-07-28 09:52:20.146  INFO 10436 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-07-28 09:52:20.152  INFO 10436 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-28 09:52:20.152  INFO 10436 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-28 09:52:20.153  INFO 10436 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : An older version [1.2.14] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.23]
2021-07-28 09:52:20.154  INFO 10436 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.14] using APR version [1.6.2].
2021-07-28 09:52:20.154  INFO 10436 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-07-28 09:52:20.154  INFO 10436 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-07-28 09:52:21.175  INFO 10436 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.0.2l  25 May 2017]
2021-07-28 09:52:21.273  INFO 10436 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-28 09:52:21.273  INFO 10436 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2197 ms
2021-07-28 09:52:21.308  INFO 10436 --- [restartedMain] o.s.boot.web.servlet.RegistrationBean    : Filter webStatFilter was not registered (possibly already registered?)
2021-07-28 09:52:22.208  INFO 10436 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-28 09:52:22.286  INFO 10436 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-07-28 09:52:22.709  INFO 10436 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-07-28 09:52:22.756  INFO 10436 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-07-28 09:52:22.756  INFO 10436 --- [restartedMain] black.lyg.blog.BlogApplication           : Started BlogApplication in 4.183 seconds (JVM running for 6.975)
2021-07-28 09:52:22.787  INFO 10436 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-28 09:52:23.748 DEBUG 10436 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc 
2021-07-28 09:52:23.764 DEBUG 10436 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 
2021-07-28 09:52:23.787 DEBUG 10436 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:52:23.787 DEBUG 10436 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 09:52:23.789 DEBUG 10436 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:52:23.790 DEBUG 10436 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 09:52:23.791 DEBUG 10436 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 09:52:23.792 DEBUG 10436 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 09:52:23.793 DEBUG 10436 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:52:23.793 DEBUG 10436 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 09:52:23.794 DEBUG 10436 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:52:23.794 DEBUG 10436 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 09:52:23.794 DEBUG 10436 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 09:52:23.795 DEBUG 10436 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 09:52:23.796 DEBUG 10436 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:52:23.796 DEBUG 10436 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 09:52:23.797 DEBUG 10436 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:52:23.797 DEBUG 10436 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 09:52:23.797 DEBUG 10436 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 09:52:23.798 DEBUG 10436 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 09:52:23.799 DEBUG 10436 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:52:23.799 DEBUG 10436 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 09:52:23.800 DEBUG 10436 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:52:23.803 DEBUG 10436 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 10
2021-07-28 09:52:23.893  INFO 10436 --- [restartedMain] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2021-07-28 09:52:23.893  INFO 10436 --- [restartedMain] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2021-07-28 09:52:25.570  INFO 10436 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java常见关键字final、static、super、abstract、this
2021-07-28 09:52:25.571  INFO 10436 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：挖掘机技术哪家强
2021-07-28 09:52:25.573  INFO 10436 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：山东菏泽曹县流弊六六六，卧底宝贝儿
2021-07-28 09:52:25.574  INFO 10436 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：随笔
2021-07-28 09:52:25.576  INFO 10436 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：欢迎使用 Markdown在线编辑器 MdEditor
2021-07-28 09:52:25.577  INFO 10436 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java中 equals() 和 hashCode()的关系
2021-07-28 09:52:25.578  INFO 10436 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（二）：Hash
2021-07-28 09:52:25.579  INFO 10436 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（一）：String
2021-07-28 09:52:25.580  INFO 10436 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java合并两个int数组
2021-07-28 09:52:25.581  INFO 10436 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：条件注解@Conditional
2021-07-28 09:52:25.583  INFO 10436 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 初始化redis中blogCount的数量为：10
2021-07-28 09:52:29.521  INFO 10436 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-28 09:52:29.521  INFO 10436 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-28 09:52:29.529  INFO 10436 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 8 ms
2021-07-28 09:52:29.689 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==>  Preparing: SELECT count(0) FROM blog 
2021-07-28 09:52:29.690 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==> Parameters: 
2021-07-28 09:52:29.692 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.findBlogAll_COUNT     : <==      Total: 1
2021-07-28 09:52:29.693 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc LIMIT ? 
2021-07-28 09:52:29.694 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 5(Integer)
2021-07-28 09:52:29.696 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:52:29.696 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 09:52:29.697 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:52:29.698 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 09:52:29.698 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 09:52:29.699 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 09:52:29.699 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:52:29.699 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 09:52:29.700 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:52:29.701 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 09:52:29.701 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 09:52:29.701 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 09:52:29.702 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:52:29.702 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 09:52:29.703 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:52:29.704 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 09:52:29.704 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 09:52:29.705 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 09:52:29.706 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:52:29.706 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 09:52:29.707 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:52:29.708 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 5
2021-07-28 09:52:29.739  INFO 10436 --- [http-nio-8080-exec-1] black.lyg.blog.service.TagService        : 从redis中获取数据：[TagTops(tagId=20, name=设计模式, BlogNumber=3), TagTops(tagId=21, name=Redis, BlogNumber=5), TagTops(tagId=22, name=Java, BlogNumber=4), TagTops(tagId=2, name=Mybatis, BlogNumber=1), TagTops(tagId=1, name=Spring, BlogNumber=2), TagTops(tagId=24, name=测试, BlogNumber=2), TagTops(tagId=23, name=MySQL, BlogNumber=1)]
2021-07-28 09:52:29.740  INFO 10436 --- [http-nio-8080-exec-1] black.lyg.blog.service.TagService        : 从redis中查找到由标签显示博客的数据：[TagTops(tagId=21, name=Redis, BlogNumber=5), TagTops(tagId=22, name=Java, BlogNumber=4), TagTops(tagId=20, name=设计模式, BlogNumber=3), TagTops(tagId=1, name=Spring, BlogNumber=2), TagTops(tagId=24, name=测试, BlogNumber=2), TagTops(tagId=2, name=Mybatis, BlogNumber=1), TagTops(tagId=23, name=MySQL, BlogNumber=1)]
2021-07-28 09:52:29.752  INFO 10436 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 09:52:30.299  INFO 10436 --- [http-nio-8080-exec-5] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 09:52:37.847  INFO 10436 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.loginPage', args=[]}
2021-07-28 09:52:37.851  INFO 10436 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:52:37.851  INFO 10436 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : result : admin/login 
2021-07-28 09:52:45.743  INFO 10436 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.login', args=[admin, lyg0918, org.apache.catalina.session.StandardSessionFacade@11e769f4, {}]}
2021-07-28 09:52:45.744 DEBUG 10436 --- [http-nio-8080-exec-2] .l.b.m.U.selectUserNameByNameAndPassWord : ==>  Preparing: select * from user where username = ? and password = ? 
2021-07-28 09:52:45.744 DEBUG 10436 --- [http-nio-8080-exec-2] .l.b.m.U.selectUserNameByNameAndPassWord : ==> Parameters: admin(String), 89446CF944BBA2485A8562075A0E0BB7(String)
2021-07-28 09:52:45.745 DEBUG 10436 --- [http-nio-8080-exec-2] .l.b.m.U.selectUserNameByNameAndPassWord : <==      Total: 0
2021-07-28 09:52:45.745  INFO 10436 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:52:45.745  INFO 10436 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : result : redirect:admin 
2021-07-28 09:52:45.770  INFO 10436 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.loginPage', args=[]}
2021-07-28 09:52:45.771  INFO 10436 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:52:45.771  INFO 10436 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : result : admin/login 
2021-07-28 09:52:45.783 ERROR 10436 --- [http-nio-8080-exec-6] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: Cannot call sendError() after the response has been committed] with root cause

java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:472) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at com.alibaba.druid.support.http.WebStatFilter$StatHttpServletResponseWrapper.sendError(WebStatFilter.java:343) ~[druid-1.1.16.jar:1.1.16]
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:488) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:53) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124) ~[druid-1.1.16.jar:1.1.16]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_221]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_221]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_221]

2021-07-28 09:52:45.790 ERROR 10436 --- [http-nio-8080-exec-6] s.e.ErrorMvcAutoConfiguration$StaticView : Cannot render error page for request [/admin/admin] and exception [Cannot call sendError() after the response has been committed] as the response has already been committed. As a result, the response may have the wrong status code.
2021-07-28 09:53:05.721  INFO 10436 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.login', args=[admin, 10086, org.apache.catalina.session.StandardSessionFacade@11e769f4, {}]}
2021-07-28 09:53:05.721 DEBUG 10436 --- [http-nio-8080-exec-4] .l.b.m.U.selectUserNameByNameAndPassWord : ==>  Preparing: select * from user where username = ? and password = ? 
2021-07-28 09:53:05.721 DEBUG 10436 --- [http-nio-8080-exec-4] .l.b.m.U.selectUserNameByNameAndPassWord : ==> Parameters: admin(String), 6412121CBB2DC2CB9E460CFEE7046BE2(String)
2021-07-28 09:53:05.723 DEBUG 10436 --- [http-nio-8080-exec-4] .l.b.m.U.selectUserNameByNameAndPassWord : <==      Total: 1
2021-07-28 09:53:05.723  INFO 10436 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:53:05.723  INFO 10436 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : result : admin/index 
2021-07-28 09:53:06.008  INFO 10436 --- [http-nio-8080-exec-9] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 09:53:09.222  INFO 10436 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/personal/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.PersonalController.blogs', args=[{}, admin, 1]}
2021-07-28 09:53:09.228 DEBUG 10436 --- [http-nio-8080-exec-10] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 09:53:09.228 DEBUG 10436 --- [http-nio-8080-exec-10] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 09:53:09.229 DEBUG 10436 --- [http-nio-8080-exec-10] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 09:53:09.229 DEBUG 10436 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 09:53:09.229 DEBUG 10436 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 09:53:09.230 DEBUG 10436 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 09:53:09.230  INFO 10436 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:53:09.230  INFO 10436 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : result : admin/personal 
2021-07-28 09:53:17.797  INFO 10436 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/personal/update', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.PersonalController.userInfoUadate', args=[org.apache.catalina.session.StandardSessionFacade@11e769f4, 玩泥不, lyg0918@qq.com, lyg0918]}
2021-07-28 09:53:17.798 DEBUG 10436 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? 
2021-07-28 09:53:17.798 DEBUG 10436 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String)
2021-07-28 09:53:17.800 DEBUG 10436 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 09:53:17.813 DEBUG 10436 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.updateByPrimaryKey    : ==>  Preparing: UPDATE user SET nick_name = ?,username = ?,password = ?,email = ?,avatar = ?,type = ?,create_time = ?,update_time = ? WHERE user_id = ? 
2021-07-28 09:53:17.815 DEBUG 10436 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.updateByPrimaryKey    : ==> Parameters: 玩泥不(String), admin(String), 89446CF944BBA2485A8562075A0E0BB7(String), lyg0918@qq.com(String), https://cdn.glitch.com/bcca76bf-b6da-4c18-9b77-b7d3e3601f26%2Fuser.png?v=1627092421035(String), null, 2021-07-24 19:53:23.0(Timestamp), null, 1(Integer)
2021-07-28 09:53:17.820 DEBUG 10436 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.updateByPrimaryKey    : <==    Updates: 1
2021-07-28 09:53:17.820  INFO 10436 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:53:17.820  INFO 10436 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : result : redirect:/admin/personal/admin 
2021-07-28 09:53:17.827  INFO 10436 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/personal/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.PersonalController.blogs', args=[{}, admin, 1]}
2021-07-28 09:53:17.828 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 09:53:17.829 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 09:53:17.829 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 09:53:17.830 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 09:53:17.830 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 09:53:17.831 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 09:53:17.832  INFO 10436 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:53:17.832  INFO 10436 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : result : admin/personal 
2021-07-28 09:53:20.615  INFO 10436 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 09:53:20.618 DEBUG 10436 --- [http-nio-8080-exec-4] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 09:53:20.618 DEBUG 10436 --- [http-nio-8080-exec-4] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 09:53:20.619 DEBUG 10436 --- [http-nio-8080-exec-4] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 09:53:20.620 DEBUG 10436 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 09:53:20.620 DEBUG 10436 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 09:53:20.621 DEBUG 10436 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 09:53:20.621 DEBUG 10436 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 09:53:20.621 DEBUG 10436 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 09:53:20.623 DEBUG 10436 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:53:20.624 DEBUG 10436 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 09:53:20.624 DEBUG 10436 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:53:20.625 DEBUG 10436 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 09:53:20.625 DEBUG 10436 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 09:53:20.626 DEBUG 10436 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 09:53:20.627 DEBUG 10436 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:53:20.627 DEBUG 10436 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 09:53:20.628 DEBUG 10436 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:53:20.629 DEBUG 10436 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:53:20.629 DEBUG 10436 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 09:53:20.630 DEBUG 10436 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:53:20.630 DEBUG 10436 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 8
2021-07-28 09:53:20.630 DEBUG 10436 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 09:53:20.630 DEBUG 10436 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 09:53:20.632 DEBUG 10436 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 09:53:20.632  INFO 10436 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:53:20.632  INFO 10436 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 09:53:20.910  INFO 10436 --- [http-nio-8080-exec-10] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 09:53:22.967  INFO 10436 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/22/edit', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.editPage', args=[{}, 22]}
2021-07-28 09:53:22.969  INFO 10436 --- [http-nio-8080-exec-3] black.lyg.blog.service.BlogService       : 从redis中获取Blog的数据，标题为随笔
2021-07-28 09:53:22.990 DEBUG 10436 --- [http-nio-8080-exec-3] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 09:53:22.990 DEBUG 10436 --- [http-nio-8080-exec-3] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 22(Integer)
2021-07-28 09:53:22.991 DEBUG 10436 --- [http-nio-8080-exec-3] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 09:53:22.992 DEBUG 10436 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 09:53:22.992 DEBUG 10436 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 09:53:22.993 DEBUG 10436 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 09:53:22.994 DEBUG 10436 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TagMapper.selectAll    : ==>  Preparing: SELECT tag_id,name FROM tag 
2021-07-28 09:53:22.994 DEBUG 10436 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TagMapper.selectAll    : ==> Parameters: 
2021-07-28 09:53:22.995 DEBUG 10436 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TagMapper.selectAll    : <==      Total: 7
2021-07-28 09:53:22.996  INFO 10436 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:53:22.996  INFO 10436 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : result : admin/blogs-input 
2021-07-28 09:53:23.248  INFO 10436 --- [http-nio-8080-exec-8] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 09:53:28.634  INFO 10436 --- [http-nio-8080-exec-11] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/add', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogAdd', args=[Blog(blogId=22, typeId=4, userId=null, title=随笔, content=| 帐户类型 | 免费帐户 | 标准帐户 | 高级帐户 |
| --- | --- | --- | --- |
| 帐户流量 | 60M | 1GB | 10GB |
| 设备数目 | 2台 | 无限制 | 无限制 |
| 当前价格 | 免费 | ￥8.17/月 | ￥12.33/月|, firstPicture=http://b-ssl.duitang.com/uploads/item/201807/27/20180727062342_45mCi.jpeg, flag=原创, description=Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。, views=null, appreciation=null, shareStatement=null, comment=true, publish=false, recommend=true, createTime=null, updateTime=null, type=null, user=null, tags=null), org.apache.catalina.session.StandardSessionFacade@11e769f4, {}, 24]}
2021-07-28 09:53:28.635 DEBUG 10436 --- [http-nio-8080-exec-11] b.l.b.m.TypeMapper.selectByPrimaryKey    : ==>  Preparing: SELECT type_id,name FROM type WHERE type_id = ? 
2021-07-28 09:53:28.635 DEBUG 10436 --- [http-nio-8080-exec-11] b.l.b.m.TypeMapper.selectByPrimaryKey    : ==> Parameters: 4(Integer)
2021-07-28 09:53:28.636 DEBUG 10436 --- [http-nio-8080-exec-11] b.l.b.m.TypeMapper.selectByPrimaryKey    : <==      Total: 1
2021-07-28 09:53:28.637 DEBUG 10436 --- [http-nio-8080-exec-11] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 09:53:28.637 DEBUG 10436 --- [http-nio-8080-exec-11] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 24(String)
2021-07-28 09:53:28.638 DEBUG 10436 --- [http-nio-8080-exec-11] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 09:53:28.647 DEBUG 10436 --- [http-nio-8080-exec-11] b.l.b.m.B.updateByPrimaryKeySelective    : ==>  Preparing: UPDATE blog SET type_id = ?,user_id = ?,title = ?,content = ?,first_picture = ?,flag = ?,description = ?,appreciation = ?,share_statement = ?,comment = ?,publish = ?,recommend = ?,update_time = ? WHERE blog_id = ? 
2021-07-28 09:53:28.648 DEBUG 10436 --- [http-nio-8080-exec-11] b.l.b.m.B.updateByPrimaryKeySelective    : ==> Parameters: 4(Integer), 1(Integer), 随笔(String), | 帐户类型 | 免费帐户 | 标准帐户 | 高级帐户 |
| --- | --- | --- | --- |
| 帐户流量 | 60M | 1GB | 10GB |
| 设备数目 | 2台 | 无限制 | 无限制 |
| 当前价格 | 免费 | ￥8.17/月 | ￥12.33/月|(String), http://b-ssl.duitang.com/uploads/item/201807/27/20180727062342_45mCi.jpeg(String), 原创(String), Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。(String), false(Boolean), false(Boolean), true(Boolean), false(Boolean), true(Boolean), 2021-07-28 09:53:28.643(Timestamp), 22(Integer)
2021-07-28 09:53:28.649 DEBUG 10436 --- [http-nio-8080-exec-11] b.l.b.m.B.updateByPrimaryKeySelective    : <==    Updates: 1
2021-07-28 09:53:28.650 DEBUG 10436 --- [http-nio-8080-exec-11] b.l.b.m.BlogTagMapper.deleteByExample    : ==>  Preparing: DELETE FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 09:53:28.650 DEBUG 10436 --- [http-nio-8080-exec-11] b.l.b.m.BlogTagMapper.deleteByExample    : ==> Parameters: 22(Integer)
2021-07-28 09:53:28.651 DEBUG 10436 --- [http-nio-8080-exec-11] b.l.b.m.BlogTagMapper.deleteByExample    : <==    Updates: 1
2021-07-28 09:53:28.652 DEBUG 10436 --- [http-nio-8080-exec-11] b.lyg.blog.mapper.BlogTagMapper.insert   : ==>  Preparing: INSERT INTO blog_tag ( blog_tag_id,blog_id,tag_id ) VALUES( ?,?,? ) 
2021-07-28 09:53:28.652 DEBUG 10436 --- [http-nio-8080-exec-11] b.lyg.blog.mapper.BlogTagMapper.insert   : ==> Parameters: null, 22(Integer), 24(Integer)
2021-07-28 09:53:28.654 DEBUG 10436 --- [http-nio-8080-exec-11] b.lyg.blog.mapper.BlogTagMapper.insert   : <==    Updates: 1
2021-07-28 09:53:28.655  INFO 10436 --- [http-nio-8080-exec-11] black.lyg.blog.service.BlogService       : 删除redis中key为blogtags的hash数据类型
2021-07-28 09:53:28.656 DEBUG 10436 --- [http-nio-8080-exec-11] b.l.b.m.BlogMapper.selectByPrimaryKey    : ==>  Preparing: SELECT blog_id,type_id,user_id,title,content,first_picture,flag,description,views,appreciation,share_statement,comment,publish,recommend,create_time,update_time FROM blog WHERE blog_id = ? 
2021-07-28 09:53:28.657 DEBUG 10436 --- [http-nio-8080-exec-11] b.l.b.m.BlogMapper.selectByPrimaryKey    : ==> Parameters: 22(Integer)
2021-07-28 09:53:28.658 DEBUG 10436 --- [http-nio-8080-exec-11] b.l.b.m.BlogMapper.selectByPrimaryKey    : <==      Total: 1
2021-07-28 09:53:28.661  INFO 10436 --- [http-nio-8080-exec-11] black.lyg.blog.service.BlogService       : 更新redis中TheLatestBlog的数据，标题为随笔
2021-07-28 09:53:28.663  INFO 10436 --- [http-nio-8080-exec-11] black.lyg.blog.service.BlogService       : 更新redis中AllBlog的数据，标题为随笔
2021-07-28 09:53:28.687  INFO 10436 --- [http-nio-8080-exec-11] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:53:28.687  INFO 10436 --- [http-nio-8080-exec-11] black.lyg.blog.aspect.LogAspect          : result : redirect:/admin/blogs 
2021-07-28 09:53:35.066  INFO 10436 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 09:53:35.066 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 09:53:35.067 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 09:53:35.068 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 09:53:35.069 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 09:53:35.069 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 09:53:35.070 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 09:53:35.071 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 09:53:35.071 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 09:53:35.073 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:53:35.073 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 09:53:35.074 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:53:35.075 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 09:53:35.075 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 09:53:35.075 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 09:53:35.076 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:53:35.077 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 09:53:35.077 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:53:35.078 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:53:35.078 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 09:53:35.079 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:53:35.079 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 8
2021-07-28 09:53:35.080 DEBUG 10436 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 09:53:35.080 DEBUG 10436 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 09:53:35.081 DEBUG 10436 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 09:53:35.081  INFO 10436 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:53:35.081  INFO 10436 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 09:53:35.328  INFO 10436 --- [http-nio-8080-exec-9] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 09:53:38.280  INFO 10436 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/22/edit', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.editPage', args=[{}, 22]}
2021-07-28 09:53:38.282  INFO 10436 --- [http-nio-8080-exec-5] black.lyg.blog.service.BlogService       : 从redis中获取Blog的数据，标题为随笔
2021-07-28 09:53:38.283 DEBUG 10436 --- [http-nio-8080-exec-5] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 09:53:38.283 DEBUG 10436 --- [http-nio-8080-exec-5] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 22(Integer)
2021-07-28 09:53:38.285 DEBUG 10436 --- [http-nio-8080-exec-5] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 09:53:38.285 DEBUG 10436 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 09:53:38.286 DEBUG 10436 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 09:53:38.286 DEBUG 10436 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 09:53:38.287 DEBUG 10436 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TagMapper.selectAll    : ==>  Preparing: SELECT tag_id,name FROM tag 
2021-07-28 09:53:38.287 DEBUG 10436 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TagMapper.selectAll    : ==> Parameters: 
2021-07-28 09:53:38.288 DEBUG 10436 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TagMapper.selectAll    : <==      Total: 7
2021-07-28 09:53:38.288  INFO 10436 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:53:38.288  INFO 10436 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : result : admin/blogs-input 
2021-07-28 09:53:38.533  INFO 10436 --- [http-nio-8080-exec-6] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 09:53:40.200  INFO 10436 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/add', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogAdd', args=[Blog(blogId=22, typeId=4, userId=null, title=随笔, content=| 帐户类型 | 免费帐户 | 标准帐户 | 高级帐户 |
| --- | --- | --- | --- |
| 帐户流量 | 60M | 1GB | 10GB |
| 设备数目 | 2台 | 无限制 | 无限制 |
| 当前价格 | 免费 | ￥8.17/月 | ￥12.33/月|, firstPicture=http://b-ssl.duitang.com/uploads/item/201807/27/20180727062342_45mCi.jpeg, flag=原创, description=Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。, views=null, appreciation=null, shareStatement=null, comment=true, publish=true, recommend=true, createTime=null, updateTime=null, type=null, user=null, tags=null), org.apache.catalina.session.StandardSessionFacade@11e769f4, {}, 24]}
2021-07-28 09:53:40.200 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.TypeMapper.selectByPrimaryKey    : ==>  Preparing: SELECT type_id,name FROM type WHERE type_id = ? 
2021-07-28 09:53:40.201 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.TypeMapper.selectByPrimaryKey    : ==> Parameters: 4(Integer)
2021-07-28 09:53:40.201 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.TypeMapper.selectByPrimaryKey    : <==      Total: 1
2021-07-28 09:53:40.202 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 09:53:40.203 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 24(String)
2021-07-28 09:53:40.203 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 09:53:40.204 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.B.updateByPrimaryKeySelective    : ==>  Preparing: UPDATE blog SET type_id = ?,user_id = ?,title = ?,content = ?,first_picture = ?,flag = ?,description = ?,appreciation = ?,share_statement = ?,comment = ?,publish = ?,recommend = ?,update_time = ? WHERE blog_id = ? 
2021-07-28 09:53:40.206 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.B.updateByPrimaryKeySelective    : ==> Parameters: 4(Integer), 1(Integer), 随笔(String), | 帐户类型 | 免费帐户 | 标准帐户 | 高级帐户 |
| --- | --- | --- | --- |
| 帐户流量 | 60M | 1GB | 10GB |
| 设备数目 | 2台 | 无限制 | 无限制 |
| 当前价格 | 免费 | ￥8.17/月 | ￥12.33/月|(String), http://b-ssl.duitang.com/uploads/item/201807/27/20180727062342_45mCi.jpeg(String), 原创(String), Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。(String), false(Boolean), false(Boolean), true(Boolean), true(Boolean), true(Boolean), 2021-07-28 09:53:40.204(Timestamp), 22(Integer)
2021-07-28 09:53:40.207 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.B.updateByPrimaryKeySelective    : <==    Updates: 1
2021-07-28 09:53:40.208 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.BlogTagMapper.deleteByExample    : ==>  Preparing: DELETE FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 09:53:40.208 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.BlogTagMapper.deleteByExample    : ==> Parameters: 22(Integer)
2021-07-28 09:53:40.209 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.BlogTagMapper.deleteByExample    : <==    Updates: 1
2021-07-28 09:53:40.209 DEBUG 10436 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.BlogTagMapper.insert   : ==>  Preparing: INSERT INTO blog_tag ( blog_tag_id,blog_id,tag_id ) VALUES( ?,?,? ) 
2021-07-28 09:53:40.210 DEBUG 10436 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.BlogTagMapper.insert   : ==> Parameters: null, 22(Integer), 24(Integer)
2021-07-28 09:53:40.211 DEBUG 10436 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.BlogTagMapper.insert   : <==    Updates: 1
2021-07-28 09:53:40.213  INFO 10436 --- [http-nio-8080-exec-7] black.lyg.blog.service.BlogService       : 删除redis中key为blogtags的hash数据类型
2021-07-28 09:53:40.213 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.selectByPrimaryKey    : ==>  Preparing: SELECT blog_id,type_id,user_id,title,content,first_picture,flag,description,views,appreciation,share_statement,comment,publish,recommend,create_time,update_time FROM blog WHERE blog_id = ? 
2021-07-28 09:53:40.213 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.selectByPrimaryKey    : ==> Parameters: 22(Integer)
2021-07-28 09:53:40.214 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.selectByPrimaryKey    : <==      Total: 1
2021-07-28 09:53:40.215  INFO 10436 --- [http-nio-8080-exec-7] black.lyg.blog.service.BlogService       : 更新redis中TheLatestBlog的数据，标题为随笔
2021-07-28 09:53:40.216  INFO 10436 --- [http-nio-8080-exec-7] black.lyg.blog.service.BlogService       : 更新redis中AllBlog的数据，标题为随笔
2021-07-28 09:53:40.219  INFO 10436 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:53:40.219  INFO 10436 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : result : redirect:/admin/blogs 
2021-07-28 09:54:03.721  INFO 10436 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/types', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.TypeController.findAllTypes', args=[{}, 1]}
2021-07-28 09:54:03.725 DEBUG 10436 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectAll_COUNT  : ==>  Preparing: SELECT count(0) FROM type 
2021-07-28 09:54:03.725 DEBUG 10436 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectAll_COUNT  : ==> Parameters: 
2021-07-28 09:54:03.727 DEBUG 10436 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectAll_COUNT  : <==      Total: 1
2021-07-28 09:54:03.727 DEBUG 10436 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type LIMIT ? 
2021-07-28 09:54:03.728 DEBUG 10436 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 10(Integer)
2021-07-28 09:54:03.728 DEBUG 10436 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 09:54:03.729  INFO 10436 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:54:03.729  INFO 10436 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : result : admin/types 
2021-07-28 09:54:03.982  INFO 10436 --- [http-nio-8080-exec-3] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 09:54:05.980  INFO 10436 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/tags', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.TagController.tags', args=[1, {}]}
2021-07-28 09:54:05.983 DEBUG 10436 --- [http-nio-8080-exec-8] b.l.b.mapper.TagMapper.selectAll_COUNT   : ==>  Preparing: SELECT count(0) FROM tag 
2021-07-28 09:54:05.983 DEBUG 10436 --- [http-nio-8080-exec-8] b.l.b.mapper.TagMapper.selectAll_COUNT   : ==> Parameters: 
2021-07-28 09:54:05.986 DEBUG 10436 --- [http-nio-8080-exec-8] b.l.b.mapper.TagMapper.selectAll_COUNT   : <==      Total: 1
2021-07-28 09:54:05.986 DEBUG 10436 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.TagMapper.selectAll    : ==>  Preparing: SELECT tag_id,name FROM tag LIMIT ? 
2021-07-28 09:54:05.986 DEBUG 10436 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.TagMapper.selectAll    : ==> Parameters: 10(Integer)
2021-07-28 09:54:05.986 DEBUG 10436 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.TagMapper.selectAll    : <==      Total: 7
2021-07-28 09:54:05.986  INFO 10436 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:54:05.987  INFO 10436 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : result : admin/tags 
2021-07-28 09:54:06.231  INFO 10436 --- [http-nio-8080-exec-11] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 09:54:07.489  INFO 10436 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 09:54:07.490 DEBUG 10436 --- [http-nio-8080-exec-2] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 09:54:07.490 DEBUG 10436 --- [http-nio-8080-exec-2] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 09:54:07.491 DEBUG 10436 --- [http-nio-8080-exec-2] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 09:54:07.492 DEBUG 10436 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 09:54:07.492 DEBUG 10436 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 09:54:07.494 DEBUG 10436 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 09:54:07.495 DEBUG 10436 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 09:54:07.495 DEBUG 10436 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 09:54:07.498 DEBUG 10436 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:54:07.498 DEBUG 10436 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 09:54:07.499 DEBUG 10436 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:54:07.499 DEBUG 10436 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 09:54:07.499 DEBUG 10436 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 09:54:07.500 DEBUG 10436 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 09:54:07.501 DEBUG 10436 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:54:07.501 DEBUG 10436 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 09:54:07.502 DEBUG 10436 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:54:07.503 DEBUG 10436 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:54:07.503 DEBUG 10436 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 09:54:07.504 DEBUG 10436 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:54:07.504 DEBUG 10436 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 8
2021-07-28 09:54:07.504 DEBUG 10436 --- [http-nio-8080-exec-2] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 09:54:07.505 DEBUG 10436 --- [http-nio-8080-exec-2] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 09:54:07.506 DEBUG 10436 --- [http-nio-8080-exec-2] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 09:54:07.506  INFO 10436 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:54:07.506  INFO 10436 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 09:54:07.753  INFO 10436 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 09:54:08.652  INFO 10436 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , false, admin]}
2021-07-28 09:54:08.653 DEBUG 10436 --- [http-nio-8080-exec-9] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 09:54:08.653 DEBUG 10436 --- [http-nio-8080-exec-9] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 09:54:08.654 DEBUG 10436 --- [http-nio-8080-exec-9] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 09:54:08.655 DEBUG 10436 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 09:54:08.655 DEBUG 10436 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 09:54:08.656 DEBUG 10436 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 09:54:08.656 DEBUG 10436 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 order by update_time desc 
2021-07-28 09:54:08.657 DEBUG 10436 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 
2021-07-28 09:54:08.659 DEBUG 10436 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:54:08.660 DEBUG 10436 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 09:54:08.661 DEBUG 10436 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:54:08.661 DEBUG 10436 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 09:54:08.661 DEBUG 10436 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 09:54:08.662 DEBUG 10436 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 09:54:08.663 DEBUG 10436 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:54:08.663 DEBUG 10436 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 09:54:08.664 DEBUG 10436 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:54:08.664 DEBUG 10436 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 09:54:08.664 DEBUG 10436 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 09:54:08.666 DEBUG 10436 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 09:54:08.666 DEBUG 10436 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:54:08.666 DEBUG 10436 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 09:54:08.667 DEBUG 10436 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:54:08.667 DEBUG 10436 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 09:54:08.667 DEBUG 10436 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 09:54:08.668 DEBUG 10436 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 09:54:08.668 DEBUG 10436 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:54:08.669 DEBUG 10436 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 09:54:08.669 DEBUG 10436 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:54:08.670 DEBUG 10436 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 10
2021-07-28 09:54:08.671  INFO 10436 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:54:08.672 ERROR 10436 --- [http-nio-8080-exec-9] b.l.b.h.ControllerExceptionHandler       : Request URL : http://localhost:8080/admin/blogs/search, Exception : java.util.ArrayList cannot be cast to com.github.pagehelper.Page
2021-07-28 09:54:08.672  WARN 10436 --- [http-nio-8080-exec-9] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page]
2021-07-28 09:54:12.490  INFO 10436 --- [http-nio-8080-exec-12] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/types', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.TypeController.findAllTypes', args=[{}, 1]}
2021-07-28 09:54:12.492 DEBUG 10436 --- [http-nio-8080-exec-12] b.l.b.mapper.TypeMapper.selectAll_COUNT  : ==>  Preparing: SELECT count(0) FROM type 
2021-07-28 09:54:12.492 DEBUG 10436 --- [http-nio-8080-exec-12] b.l.b.mapper.TypeMapper.selectAll_COUNT  : ==> Parameters: 
2021-07-28 09:54:12.494 DEBUG 10436 --- [http-nio-8080-exec-12] b.l.b.mapper.TypeMapper.selectAll_COUNT  : <==      Total: 1
2021-07-28 09:54:12.495 DEBUG 10436 --- [http-nio-8080-exec-12] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type LIMIT ? 
2021-07-28 09:54:12.495 DEBUG 10436 --- [http-nio-8080-exec-12] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 10(Integer)
2021-07-28 09:54:12.496 DEBUG 10436 --- [http-nio-8080-exec-12] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 09:54:12.497  INFO 10436 --- [http-nio-8080-exec-12] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:54:12.497  INFO 10436 --- [http-nio-8080-exec-12] black.lyg.blog.aspect.LogAspect          : result : admin/types 
2021-07-28 09:54:12.727  INFO 10436 --- [http-nio-8080-exec-3] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 09:54:16.239  INFO 10436 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 09:54:16.239 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 09:54:16.239 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 09:54:16.240 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 09:54:16.241 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 09:54:16.241 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 09:54:16.242 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 09:54:16.243 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 09:54:16.243 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 09:54:16.246 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:54:16.246 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 09:54:16.247 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:54:16.247 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 09:54:16.248 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 09:54:16.248 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 09:54:16.248 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:54:16.248 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 09:54:16.249 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:54:16.250 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:54:16.250 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 09:54:16.250 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:54:16.250 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 8
2021-07-28 09:54:16.250 DEBUG 10436 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 09:54:16.251 DEBUG 10436 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 09:54:16.251 DEBUG 10436 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 09:54:16.251  INFO 10436 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:54:16.251  INFO 10436 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 09:54:16.492  INFO 10436 --- [http-nio-8080-exec-8] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 09:54:20.615  INFO 10436 --- [http-nio-8080-exec-11] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/8/edit', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.editPage', args=[{}, 8]}
2021-07-28 09:54:20.616  INFO 10436 --- [http-nio-8080-exec-11] black.lyg.blog.service.BlogService       : 从redis中获取Blog的数据，标题为条件注解@Conditional
2021-07-28 09:54:20.617 DEBUG 10436 --- [http-nio-8080-exec-11] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 09:54:20.617 DEBUG 10436 --- [http-nio-8080-exec-11] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 8(Integer)
2021-07-28 09:54:20.619 DEBUG 10436 --- [http-nio-8080-exec-11] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 09:54:20.619 DEBUG 10436 --- [http-nio-8080-exec-11] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 09:54:20.619 DEBUG 10436 --- [http-nio-8080-exec-11] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 09:54:20.620 DEBUG 10436 --- [http-nio-8080-exec-11] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 09:54:20.620 DEBUG 10436 --- [http-nio-8080-exec-11] b.lyg.blog.mapper.TagMapper.selectAll    : ==>  Preparing: SELECT tag_id,name FROM tag 
2021-07-28 09:54:20.620 DEBUG 10436 --- [http-nio-8080-exec-11] b.lyg.blog.mapper.TagMapper.selectAll    : ==> Parameters: 
2021-07-28 09:54:20.621 DEBUG 10436 --- [http-nio-8080-exec-11] b.lyg.blog.mapper.TagMapper.selectAll    : <==      Total: 7
2021-07-28 09:54:20.621  INFO 10436 --- [http-nio-8080-exec-11] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:54:20.621  INFO 10436 --- [http-nio-8080-exec-11] black.lyg.blog.aspect.LogAspect          : result : admin/blogs-input 
2021-07-28 09:54:20.866  INFO 10436 --- [http-nio-8080-exec-2] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 09:54:25.444  INFO 10436 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/add', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogAdd', args=[Blog(blogId=8, typeId=6, userId=null, title=条件注解@Conditional, content=# 简介
在学习SpringBoot的时候我们会在各种自动配置类中看到大量使用了@Conditional注解，这篇文章主要简单说下@Conditional注解的使用方法。

**定义：**
按照《Spring Boot实战》书中所说的：“@Conditional根据满足某一特定条件创建一个特定的Bean。比方说，当某一个jar包在一个类路径下的时候，自动配置一个或多个Bean；或者只有某个Bean被创建才会才会创建另外一个Bean。总的来说，就是根据特定判定条件来控制Bean的创建行为，这样我们可以利用这个特性进行一些自动的配置。”

在使用该注解之前我们来看一下@Conditional的源码
```java
@Target({ElementType.TYPE, ElementType.METHOD})
@Retention(RetentionPolicy.RUNTIME)
@Documented
public @interface Conditional {
    Class<? extends Condition>[] value();
}
```

我们关注下面的两点：

* @Target({ElementType.TYPE, ElementType.METHOD})：表示该注解可以加在类上，表示该类下面的所有@Bean都会启用配置；也可以加在方法上，只对该方法有效

* Class<? extends Condition>[] value()：表示要传一个Class集合给该注解，即@Conditional({XXX.class,XXX.class}) ，而且XXX类要继承Condition接口。关于Condition下面会说。


# 示例
我们以自己电脑的操作系统为判定条件，若我们的操作系统为Linux则创建Linux之父的Person的Bean；若操作系统为Windows则创建Windows之父的Person的Bean。

**一、首先我们来创建一个Person类：**

```java
package com.study.spring.annotation.bean;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.bean
 *
 * @author dsy
 */
public class Person {
    private String name;
    private Integer age;

    public Person() {
    }

    public Person(String name, Integer age) {
        this.name = name;
        this.age = age;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Integer getAge() {
        return age;
    }

    public void setAge(Integer age) {
        this.age = age;
    }

    @Override
    public String toString() {
        return "Person{" +
                "name='" + name + '\'' +
                ", age=" + age +
                '}';
    }
}

```
**二、再创建一个配置类MyConfig：**

```java
package com.study.spring.annotation.config;

import com.study.spring.annotation.bean.Person;
import com.study.spring.annotation.condition.LinuxCondition;
import com.study.spring.annotation.condition.WindowsCondition;
import org.springframework.context.annotation.*;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.config
 *
 * @author dsy
 */
@Configuration        //标识该类是一个配置类，相当于之前的一个xml配置文件
public class MyConfig {
 
    /**
     * @Conditional({Condition})  注解：按照一定的条件将bean添加到IOC容器中
     */
    @Conditional({LinuxCondition.class})
    @Bean("linux")
    public Person person01(){
        return new Person("linux之父",55);
    }

    @Bean("windows")
    @Conditional({WindowsCondition.class})
    public Person person02(){
        return new Person("windows之父",48);
    }

}

```

**三、接下来创建两个Condition类：LinuxCondition和WindowsCondition：**

```java
package com.study.spring.annotation.condition;

import org.springframework.context.annotation.Condition;
import org.springframework.context.annotation.ConditionContext;
import org.springframework.core.env.Environment;
import org.springframework.core.type.AnnotatedTypeMetadata;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.condition
 *
 * @author dsy
 */
//判断是否Linux系统 要进行判断必须实现Condition接口
public class LinuxCondition implements Condition {

    /**
     *
     * @param conditionContext  判断条件能使用的上下文环境
     * @param annotatedTypeMetadata 当前标注了@Conditional注解的注释信息
     * @return Boolean
     */
    @Override
    public boolean matches(ConditionContext conditionContext, AnnotatedTypeMetadata annotatedTypeMetadata) {
        Environment environment = conditionContext.getEnvironment();
        String property = environment.getProperty("os.name");
        return property!=null&&property.contains("Linux");
    }
}

```

```java
package com.study.spring.annotation.condition;

import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;
import org.springframework.beans.factory.support.BeanDefinitionRegistry;
import org.springframework.context.annotation.Condition;
import org.springframework.context.annotation.ConditionContext;
import org.springframework.core.env.Environment;
import org.springframework.core.type.AnnotatedTypeMetadata;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.condition
 *
 * @author dsy
 */
//判断是否Windows系统 要进行判断必须实现Condition接口
public class WindowsCondition implements Condition {

    /**
     *
     * @param conditionContext  判断条件能使用的上下文环境
     * @param annotatedTypeMetadata 当前标注了@Conditional注解的注释信息
     * @return Boolean
     */
    @Override
    public boolean matches(ConditionContext conditionContext, AnnotatedTypeMetadata annotatedTypeMetadata) {
        Environment environment = conditionContext.getEnvironment();
        String property = environment.getProperty("os.name");
        return property != null && property.contains("Windows");
    }
}

```

**说明：** 这两个类均实现了Condition接口，里面只有一个matches方法返回值为boolea类型，也就是说@Conditional({LinuxCondition.class})或者@Conditional({WindowsCondition.class})通过判断注解括号里面条件类的matches方法的返回值来判定要不要在IOC容器中创建由@Conditional注解标识的这个Bean；若matches返回值为true则创建该Bean，若返回false则不创建该Bean。

```java
@FunctionalInterface
public interface Condition {
    boolean matches(ConditionContext var1, AnnotatedTypeMetadata var2);
}
```

**四、测试：**

```java
package com.study.spring;

import com.study.spring.annotation.bean.Person;
import com.study.spring.annotation.config.MyConfig;
import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;

import java.util.Map;

@SpringBootTest
class ApplicationTests {
    /**
     * @Conditional 注解来按照条件获取bean实例
     */
    @Test
    void testAnnotationConfig2(){
        //创建IOC容器
        AnnotationConfigApplicationContext applicationContext = new AnnotationConfigApplicationContext(MyConfig.class);
        //getBeanNamesForType方法按照类来获取该类的Bean的id
        String[] names = applicationContext.getBeanNamesForType(Person.class);
        //打印
        for (String name:names){
            System.out.println(name);
        }
        //获取具体的Bean
        Map<String, Person> beans = applicationContext.getBeansOfType(Person.class);
        System.out.println(beans);
    }

}

```
**打印输出：**

```java
windows
{windows=Person{name='windows之父', age=48}}
```

若我们改变运行环境，加上参数：-Dos.name=Linux
![在这里插入图片描述](https://img-blog.csdnimg.cn/20200401134456722.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zOTI5NjI4Mw==,size_16,color_FFFFFF,t_70#pic_center)
再次运行打印输出：

```java
linux
{linux=Person{name='linux之父', age=55}}
```

# 总结
1、@Conditional注解的作用是按照一定的判定条件来控制Bean的创建
2、@Conditional可以加在一个配置类上，表示该类下面的全部的@Bean都会启用配置；也可以加在一个@Bean的方法上面，只对该方法有效
3、判定条件类XXXCondition类要实现Condition接口，并重写matches方法，在该方法里面写自己的判定逻辑

参考资料：《Spring Boot实战》
, firstPicture=https://images.unsplash.com/photo-1523895665936-7bfe172b757d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80, flag=原创, description=在学习SpringBoot的时候我们会在各种自动配置类中看到大量使用了@Conditional注解，这篇文章主要简单说下@Conditional注解的使用方法。, views=null, appreciation=true, shareStatement=true, comment=true, publish=false, recommend=true, createTime=null, updateTime=null, type=null, user=null, tags=null), org.apache.catalina.session.StandardSessionFacade@11e769f4, {}, 1]}
2021-07-28 09:54:25.444 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.m.TypeMapper.selectByPrimaryKey    : ==>  Preparing: SELECT type_id,name FROM type WHERE type_id = ? 
2021-07-28 09:54:25.444 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.m.TypeMapper.selectByPrimaryKey    : ==> Parameters: 6(Integer)
2021-07-28 09:54:25.446 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.m.TypeMapper.selectByPrimaryKey    : <==      Total: 1
2021-07-28 09:54:25.446 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 09:54:25.447 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 1(String)
2021-07-28 09:54:25.448 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 09:54:25.449 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.m.B.updateByPrimaryKeySelective    : ==>  Preparing: UPDATE blog SET type_id = ?,user_id = ?,title = ?,content = ?,first_picture = ?,flag = ?,description = ?,appreciation = ?,share_statement = ?,comment = ?,publish = ?,recommend = ?,update_time = ? WHERE blog_id = ? 
2021-07-28 09:54:25.450 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.m.B.updateByPrimaryKeySelective    : ==> Parameters: 6(Integer), 1(Integer), 条件注解@Conditional(String), # 简介
在学习SpringBoot的时候我们会在各种自动配置类中看到大量使用了@Conditional注解，这篇文章主要简单说下@Conditional注解的使用方法。

**定义：**
按照《Spring Boot实战》书中所说的：“@Conditional根据满足某一特定条件创建一个特定的Bean。比方说，当某一个jar包在一个类路径下的时候，自动配置一个或多个Bean；或者只有某个Bean被创建才会才会创建另外一个Bean。总的来说，就是根据特定判定条件来控制Bean的创建行为，这样我们可以利用这个特性进行一些自动的配置。”

在使用该注解之前我们来看一下@Conditional的源码
```java
@Target({ElementType.TYPE, ElementType.METHOD})
@Retention(RetentionPolicy.RUNTIME)
@Documented
public @interface Conditional {
    Class<? extends Condition>[] value();
}
```

我们关注下面的两点：

* @Target({ElementType.TYPE, ElementType.METHOD})：表示该注解可以加在类上，表示该类下面的所有@Bean都会启用配置；也可以加在方法上，只对该方法有效

* Class<? extends Condition>[] value()：表示要传一个Class集合给该注解，即@Conditional({XXX.class,XXX.class}) ，而且XXX类要继承Condition接口。关于Condition下面会说。


# 示例
我们以自己电脑的操作系统为判定条件，若我们的操作系统为Linux则创建Linux之父的Person的Bean；若操作系统为Windows则创建Windows之父的Person的Bean。

**一、首先我们来创建一个Person类：**

```java
package com.study.spring.annotation.bean;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.bean
 *
 * @author dsy
 */
public class Person {
    private String name;
    private Integer age;

    public Person() {
    }

    public Person(String name, Integer age) {
        this.name = name;
        this.age = age;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Integer getAge() {
        return age;
    }

    public void setAge(Integer age) {
        this.age = age;
    }

    @Override
    public String toString() {
        return "Person{" +
                "name='" + name + '\'' +
                ", age=" + age +
                '}';
    }
}

```
**二、再创建一个配置类MyConfig：**

```java
package com.study.spring.annotation.config;

import com.study.spring.annotation.bean.Person;
import com.study.spring.annotation.condition.LinuxCondition;
import com.study.spring.annotation.condition.WindowsCondition;
import org.springframework.context.annotation.*;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.config
 *
 * @author dsy
 */
@Configuration        //标识该类是一个配置类，相当于之前的一个xml配置文件
public class MyConfig {
 
    /**
     * @Conditional({Condition})  注解：按照一定的条件将bean添加到IOC容器中
     */
    @Conditional({LinuxCondition.class})
    @Bean("linux")
    public Person person01(){
        return new Person("linux之父",55);
    }

    @Bean("windows")
    @Conditional({WindowsCondition.class})
    public Person person02(){
        return new Person("windows之父",48);
    }

}

```

**三、接下来创建两个Condition类：LinuxCondition和WindowsCondition：**

```java
package com.study.spring.annotation.condition;

import org.springframework.context.annotation.Condition;
import org.springframework.context.annotation.ConditionContext;
import org.springframework.core.env.Environment;
import org.springframework.core.type.AnnotatedTypeMetadata;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.condition
 *
 * @author dsy
 */
//判断是否Linux系统 要进行判断必须实现Condition接口
public class LinuxCondition implements Condition {

    /**
     *
     * @param conditionContext  判断条件能使用的上下文环境
     * @param annotatedTypeMetadata 当前标注了@Conditional注解的注释信息
     * @return Boolean
     */
    @Override
    public boolean matches(ConditionContext conditionContext, AnnotatedTypeMetadata annotatedTypeMetadata) {
        Environment environment = conditionContext.getEnvironment();
        String property = environment.getProperty("os.name");
        return property!=null&&property.contains("Linux");
    }
}

```

```java
package com.study.spring.annotation.condition;

import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;
import org.springframework.beans.factory.support.BeanDefinitionRegistry;
import org.springframework.context.annotation.Condition;
import org.springframework.context.annotation.ConditionContext;
import org.springframework.core.env.Environment;
import org.springframework.core.type.AnnotatedTypeMetadata;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.condition
 *
 * @author dsy
 */
//判断是否Windows系统 要进行判断必须实现Condition接口
public class WindowsCondition implements Condition {

    /**
     *
     * @param conditionContext  判断条件能使用的上下文环境
     * @param annotatedTypeMetadata 当前标注了@Conditional注解的注释信息
     * @return Boolean
     */
    @Override
    public boolean matches(ConditionContext conditionContext, AnnotatedTypeMetadata annotatedTypeMetadata) {
        Environment environment = conditionContext.getEnvironment();
        String property = environment.getProperty("os.name");
        return property != null && property.contains("Windows");
    }
}

```

**说明：** 这两个类均实现了Condition接口，里面只有一个matches方法返回值为boolea类型，也就是说@Conditional({LinuxCondition.class})或者@Conditional({WindowsCondition.class})通过判断注解括号里面条件类的matches方法的返回值来判定要不要在IOC容器中创建由@Conditional注解标识的这个Bean；若matches返回值为true则创建该Bean，若返回false则不创建该Bean。

```java
@FunctionalInterface
public interface Condition {
    boolean matches(ConditionContext var1, AnnotatedTypeMetadata var2);
}
```

**四、测试：**

```java
package com.study.spring;

import com.study.spring.annotation.bean.Person;
import com.study.spring.annotation.config.MyConfig;
import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;

import java.util.Map;

@SpringBootTest
class ApplicationTests {
    /**
     * @Conditional 注解来按照条件获取bean实例
     */
    @Test
    void testAnnotationConfig2(){
        //创建IOC容器
        AnnotationConfigApplicationContext applicationContext = new AnnotationConfigApplicationContext(MyConfig.class);
        //getBeanNamesForType方法按照类来获取该类的Bean的id
        String[] names = applicationContext.getBeanNamesForType(Person.class);
        //打印
        for (String name:names){
            System.out.println(name);
        }
        //获取具体的Bean
        Map<String, Person> beans = applicationContext.getBeansOfType(Person.class);
        System.out.println(beans);
    }

}

```
**打印输出：**

```java
windows
{windows=Person{name='windows之父', age=48}}
```

若我们改变运行环境，加上参数：-Dos.name=Linux
![在这里插入图片描述](https://img-blog.csdnimg.cn/20200401134456722.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zOTI5NjI4Mw==,size_16,color_FFFFFF,t_70#pic_center)
再次运行打印输出：

```java
linux
{linux=Person{name='linux之父', age=55}}
```

# 总结
1、@Conditional注解的作用是按照一定的判定条件来控制Bean的创建
2、@Conditional可以加在一个配置类上，表示该类下面的全部的@Bean都会启用配置；也可以加在一个@Bean的方法上面，只对该方法有效
3、判定条件类XXXCondition类要实现Condition接口，并重写matches方法，在该方法里面写自己的判定逻辑

参考资料：《Spring Boot实战》
(String), https://images.unsplash.com/photo-1523895665936-7bfe172b757d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80(String), 原创(String), 在学习SpringBoot的时候我们会在各种自动配置类中看到大量使用了@Conditional注解，这篇文章主要简单说下@Conditional注解的使用方法。(String), true(Boolean), true(Boolean), true(Boolean), false(Boolean), true(Boolean), 2021-07-28 09:54:25.448(Timestamp), 8(Integer)
2021-07-28 09:54:25.452 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.m.B.updateByPrimaryKeySelective    : <==    Updates: 1
2021-07-28 09:54:25.452 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.m.BlogTagMapper.deleteByExample    : ==>  Preparing: DELETE FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 09:54:25.453 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.m.BlogTagMapper.deleteByExample    : ==> Parameters: 8(Integer)
2021-07-28 09:54:25.453 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.m.BlogTagMapper.deleteByExample    : <==    Updates: 1
2021-07-28 09:54:25.454 DEBUG 10436 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.BlogTagMapper.insert   : ==>  Preparing: INSERT INTO blog_tag ( blog_tag_id,blog_id,tag_id ) VALUES( ?,?,? ) 
2021-07-28 09:54:25.454 DEBUG 10436 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.BlogTagMapper.insert   : ==> Parameters: null, 8(Integer), 1(Integer)
2021-07-28 09:54:25.455 DEBUG 10436 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.BlogTagMapper.insert   : <==    Updates: 1
2021-07-28 09:54:25.455  INFO 10436 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 删除redis中key为blogtags的hash数据类型
2021-07-28 09:54:25.456 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.selectByPrimaryKey    : ==>  Preparing: SELECT blog_id,type_id,user_id,title,content,first_picture,flag,description,views,appreciation,share_statement,comment,publish,recommend,create_time,update_time FROM blog WHERE blog_id = ? 
2021-07-28 09:54:25.456 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.selectByPrimaryKey    : ==> Parameters: 8(Integer)
2021-07-28 09:54:25.457 DEBUG 10436 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.selectByPrimaryKey    : <==      Total: 1
2021-07-28 09:54:25.459  INFO 10436 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 更新redis中TheLatestBlog的数据，标题为条件注解@Conditional
2021-07-28 09:54:25.462  INFO 10436 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 更新redis中AllBlog的数据，标题为条件注解@Conditional
2021-07-28 09:54:25.466  INFO 10436 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:54:25.466  INFO 10436 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : redirect:/admin/blogs 
2021-07-28 09:55:44.210  INFO 10436 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 09:55:44.215 DEBUG 10436 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 09:55:44.216 DEBUG 10436 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 09:55:44.216 DEBUG 10436 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 09:55:44.217 DEBUG 10436 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 09:55:44.217 DEBUG 10436 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 09:55:44.218 DEBUG 10436 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 09:55:44.218 DEBUG 10436 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 09:55:44.218 DEBUG 10436 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 09:55:44.220 DEBUG 10436 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:55:44.220 DEBUG 10436 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 09:55:44.221 DEBUG 10436 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:55:44.221 DEBUG 10436 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 09:55:44.221 DEBUG 10436 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 09:55:44.222 DEBUG 10436 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 09:55:44.222 DEBUG 10436 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:55:44.222 DEBUG 10436 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 09:55:44.223 DEBUG 10436 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:55:44.223 DEBUG 10436 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:55:44.223 DEBUG 10436 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 09:55:44.224 DEBUG 10436 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:55:44.224 DEBUG 10436 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 8
2021-07-28 09:55:44.224 DEBUG 10436 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 09:55:44.224 DEBUG 10436 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 09:55:44.225 DEBUG 10436 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 09:55:44.225  INFO 10436 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:55:44.225  INFO 10436 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 09:55:44.511  INFO 10436 --- [http-nio-8080-exec-3] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 09:55:49.337  INFO 10436 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/8/edit', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.editPage', args=[{}, 8]}
2021-07-28 09:55:49.339  INFO 10436 --- [http-nio-8080-exec-7] black.lyg.blog.service.BlogService       : 从redis中获取Blog的数据，标题为条件注解@Conditional
2021-07-28 09:55:49.340 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 09:55:49.340 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 8(Integer)
2021-07-28 09:55:49.341 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 09:55:49.342 DEBUG 10436 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 09:55:49.342 DEBUG 10436 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 09:55:49.343 DEBUG 10436 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 09:55:49.343 DEBUG 10436 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TagMapper.selectAll    : ==>  Preparing: SELECT tag_id,name FROM tag 
2021-07-28 09:55:49.343 DEBUG 10436 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TagMapper.selectAll    : ==> Parameters: 
2021-07-28 09:55:49.344 DEBUG 10436 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TagMapper.selectAll    : <==      Total: 7
2021-07-28 09:55:49.344  INFO 10436 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:55:49.344  INFO 10436 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : result : admin/blogs-input 
2021-07-28 09:55:49.584  INFO 10436 --- [http-nio-8080-exec-8] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 09:57:26.596  INFO 10436 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/add', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogAdd', args=[Blog(blogId=8, typeId=6, userId=null, title=条件注解@Conditional, content=# 简介
在学习SpringBoot的时候我们会在各种自动配置类中看到大量使用了@Conditional注解，这篇文章主要简单说下@Conditional注解的使用方法。

**定义：**
按照《Spring Boot实战》书中所说的：“@Conditional根据满足某一特定条件创建一个特定的Bean。比方说，当某一个jar包在一个类路径下的时候，自动配置一个或多个Bean；或者只有某个Bean被创建才会才会创建另外一个Bean。总的来说，就是根据特定判定条件来控制Bean的创建行为，这样我们可以利用这个特性进行一些自动的配置。”

在使用该注解之前我们来看一下@Conditional的源码
```java
@Target({ElementType.TYPE, ElementType.METHOD})
@Retention(RetentionPolicy.RUNTIME)
@Documented
public @interface Conditional {
    Class<? extends Condition>[] value();
}
```

我们关注下面的两点：

* @Target({ElementType.TYPE, ElementType.METHOD})：表示该注解可以加在类上，表示该类下面的所有@Bean都会启用配置；也可以加在方法上，只对该方法有效

* Class<? extends Condition>[] value()：表示要传一个Class集合给该注解，即@Conditional({XXX.class,XXX.class}) ，而且XXX类要继承Condition接口。关于Condition下面会说。


# 示例
我们以自己电脑的操作系统为判定条件，若我们的操作系统为Linux则创建Linux之父的Person的Bean；若操作系统为Windows则创建Windows之父的Person的Bean。

**一、首先我们来创建一个Person类：**

```java
package com.study.spring.annotation.bean;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.bean
 *
 * @author dsy
 */
public class Person {
    private String name;
    private Integer age;

    public Person() {
    }

    public Person(String name, Integer age) {
        this.name = name;
        this.age = age;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Integer getAge() {
        return age;
    }

    public void setAge(Integer age) {
        this.age = age;
    }

    @Override
    public String toString() {
        return "Person{" +
                "name='" + name + '\'' +
                ", age=" + age +
                '}';
    }
}

```
**二、再创建一个配置类MyConfig：**

```java
package com.study.spring.annotation.config;

import com.study.spring.annotation.bean.Person;
import com.study.spring.annotation.condition.LinuxCondition;
import com.study.spring.annotation.condition.WindowsCondition;
import org.springframework.context.annotation.*;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.config
 *
 * @author dsy
 */
@Configuration        //标识该类是一个配置类，相当于之前的一个xml配置文件
public class MyConfig {
 
    /**
     * @Conditional({Condition})  注解：按照一定的条件将bean添加到IOC容器中
     */
    @Conditional({LinuxCondition.class})
    @Bean("linux")
    public Person person01(){
        return new Person("linux之父",55);
    }

    @Bean("windows")
    @Conditional({WindowsCondition.class})
    public Person person02(){
        return new Person("windows之父",48);
    }

}

```

**三、接下来创建两个Condition类：LinuxCondition和WindowsCondition：**

```java
package com.study.spring.annotation.condition;

import org.springframework.context.annotation.Condition;
import org.springframework.context.annotation.ConditionContext;
import org.springframework.core.env.Environment;
import org.springframework.core.type.AnnotatedTypeMetadata;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.condition
 *
 * @author dsy
 */
//判断是否Linux系统 要进行判断必须实现Condition接口
public class LinuxCondition implements Condition {

    /**
     *
     * @param conditionContext  判断条件能使用的上下文环境
     * @param annotatedTypeMetadata 当前标注了@Conditional注解的注释信息
     * @return Boolean
     */
    @Override
    public boolean matches(ConditionContext conditionContext, AnnotatedTypeMetadata annotatedTypeMetadata) {
        Environment environment = conditionContext.getEnvironment();
        String property = environment.getProperty("os.name");
        return property!=null&&property.contains("Linux");
    }
}

```

```java
package com.study.spring.annotation.condition;

import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;
import org.springframework.beans.factory.support.BeanDefinitionRegistry;
import org.springframework.context.annotation.Condition;
import org.springframework.context.annotation.ConditionContext;
import org.springframework.core.env.Environment;
import org.springframework.core.type.AnnotatedTypeMetadata;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.condition
 *
 * @author dsy
 */
//判断是否Windows系统 要进行判断必须实现Condition接口
public class WindowsCondition implements Condition {

    /**
     *
     * @param conditionContext  判断条件能使用的上下文环境
     * @param annotatedTypeMetadata 当前标注了@Conditional注解的注释信息
     * @return Boolean
     */
    @Override
    public boolean matches(ConditionContext conditionContext, AnnotatedTypeMetadata annotatedTypeMetadata) {
        Environment environment = conditionContext.getEnvironment();
        String property = environment.getProperty("os.name");
        return property != null && property.contains("Windows");
    }
}

```

**说明：** 这两个类均实现了Condition接口，里面只有一个matches方法返回值为boolea类型，也就是说@Conditional({LinuxCondition.class})或者@Conditional({WindowsCondition.class})通过判断注解括号里面条件类的matches方法的返回值来判定要不要在IOC容器中创建由@Conditional注解标识的这个Bean；若matches返回值为true则创建该Bean，若返回false则不创建该Bean。

```java
@FunctionalInterface
public interface Condition {
    boolean matches(ConditionContext var1, AnnotatedTypeMetadata var2);
}
```

**四、测试：**

```java
package com.study.spring;

import com.study.spring.annotation.bean.Person;
import com.study.spring.annotation.config.MyConfig;
import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;

import java.util.Map;

@SpringBootTest
class ApplicationTests {
    /**
     * @Conditional 注解来按照条件获取bean实例
     */
    @Test
    void testAnnotationConfig2(){
        //创建IOC容器
        AnnotationConfigApplicationContext applicationContext = new AnnotationConfigApplicationContext(MyConfig.class);
        //getBeanNamesForType方法按照类来获取该类的Bean的id
        String[] names = applicationContext.getBeanNamesForType(Person.class);
        //打印
        for (String name:names){
            System.out.println(name);
        }
        //获取具体的Bean
        Map<String, Person> beans = applicationContext.getBeansOfType(Person.class);
        System.out.println(beans);
    }

}

```
**打印输出：**

```java
windows
{windows=Person{name='windows之父', age=48}}
```

若我们改变运行环境，加上参数：-Dos.name=Linux
![在这里插入图片描述](https://img-blog.csdnimg.cn/20200401134456722.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zOTI5NjI4Mw==,size_16,color_FFFFFF,t_70#pic_center)
再次运行打印输出：

```java
linux
{linux=Person{name='linux之父', age=55}}
```

# 总结
1、@Conditional注解的作用是按照一定的判定条件来控制Bean的创建
2、@Conditional可以加在一个配置类上，表示该类下面的全部的@Bean都会启用配置；也可以加在一个@Bean的方法上面，只对该方法有效
3、判定条件类XXXCondition类要实现Condition接口，并重写matches方法，在该方法里面写自己的判定逻辑

参考资料：《Spring Boot实战》
, firstPicture=https://images.unsplash.com/photo-1523895665936-7bfe172b757d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80, flag=原创, description=在学习SpringBoot的时候我们会在各种自动配置类中看到大量使用了@Conditional注解，这篇文章主要简单说下@Conditional注解的使用方法。, views=null, appreciation=true, shareStatement=true, comment=true, publish=true, recommend=true, createTime=null, updateTime=null, type=null, user=null, tags=null), org.apache.catalina.session.StandardSessionFacade@11e769f4, {}, 1]}
2021-07-28 09:57:26.600 DEBUG 10436 --- [http-nio-8080-exec-2] b.l.b.m.TypeMapper.selectByPrimaryKey    : ==>  Preparing: SELECT type_id,name FROM type WHERE type_id = ? 
2021-07-28 09:57:26.601 DEBUG 10436 --- [http-nio-8080-exec-2] b.l.b.m.TypeMapper.selectByPrimaryKey    : ==> Parameters: 6(Integer)
2021-07-28 09:57:26.602 DEBUG 10436 --- [http-nio-8080-exec-2] b.l.b.m.TypeMapper.selectByPrimaryKey    : <==      Total: 1
2021-07-28 09:57:26.603 DEBUG 10436 --- [http-nio-8080-exec-2] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 09:57:26.603 DEBUG 10436 --- [http-nio-8080-exec-2] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 1(String)
2021-07-28 09:57:26.603 DEBUG 10436 --- [http-nio-8080-exec-2] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 09:57:26.605 DEBUG 10436 --- [http-nio-8080-exec-2] b.l.b.m.B.updateByPrimaryKeySelective    : ==>  Preparing: UPDATE blog SET type_id = ?,user_id = ?,title = ?,content = ?,first_picture = ?,flag = ?,description = ?,appreciation = ?,share_statement = ?,comment = ?,publish = ?,recommend = ?,update_time = ? WHERE blog_id = ? 
2021-07-28 09:57:26.606 DEBUG 10436 --- [http-nio-8080-exec-2] b.l.b.m.B.updateByPrimaryKeySelective    : ==> Parameters: 6(Integer), 1(Integer), 条件注解@Conditional(String), # 简介
在学习SpringBoot的时候我们会在各种自动配置类中看到大量使用了@Conditional注解，这篇文章主要简单说下@Conditional注解的使用方法。

**定义：**
按照《Spring Boot实战》书中所说的：“@Conditional根据满足某一特定条件创建一个特定的Bean。比方说，当某一个jar包在一个类路径下的时候，自动配置一个或多个Bean；或者只有某个Bean被创建才会才会创建另外一个Bean。总的来说，就是根据特定判定条件来控制Bean的创建行为，这样我们可以利用这个特性进行一些自动的配置。”

在使用该注解之前我们来看一下@Conditional的源码
```java
@Target({ElementType.TYPE, ElementType.METHOD})
@Retention(RetentionPolicy.RUNTIME)
@Documented
public @interface Conditional {
    Class<? extends Condition>[] value();
}
```

我们关注下面的两点：

* @Target({ElementType.TYPE, ElementType.METHOD})：表示该注解可以加在类上，表示该类下面的所有@Bean都会启用配置；也可以加在方法上，只对该方法有效

* Class<? extends Condition>[] value()：表示要传一个Class集合给该注解，即@Conditional({XXX.class,XXX.class}) ，而且XXX类要继承Condition接口。关于Condition下面会说。


# 示例
我们以自己电脑的操作系统为判定条件，若我们的操作系统为Linux则创建Linux之父的Person的Bean；若操作系统为Windows则创建Windows之父的Person的Bean。

**一、首先我们来创建一个Person类：**

```java
package com.study.spring.annotation.bean;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.bean
 *
 * @author dsy
 */
public class Person {
    private String name;
    private Integer age;

    public Person() {
    }

    public Person(String name, Integer age) {
        this.name = name;
        this.age = age;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Integer getAge() {
        return age;
    }

    public void setAge(Integer age) {
        this.age = age;
    }

    @Override
    public String toString() {
        return "Person{" +
                "name='" + name + '\'' +
                ", age=" + age +
                '}';
    }
}

```
**二、再创建一个配置类MyConfig：**

```java
package com.study.spring.annotation.config;

import com.study.spring.annotation.bean.Person;
import com.study.spring.annotation.condition.LinuxCondition;
import com.study.spring.annotation.condition.WindowsCondition;
import org.springframework.context.annotation.*;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.config
 *
 * @author dsy
 */
@Configuration        //标识该类是一个配置类，相当于之前的一个xml配置文件
public class MyConfig {
 
    /**
     * @Conditional({Condition})  注解：按照一定的条件将bean添加到IOC容器中
     */
    @Conditional({LinuxCondition.class})
    @Bean("linux")
    public Person person01(){
        return new Person("linux之父",55);
    }

    @Bean("windows")
    @Conditional({WindowsCondition.class})
    public Person person02(){
        return new Person("windows之父",48);
    }

}

```

**三、接下来创建两个Condition类：LinuxCondition和WindowsCondition：**

```java
package com.study.spring.annotation.condition;

import org.springframework.context.annotation.Condition;
import org.springframework.context.annotation.ConditionContext;
import org.springframework.core.env.Environment;
import org.springframework.core.type.AnnotatedTypeMetadata;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.condition
 *
 * @author dsy
 */
//判断是否Linux系统 要进行判断必须实现Condition接口
public class LinuxCondition implements Condition {

    /**
     *
     * @param conditionContext  判断条件能使用的上下文环境
     * @param annotatedTypeMetadata 当前标注了@Conditional注解的注释信息
     * @return Boolean
     */
    @Override
    public boolean matches(ConditionContext conditionContext, AnnotatedTypeMetadata annotatedTypeMetadata) {
        Environment environment = conditionContext.getEnvironment();
        String property = environment.getProperty("os.name");
        return property!=null&&property.contains("Linux");
    }
}

```

```java
package com.study.spring.annotation.condition;

import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;
import org.springframework.beans.factory.support.BeanDefinitionRegistry;
import org.springframework.context.annotation.Condition;
import org.springframework.context.annotation.ConditionContext;
import org.springframework.core.env.Environment;
import org.springframework.core.type.AnnotatedTypeMetadata;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.condition
 *
 * @author dsy
 */
//判断是否Windows系统 要进行判断必须实现Condition接口
public class WindowsCondition implements Condition {

    /**
     *
     * @param conditionContext  判断条件能使用的上下文环境
     * @param annotatedTypeMetadata 当前标注了@Conditional注解的注释信息
     * @return Boolean
     */
    @Override
    public boolean matches(ConditionContext conditionContext, AnnotatedTypeMetadata annotatedTypeMetadata) {
        Environment environment = conditionContext.getEnvironment();
        String property = environment.getProperty("os.name");
        return property != null && property.contains("Windows");
    }
}

```

**说明：** 这两个类均实现了Condition接口，里面只有一个matches方法返回值为boolea类型，也就是说@Conditional({LinuxCondition.class})或者@Conditional({WindowsCondition.class})通过判断注解括号里面条件类的matches方法的返回值来判定要不要在IOC容器中创建由@Conditional注解标识的这个Bean；若matches返回值为true则创建该Bean，若返回false则不创建该Bean。

```java
@FunctionalInterface
public interface Condition {
    boolean matches(ConditionContext var1, AnnotatedTypeMetadata var2);
}
```

**四、测试：**

```java
package com.study.spring;

import com.study.spring.annotation.bean.Person;
import com.study.spring.annotation.config.MyConfig;
import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;

import java.util.Map;

@SpringBootTest
class ApplicationTests {
    /**
     * @Conditional 注解来按照条件获取bean实例
     */
    @Test
    void testAnnotationConfig2(){
        //创建IOC容器
        AnnotationConfigApplicationContext applicationContext = new AnnotationConfigApplicationContext(MyConfig.class);
        //getBeanNamesForType方法按照类来获取该类的Bean的id
        String[] names = applicationContext.getBeanNamesForType(Person.class);
        //打印
        for (String name:names){
            System.out.println(name);
        }
        //获取具体的Bean
        Map<String, Person> beans = applicationContext.getBeansOfType(Person.class);
        System.out.println(beans);
    }

}

```
**打印输出：**

```java
windows
{windows=Person{name='windows之父', age=48}}
```

若我们改变运行环境，加上参数：-Dos.name=Linux
![在这里插入图片描述](https://img-blog.csdnimg.cn/20200401134456722.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zOTI5NjI4Mw==,size_16,color_FFFFFF,t_70#pic_center)
再次运行打印输出：

```java
linux
{linux=Person{name='linux之父', age=55}}
```

# 总结
1、@Conditional注解的作用是按照一定的判定条件来控制Bean的创建
2、@Conditional可以加在一个配置类上，表示该类下面的全部的@Bean都会启用配置；也可以加在一个@Bean的方法上面，只对该方法有效
3、判定条件类XXXCondition类要实现Condition接口，并重写matches方法，在该方法里面写自己的判定逻辑

参考资料：《Spring Boot实战》
(String), https://images.unsplash.com/photo-1523895665936-7bfe172b757d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80(String), 原创(String), 在学习SpringBoot的时候我们会在各种自动配置类中看到大量使用了@Conditional注解，这篇文章主要简单说下@Conditional注解的使用方法。(String), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2021-07-28 09:57:26.605(Timestamp), 8(Integer)
2021-07-28 09:57:26.607 DEBUG 10436 --- [http-nio-8080-exec-2] b.l.b.m.B.updateByPrimaryKeySelective    : <==    Updates: 1
2021-07-28 09:57:26.608 DEBUG 10436 --- [http-nio-8080-exec-2] b.l.b.m.BlogTagMapper.deleteByExample    : ==>  Preparing: DELETE FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 09:57:26.608 DEBUG 10436 --- [http-nio-8080-exec-2] b.l.b.m.BlogTagMapper.deleteByExample    : ==> Parameters: 8(Integer)
2021-07-28 09:57:26.609 DEBUG 10436 --- [http-nio-8080-exec-2] b.l.b.m.BlogTagMapper.deleteByExample    : <==    Updates: 1
2021-07-28 09:57:26.609 DEBUG 10436 --- [http-nio-8080-exec-2] b.lyg.blog.mapper.BlogTagMapper.insert   : ==>  Preparing: INSERT INTO blog_tag ( blog_tag_id,blog_id,tag_id ) VALUES( ?,?,? ) 
2021-07-28 09:57:26.609 DEBUG 10436 --- [http-nio-8080-exec-2] b.lyg.blog.mapper.BlogTagMapper.insert   : ==> Parameters: null, 8(Integer), 1(Integer)
2021-07-28 09:57:26.610 DEBUG 10436 --- [http-nio-8080-exec-2] b.lyg.blog.mapper.BlogTagMapper.insert   : <==    Updates: 1
2021-07-28 09:57:26.611  INFO 10436 --- [http-nio-8080-exec-2] black.lyg.blog.service.BlogService       : 删除redis中key为blogtags的hash数据类型
2021-07-28 09:57:26.611 DEBUG 10436 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectByPrimaryKey    : ==>  Preparing: SELECT blog_id,type_id,user_id,title,content,first_picture,flag,description,views,appreciation,share_statement,comment,publish,recommend,create_time,update_time FROM blog WHERE blog_id = ? 
2021-07-28 09:57:26.611 DEBUG 10436 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectByPrimaryKey    : ==> Parameters: 8(Integer)
2021-07-28 09:57:26.613 DEBUG 10436 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectByPrimaryKey    : <==      Total: 1
2021-07-28 09:57:26.614  INFO 10436 --- [http-nio-8080-exec-2] black.lyg.blog.service.BlogService       : 更新redis中TheLatestBlog的数据，标题为条件注解@Conditional
2021-07-28 09:57:26.614  INFO 10436 --- [http-nio-8080-exec-2] black.lyg.blog.service.BlogService       : 更新redis中AllBlog的数据，标题为条件注解@Conditional
2021-07-28 09:57:26.616  INFO 10436 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:57:26.616  INFO 10436 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : result : redirect:/admin/blogs 
2021-07-28 09:57:49.474  INFO 10436 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 09:57:49.474 DEBUG 10436 --- [http-nio-8080-exec-6] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 09:57:49.474 DEBUG 10436 --- [http-nio-8080-exec-6] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 09:57:49.475 DEBUG 10436 --- [http-nio-8080-exec-6] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 09:57:49.476 DEBUG 10436 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 09:57:49.476 DEBUG 10436 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 09:57:49.477 DEBUG 10436 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 09:57:49.477 DEBUG 10436 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 09:57:49.477 DEBUG 10436 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 09:57:49.479 DEBUG 10436 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:57:49.480 DEBUG 10436 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 09:57:49.480 DEBUG 10436 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:57:49.481 DEBUG 10436 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 09:57:49.481 DEBUG 10436 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 09:57:49.481 DEBUG 10436 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 09:57:49.482 DEBUG 10436 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:57:49.482 DEBUG 10436 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 09:57:49.482 DEBUG 10436 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:57:49.483 DEBUG 10436 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:57:49.483 DEBUG 10436 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 09:57:49.484 DEBUG 10436 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:57:49.484 DEBUG 10436 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 8
2021-07-28 09:57:49.484 DEBUG 10436 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 09:57:49.484 DEBUG 10436 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 09:57:49.485 DEBUG 10436 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 09:57:49.485  INFO 10436 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:57:49.485  INFO 10436 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 09:57:49.736  INFO 10436 --- [http-nio-8080-exec-5] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 09:57:55.304  INFO 10436 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/16/edit', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.editPage', args=[{}, 16]}
2021-07-28 09:57:55.306  INFO 10436 --- [http-nio-8080-exec-3] black.lyg.blog.service.BlogService       : 从redis中获取Blog的数据，标题为redis学习笔记（一）：String
2021-07-28 09:57:55.308 DEBUG 10436 --- [http-nio-8080-exec-3] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 09:57:55.308 DEBUG 10436 --- [http-nio-8080-exec-3] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 16(Integer)
2021-07-28 09:57:55.309 DEBUG 10436 --- [http-nio-8080-exec-3] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 09:57:55.309 DEBUG 10436 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 09:57:55.310 DEBUG 10436 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 09:57:55.311 DEBUG 10436 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 09:57:55.311 DEBUG 10436 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TagMapper.selectAll    : ==>  Preparing: SELECT tag_id,name FROM tag 
2021-07-28 09:57:55.311 DEBUG 10436 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TagMapper.selectAll    : ==> Parameters: 
2021-07-28 09:57:55.312 DEBUG 10436 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TagMapper.selectAll    : <==      Total: 7
2021-07-28 09:57:55.312  INFO 10436 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:57:55.312  INFO 10436 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : result : admin/blogs-input 
2021-07-28 09:57:55.561  INFO 10436 --- [http-nio-8080-exec-7] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 09:58:18.421  INFO 10436 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/addPage', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.addPage', args=[{}]}
2021-07-28 09:58:18.422 DEBUG 10436 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 09:58:18.422 DEBUG 10436 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 09:58:18.423 DEBUG 10436 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 09:58:18.423 DEBUG 10436 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.TagMapper.selectAll    : ==>  Preparing: SELECT tag_id,name FROM tag 
2021-07-28 09:58:18.424 DEBUG 10436 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.TagMapper.selectAll    : ==> Parameters: 
2021-07-28 09:58:18.425 DEBUG 10436 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.TagMapper.selectAll    : <==      Total: 7
2021-07-28 09:58:18.425  INFO 10436 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:58:18.425  INFO 10436 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : result : admin/blogs-input 
2021-07-28 09:58:18.674  INFO 10436 --- [http-nio-8080-exec-2] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 09:58:20.568  INFO 10436 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/types', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.TypeController.findAllTypes', args=[{}, 1]}
2021-07-28 09:58:20.569 DEBUG 10436 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectAll_COUNT  : ==>  Preparing: SELECT count(0) FROM type 
2021-07-28 09:58:20.569 DEBUG 10436 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectAll_COUNT  : ==> Parameters: 
2021-07-28 09:58:20.571 DEBUG 10436 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectAll_COUNT  : <==      Total: 1
2021-07-28 09:58:20.571 DEBUG 10436 --- [http-nio-8080-exec-9] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type LIMIT ? 
2021-07-28 09:58:20.571 DEBUG 10436 --- [http-nio-8080-exec-9] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 10(Integer)
2021-07-28 09:58:20.572 DEBUG 10436 --- [http-nio-8080-exec-9] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 09:58:20.573  INFO 10436 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:58:20.573  INFO 10436 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : result : admin/types 
2021-07-28 09:58:20.818  INFO 10436 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 09:58:22.506  INFO 10436 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/types/input', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.TypeController.input', args=[{}]}
2021-07-28 09:58:22.506  INFO 10436 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:58:22.506  INFO 10436 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : result : admin/types-input 
2021-07-28 09:58:23.153  INFO 10436 --- [http-nio-8080-exec-5] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 09:58:23.876  INFO 10436 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/types', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.TypeController.findAllTypes', args=[{}, 1]}
2021-07-28 09:58:23.877 DEBUG 10436 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectAll_COUNT  : ==>  Preparing: SELECT count(0) FROM type 
2021-07-28 09:58:23.877 DEBUG 10436 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectAll_COUNT  : ==> Parameters: 
2021-07-28 09:58:23.879 DEBUG 10436 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectAll_COUNT  : <==      Total: 1
2021-07-28 09:58:23.879 DEBUG 10436 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type LIMIT ? 
2021-07-28 09:58:23.879 DEBUG 10436 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 10(Integer)
2021-07-28 09:58:23.879 DEBUG 10436 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 09:58:23.880  INFO 10436 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:58:23.880  INFO 10436 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : result : admin/types 
2021-07-28 09:58:24.116  INFO 10436 --- [http-nio-8080-exec-2] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 09:58:25.405  INFO 10436 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/tags', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.TagController.tags', args=[1, {}]}
2021-07-28 09:58:25.405 DEBUG 10436 --- [http-nio-8080-exec-9] b.l.b.mapper.TagMapper.selectAll_COUNT   : ==>  Preparing: SELECT count(0) FROM tag 
2021-07-28 09:58:25.405 DEBUG 10436 --- [http-nio-8080-exec-9] b.l.b.mapper.TagMapper.selectAll_COUNT   : ==> Parameters: 
2021-07-28 09:58:25.407 DEBUG 10436 --- [http-nio-8080-exec-9] b.l.b.mapper.TagMapper.selectAll_COUNT   : <==      Total: 1
2021-07-28 09:58:25.407 DEBUG 10436 --- [http-nio-8080-exec-9] b.lyg.blog.mapper.TagMapper.selectAll    : ==>  Preparing: SELECT tag_id,name FROM tag LIMIT ? 
2021-07-28 09:58:25.408 DEBUG 10436 --- [http-nio-8080-exec-9] b.lyg.blog.mapper.TagMapper.selectAll    : ==> Parameters: 10(Integer)
2021-07-28 09:58:25.408 DEBUG 10436 --- [http-nio-8080-exec-9] b.lyg.blog.mapper.TagMapper.selectAll    : <==      Total: 7
2021-07-28 09:58:25.408  INFO 10436 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:58:25.408  INFO 10436 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : result : admin/tags 
2021-07-28 09:58:25.651  INFO 10436 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 09:58:27.648  INFO 10436 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/tags/input', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.TagController.input', args=[{}]}
2021-07-28 09:58:27.649  INFO 10436 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:58:27.649  INFO 10436 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : result : admin/tags-input 
2021-07-28 09:58:27.891  INFO 10436 --- [http-nio-8080-exec-5] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 09:58:29.336  INFO 10436 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/tags', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.TagController.tags', args=[1, {}]}
2021-07-28 09:58:29.337 DEBUG 10436 --- [http-nio-8080-exec-3] b.l.b.mapper.TagMapper.selectAll_COUNT   : ==>  Preparing: SELECT count(0) FROM tag 
2021-07-28 09:58:29.337 DEBUG 10436 --- [http-nio-8080-exec-3] b.l.b.mapper.TagMapper.selectAll_COUNT   : ==> Parameters: 
2021-07-28 09:58:29.339 DEBUG 10436 --- [http-nio-8080-exec-3] b.l.b.mapper.TagMapper.selectAll_COUNT   : <==      Total: 1
2021-07-28 09:58:29.339 DEBUG 10436 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TagMapper.selectAll    : ==>  Preparing: SELECT tag_id,name FROM tag LIMIT ? 
2021-07-28 09:58:29.339 DEBUG 10436 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TagMapper.selectAll    : ==> Parameters: 10(Integer)
2021-07-28 09:58:29.340 DEBUG 10436 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TagMapper.selectAll    : <==      Total: 7
2021-07-28 09:58:29.341  INFO 10436 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:58:29.341  INFO 10436 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : result : admin/tags 
2021-07-28 09:58:29.579  INFO 10436 --- [http-nio-8080-exec-8] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 09:58:30.936  INFO 10436 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 09:58:30.937 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 09:58:30.937 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 09:58:30.938 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 09:58:30.938 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 09:58:30.939 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 09:58:30.940 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 09:58:30.940 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 09:58:30.940 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 09:58:30.943 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:58:30.943 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 09:58:30.944 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:58:30.944 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 09:58:30.944 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 09:58:30.944 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 09:58:30.944 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:58:30.945 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 09:58:30.946 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:58:30.946 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 09:58:30.946 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 09:58:30.947 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 09:58:30.947 DEBUG 10436 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 8
2021-07-28 09:58:30.947 DEBUG 10436 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 09:58:30.947 DEBUG 10436 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 09:58:30.948 DEBUG 10436 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 09:58:30.948  INFO 10436 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 09:58:30.948  INFO 10436 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 09:58:31.191  INFO 10436 --- [http-nio-8080-exec-11] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 09:59:54.933  INFO 3396 --- [restartedMain] black.lyg.blog.BlogApplication           : Starting BlogApplication on Administraror with PID 3396 (D:\Desktop\blog\blog-master\target\classes started by Administrator in D:\Desktop\blog\blog-master)
2021-07-28 09:59:54.935 DEBUG 3396 --- [restartedMain] black.lyg.blog.BlogApplication           : Running with Spring Boot v2.2.6.RELEASE, Spring v5.2.5.RELEASE
2021-07-28 09:59:54.935  INFO 3396 --- [restartedMain] black.lyg.blog.BlogApplication           : The following profiles are active: dev
2021-07-28 09:59:54.993  INFO 3396 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-07-28 09:59:54.994  INFO 3396 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-07-28 09:59:55.666  INFO 3396 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-28 09:59:55.666  INFO 3396 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-28 09:59:55.693  INFO 3396 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 18ms. Found 0 Redis repository interfaces.
2021-07-28 09:59:55.793  WARN 3396 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[black.lyg.blog]' package. Please check your configuration.
2021-07-28 09:59:56.326  INFO 3396 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-07-28 09:59:56.332  INFO 3396 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-28 09:59:56.333  INFO 3396 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-28 09:59:56.334  INFO 3396 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : An older version [1.2.14] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.23]
2021-07-28 09:59:56.334  INFO 3396 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.14] using APR version [1.6.2].
2021-07-28 09:59:56.334  INFO 3396 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-07-28 09:59:56.335  INFO 3396 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-07-28 09:59:57.344  INFO 3396 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.0.2l  25 May 2017]
2021-07-28 09:59:57.452  INFO 3396 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-28 09:59:57.452  INFO 3396 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2458 ms
2021-07-28 09:59:57.494  INFO 3396 --- [restartedMain] o.s.boot.web.servlet.RegistrationBean    : Filter webStatFilter was not registered (possibly already registered?)
2021-07-28 09:59:58.477  INFO 3396 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-28 09:59:58.554  INFO 3396 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-07-28 09:59:59.019  INFO 3396 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-07-28 09:59:59.063  INFO 3396 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-07-28 09:59:59.065  INFO 3396 --- [restartedMain] black.lyg.blog.BlogApplication           : Started BlogApplication in 4.586 seconds (JVM running for 6.702)
2021-07-28 09:59:59.098  INFO 3396 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-28 10:00:00.139 DEBUG 3396 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc 
2021-07-28 10:00:00.157 DEBUG 3396 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 
2021-07-28 10:00:00.184 DEBUG 3396 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:00:00.184 DEBUG 3396 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:00:00.186 DEBUG 3396 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:00:00.187 DEBUG 3396 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:00:00.187 DEBUG 3396 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:00:00.189 DEBUG 3396 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:00:00.190 DEBUG 3396 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:00:00.190 DEBUG 3396 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:00:00.192 DEBUG 3396 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:00:00.192 DEBUG 3396 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:00:00.192 DEBUG 3396 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 10:00:00.194 DEBUG 3396 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:00:00.194 DEBUG 3396 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:00:00.195 DEBUG 3396 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 10:00:00.196 DEBUG 3396 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:00:00.197 DEBUG 3396 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:00:00.197 DEBUG 3396 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 10:00:00.198 DEBUG 3396 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:00:00.198 DEBUG 3396 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:00:00.198 DEBUG 3396 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 10:00:00.200 DEBUG 3396 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:00:00.202 DEBUG 3396 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 10
2021-07-28 10:00:00.300  INFO 3396 --- [restartedMain] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2021-07-28 10:00:00.301  INFO 3396 --- [restartedMain] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2021-07-28 10:00:02.143  INFO 3396 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：条件注解@Conditional
2021-07-28 10:00:02.144  INFO 3396 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：随笔
2021-07-28 10:00:02.145  INFO 3396 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java常见关键字final、static、super、abstract、this
2021-07-28 10:00:02.147  INFO 3396 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：挖掘机技术哪家强
2021-07-28 10:00:02.147  INFO 3396 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：山东菏泽曹县流弊六六六，卧底宝贝儿
2021-07-28 10:00:02.149  INFO 3396 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：欢迎使用 Markdown在线编辑器 MdEditor
2021-07-28 10:00:02.150  INFO 3396 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java中 equals() 和 hashCode()的关系
2021-07-28 10:00:02.151  INFO 3396 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（二）：Hash
2021-07-28 10:00:02.152  INFO 3396 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（一）：String
2021-07-28 10:00:02.153  INFO 3396 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java合并两个int数组
2021-07-28 10:00:02.155  INFO 3396 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 初始化redis中blogCount的数量为：10
2021-07-28 10:00:12.779  INFO 3396 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-28 10:00:12.780  INFO 3396 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-28 10:00:12.789  INFO 3396 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 9 ms
2021-07-28 10:00:12.807  INFO 3396 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.loginPage', args=[]}
2021-07-28 10:00:12.810  INFO 3396 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:00:12.810  INFO 3396 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : admin/login 
2021-07-28 10:00:19.843  INFO 3396 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.login', args=[admin, lyg0918, org.apache.catalina.session.StandardSessionFacade@3d023f16, {}]}
2021-07-28 10:00:19.845 DEBUG 3396 --- [http-nio-8080-exec-5] .l.b.m.U.selectUserNameByNameAndPassWord : ==>  Preparing: select * from user where username = ? and password = ? 
2021-07-28 10:00:19.845 DEBUG 3396 --- [http-nio-8080-exec-5] .l.b.m.U.selectUserNameByNameAndPassWord : ==> Parameters: admin(String), 89446CF944BBA2485A8562075A0E0BB7(String)
2021-07-28 10:00:19.846 DEBUG 3396 --- [http-nio-8080-exec-5] .l.b.m.U.selectUserNameByNameAndPassWord : <==      Total: 1
2021-07-28 10:00:19.847  INFO 3396 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:00:19.847  INFO 3396 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : result : admin/index 
2021-07-28 10:00:20.181  INFO 3396 --- [http-nio-8080-exec-6] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:01:43.774  INFO 3396 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 10:01:43.804 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 10:01:43.805 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 10:01:43.806 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 10:01:43.807 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 10:01:43.807 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 10:01:43.809 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 10:01:43.809 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 10:01:43.809 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 10:01:43.812 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:01:43.812 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:01:43.813 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:01:43.814 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:01:43.814 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:01:43.815 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:01:43.816 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:01:43.817 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:01:43.817 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:01:43.818 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:01:43.819 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 10:01:43.820 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:01:43.820 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 8
2021-07-28 10:01:43.835 DEBUG 3396 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 10:01:43.835 DEBUG 3396 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 10:01:43.837 DEBUG 3396 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 10:01:43.837  INFO 3396 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:01:43.837  INFO 3396 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 10:01:44.137  INFO 3396 --- [http-nio-8080-exec-8] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:01:46.161  INFO 3396 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/addPage', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.addPage', args=[{}]}
2021-07-28 10:01:46.162 DEBUG 3396 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 10:01:46.162 DEBUG 3396 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 10:01:46.164 DEBUG 3396 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 10:01:46.165 DEBUG 3396 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TagMapper.selectAll    : ==>  Preparing: SELECT tag_id,name FROM tag 
2021-07-28 10:01:46.165 DEBUG 3396 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TagMapper.selectAll    : ==> Parameters: 
2021-07-28 10:01:46.167 DEBUG 3396 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TagMapper.selectAll    : <==      Total: 7
2021-07-28 10:01:46.167  INFO 3396 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:01:46.167  INFO 3396 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : result : admin/blogs-input 
2021-07-28 10:01:46.421  INFO 3396 --- [http-nio-8080-exec-9] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:01:47.597  INFO 3396 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 10:01:47.598 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 10:01:47.598 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 10:01:47.599 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 10:01:47.600 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 10:01:47.600 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 10:01:47.602 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 10:01:47.602 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 10:01:47.602 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 10:01:47.605 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:01:47.606 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:01:47.606 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:01:47.607 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:01:47.607 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:01:47.607 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:01:47.608 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:01:47.608 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:01:47.609 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:01:47.610 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:01:47.610 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 10:01:47.610 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:01:47.611 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 8
2021-07-28 10:01:47.611 DEBUG 3396 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 10:01:47.611 DEBUG 3396 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 10:01:47.612 DEBUG 3396 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 10:01:47.612  INFO 3396 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:01:47.612  INFO 3396 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 10:01:47.869  INFO 3396 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:01:54.035  INFO 3396 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/15/edit', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.editPage', args=[{}, 15]}
2021-07-28 10:01:54.038  INFO 3396 --- [http-nio-8080-exec-6] black.lyg.blog.service.BlogService       : 从redis中获取Blog的数据，标题为Java合并两个int数组
2021-07-28 10:01:54.061 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 10:01:54.062 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 15(Integer)
2021-07-28 10:01:54.063 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 10:01:54.065 DEBUG 3396 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 10:01:54.065 DEBUG 3396 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 10:01:54.067 DEBUG 3396 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 10:01:54.067 DEBUG 3396 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TagMapper.selectAll    : ==>  Preparing: SELECT tag_id,name FROM tag 
2021-07-28 10:01:54.067 DEBUG 3396 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TagMapper.selectAll    : ==> Parameters: 
2021-07-28 10:01:54.068 DEBUG 3396 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TagMapper.selectAll    : <==      Total: 7
2021-07-28 10:01:54.069  INFO 3396 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:01:54.069  INFO 3396 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : result : admin/blogs-input 
2021-07-28 10:01:54.315  INFO 3396 --- [http-nio-8080-exec-3] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:01:55.703  INFO 3396 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 10:01:55.704 DEBUG 3396 --- [http-nio-8080-exec-2] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 10:01:55.704 DEBUG 3396 --- [http-nio-8080-exec-2] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 10:01:55.705 DEBUG 3396 --- [http-nio-8080-exec-2] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 10:01:55.706 DEBUG 3396 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 10:01:55.706 DEBUG 3396 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 10:01:55.707 DEBUG 3396 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 10:01:55.708 DEBUG 3396 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 10:01:55.708 DEBUG 3396 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 10:01:55.711 DEBUG 3396 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:01:55.711 DEBUG 3396 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:01:55.712 DEBUG 3396 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:01:55.712 DEBUG 3396 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:01:55.712 DEBUG 3396 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:01:55.714 DEBUG 3396 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:01:55.714 DEBUG 3396 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:01:55.714 DEBUG 3396 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:01:55.716 DEBUG 3396 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:01:55.716 DEBUG 3396 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:01:55.716 DEBUG 3396 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 10:01:55.717 DEBUG 3396 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:01:55.717 DEBUG 3396 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 8
2021-07-28 10:01:55.717 DEBUG 3396 --- [http-nio-8080-exec-2] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 10:01:55.717 DEBUG 3396 --- [http-nio-8080-exec-2] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 10:01:55.718 DEBUG 3396 --- [http-nio-8080-exec-2] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 10:01:55.719  INFO 3396 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:01:55.719  INFO 3396 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 10:01:55.968  INFO 3396 --- [http-nio-8080-exec-7] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:01:57.402  INFO 3396 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/8/edit', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.editPage', args=[{}, 8]}
2021-07-28 10:01:57.403  INFO 3396 --- [http-nio-8080-exec-8] black.lyg.blog.service.BlogService       : 从redis中获取Blog的数据，标题为条件注解@Conditional
2021-07-28 10:01:57.404 DEBUG 3396 --- [http-nio-8080-exec-8] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 10:01:57.404 DEBUG 3396 --- [http-nio-8080-exec-8] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 8(Integer)
2021-07-28 10:01:57.405 DEBUG 3396 --- [http-nio-8080-exec-8] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 10:01:57.405 DEBUG 3396 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 10:01:57.406 DEBUG 3396 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 10:01:57.407 DEBUG 3396 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 10:01:57.408 DEBUG 3396 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.TagMapper.selectAll    : ==>  Preparing: SELECT tag_id,name FROM tag 
2021-07-28 10:01:57.408 DEBUG 3396 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.TagMapper.selectAll    : ==> Parameters: 
2021-07-28 10:01:57.409 DEBUG 3396 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.TagMapper.selectAll    : <==      Total: 7
2021-07-28 10:01:57.409  INFO 3396 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:01:57.409  INFO 3396 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : result : admin/blogs-input 
2021-07-28 10:01:57.654  INFO 3396 --- [http-nio-8080-exec-4] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:02:10.884  INFO 3396 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , false, admin]}
2021-07-28 10:02:10.885 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 10:02:10.885 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 10:02:10.886 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 10:02:10.887 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 10:02:10.887 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 10:02:10.888 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 10:02:10.889 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 order by update_time desc 
2021-07-28 10:02:10.889 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 
2021-07-28 10:02:10.891 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:02:10.891 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:02:10.892 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:02:10.892 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:02:10.893 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:02:10.893 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:02:10.893 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:02:10.893 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:02:10.894 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:02:10.895 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:02:10.895 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 10:02:10.896 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:02:10.896 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:02:10.896 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 10:02:10.897 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:02:10.897 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:02:10.897 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 10:02:10.899 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:02:10.899 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:02:10.899 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 10:02:10.900 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:02:10.902 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 10
2021-07-28 10:02:10.902  INFO 3396 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:02:10.904 ERROR 3396 --- [http-nio-8080-exec-10] b.l.b.h.ControllerExceptionHandler       : Request URL : http://localhost:8080/admin/blogs/search, Exception : java.util.ArrayList cannot be cast to com.github.pagehelper.Page
2021-07-28 10:02:10.904  WARN 3396 --- [http-nio-8080-exec-10] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page]
2021-07-28 10:02:15.194  INFO 3396 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/types', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.TypeController.findAllTypes', args=[{}, 1]}
2021-07-28 10:02:15.202 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectAll_COUNT  : ==>  Preparing: SELECT count(0) FROM type 
2021-07-28 10:02:15.203 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectAll_COUNT  : ==> Parameters: 
2021-07-28 10:02:15.205 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectAll_COUNT  : <==      Total: 1
2021-07-28 10:02:15.205 DEBUG 3396 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type LIMIT ? 
2021-07-28 10:02:15.205 DEBUG 3396 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 10(Integer)
2021-07-28 10:02:15.206 DEBUG 3396 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 10:02:15.208  INFO 3396 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:02:15.208  INFO 3396 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : admin/types 
2021-07-28 10:02:15.457  INFO 3396 --- [http-nio-8080-exec-5] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:02:17.235  INFO 3396 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 10:02:17.236 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 10:02:17.236 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 10:02:17.238 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 10:02:17.238 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 10:02:17.238 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 10:02:17.240 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 10:02:17.240 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 10:02:17.241 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 10:02:17.243 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:02:17.243 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:02:17.244 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:02:17.244 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:02:17.244 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:02:17.244 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:02:17.245 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:02:17.245 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:02:17.246 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:02:17.247 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:02:17.247 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 10:02:17.248 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:02:17.248 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 8
2021-07-28 10:02:17.248 DEBUG 3396 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 10:02:17.248 DEBUG 3396 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 10:02:17.249 DEBUG 3396 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 10:02:17.249  INFO 3396 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:02:17.249  INFO 3396 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 10:02:17.490  INFO 3396 --- [http-nio-8080-exec-3] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:02:22.710 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==>  Preparing: SELECT count(0) FROM blog 
2021-07-28 10:02:22.710 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==> Parameters: 
2021-07-28 10:02:22.711 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.findBlogAll_COUNT     : <==      Total: 1
2021-07-28 10:02:22.712 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc LIMIT ? 
2021-07-28 10:02:22.712 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 5(Integer)
2021-07-28 10:02:22.713 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:02:22.713 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:02:22.714 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:02:22.714 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:02:22.715 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:02:22.716 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:02:22.716 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:02:22.716 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:02:22.717 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:02:22.717 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:02:22.718 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 10:02:22.719 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:02:22.719 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:02:22.719 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 10:02:22.720 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:02:22.720 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:02:22.720 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 10:02:22.721 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:02:22.721 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:02:22.721 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 10:02:22.722 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:02:22.722 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 5
2021-07-28 10:02:22.725  INFO 3396 --- [http-nio-8080-exec-7] black.lyg.blog.service.TagService        : 从redis中获取数据：[]
2021-07-28 10:02:22.726 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.TagMapper.findSeveralTopTags     : ==>  Preparing: select distinct t.tag_id,t.name ,count(*) as number from tag t ,blog_tag bt where t.tag_id = bt.tag_id group by t.tag_id, t.name order by number desc limit ? 
2021-07-28 10:02:22.726 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.TagMapper.findSeveralTopTags     : ==> Parameters: 10(Integer)
2021-07-28 10:02:22.726 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.TagMapper.findSeveralTopTags     : <==      Total: 7
2021-07-28 10:02:22.728  INFO 3396 --- [http-nio-8080-exec-7] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=21, name=Redis, BlogNumber=5)
2021-07-28 10:02:22.729  INFO 3396 --- [http-nio-8080-exec-7] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=22, name=Java, BlogNumber=4)
2021-07-28 10:02:22.730  INFO 3396 --- [http-nio-8080-exec-7] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=20, name=设计模式, BlogNumber=3)
2021-07-28 10:02:22.731  INFO 3396 --- [http-nio-8080-exec-7] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=1, name=Spring, BlogNumber=2)
2021-07-28 10:02:22.732  INFO 3396 --- [http-nio-8080-exec-7] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=24, name=测试, BlogNumber=2)
2021-07-28 10:02:22.733  INFO 3396 --- [http-nio-8080-exec-7] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=2, name=Mybatis, BlogNumber=1)
2021-07-28 10:02:22.734  INFO 3396 --- [http-nio-8080-exec-7] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=23, name=MySQL, BlogNumber=1)
2021-07-28 10:02:22.734  INFO 3396 --- [http-nio-8080-exec-7] black.lyg.blog.service.TagService        : 从Mysql中查找到由标签显示博客的数据：[TagTops(tagId=21, name=Redis, BlogNumber=5), TagTops(tagId=22, name=Java, BlogNumber=4), TagTops(tagId=20, name=设计模式, BlogNumber=3), TagTops(tagId=1, name=Spring, BlogNumber=2), TagTops(tagId=24, name=测试, BlogNumber=2), TagTops(tagId=2, name=Mybatis, BlogNumber=1), TagTops(tagId=23, name=MySQL, BlogNumber=1)]
2021-07-28 10:02:22.736  INFO 3396 --- [http-nio-8080-exec-7] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:02:23.035  INFO 3396 --- [http-nio-8080-exec-8] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:03:45.692  INFO 3396 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/8/edit', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.editPage', args=[{}, 8]}
2021-07-28 10:03:45.694  INFO 3396 --- [http-nio-8080-exec-10] black.lyg.blog.service.BlogService       : 从redis中获取Blog的数据，标题为条件注解@Conditional
2021-07-28 10:03:45.697 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 10:03:45.698 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 8(Integer)
2021-07-28 10:03:45.699 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 10:03:45.699 DEBUG 3396 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 10:03:45.699 DEBUG 3396 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 10:03:45.700 DEBUG 3396 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 10:03:45.700 DEBUG 3396 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.TagMapper.selectAll    : ==>  Preparing: SELECT tag_id,name FROM tag 
2021-07-28 10:03:45.700 DEBUG 3396 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.TagMapper.selectAll    : ==> Parameters: 
2021-07-28 10:03:45.701 DEBUG 3396 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.TagMapper.selectAll    : <==      Total: 7
2021-07-28 10:03:45.701  INFO 3396 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:03:45.701  INFO 3396 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : result : admin/blogs-input 
2021-07-28 10:03:45.978  INFO 3396 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:03:51.774  INFO 3396 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/add', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogAdd', args=[Blog(blogId=8, typeId=6, userId=null, title=条件注解@Conditional, content=# 简介
在学习SpringBoot的时候我们会在各种自动配置类中看到大量使用了@Conditional注解，这篇文章主要简单说下@Conditional注解的使用方法。

**定义：**
按照《Spring Boot实战》书中所说的：“@Conditional根据满足某一特定条件创建一个特定的Bean。比方说，当某一个jar包在一个类路径下的时候，自动配置一个或多个Bean；或者只有某个Bean被创建才会才会创建另外一个Bean。总的来说，就是根据特定判定条件来控制Bean的创建行为，这样我们可以利用这个特性进行一些自动的配置。”

在使用该注解之前我们来看一下@Conditional的源码
```java
@Target({ElementType.TYPE, ElementType.METHOD})
@Retention(RetentionPolicy.RUNTIME)
@Documented
public @interface Conditional {
    Class<? extends Condition>[] value();
}
```

我们关注下面的两点：

* @Target({ElementType.TYPE, ElementType.METHOD})：表示该注解可以加在类上，表示该类下面的所有@Bean都会启用配置；也可以加在方法上，只对该方法有效

* Class<? extends Condition>[] value()：表示要传一个Class集合给该注解，即@Conditional({XXX.class,XXX.class}) ，而且XXX类要继承Condition接口。关于Condition下面会说。


# 示例
我们以自己电脑的操作系统为判定条件，若我们的操作系统为Linux则创建Linux之父的Person的Bean；若操作系统为Windows则创建Windows之父的Person的Bean。

**一、首先我们来创建一个Person类：**

```java
package com.study.spring.annotation.bean;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.bean
 *
 * @author dsy
 */
public class Person {
    private String name;
    private Integer age;

    public Person() {
    }

    public Person(String name, Integer age) {
        this.name = name;
        this.age = age;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Integer getAge() {
        return age;
    }

    public void setAge(Integer age) {
        this.age = age;
    }

    @Override
    public String toString() {
        return "Person{" +
                "name='" + name + '\'' +
                ", age=" + age +
                '}';
    }
}

```
**二、再创建一个配置类MyConfig：**

```java
package com.study.spring.annotation.config;

import com.study.spring.annotation.bean.Person;
import com.study.spring.annotation.condition.LinuxCondition;
import com.study.spring.annotation.condition.WindowsCondition;
import org.springframework.context.annotation.*;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.config
 *
 * @author dsy
 */
@Configuration        //标识该类是一个配置类，相当于之前的一个xml配置文件
public class MyConfig {
 
    /**
     * @Conditional({Condition})  注解：按照一定的条件将bean添加到IOC容器中
     */
    @Conditional({LinuxCondition.class})
    @Bean("linux")
    public Person person01(){
        return new Person("linux之父",55);
    }

    @Bean("windows")
    @Conditional({WindowsCondition.class})
    public Person person02(){
        return new Person("windows之父",48);
    }

}

```

**三、接下来创建两个Condition类：LinuxCondition和WindowsCondition：**

```java
package com.study.spring.annotation.condition;

import org.springframework.context.annotation.Condition;
import org.springframework.context.annotation.ConditionContext;
import org.springframework.core.env.Environment;
import org.springframework.core.type.AnnotatedTypeMetadata;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.condition
 *
 * @author dsy
 */
//判断是否Linux系统 要进行判断必须实现Condition接口
public class LinuxCondition implements Condition {

    /**
     *
     * @param conditionContext  判断条件能使用的上下文环境
     * @param annotatedTypeMetadata 当前标注了@Conditional注解的注释信息
     * @return Boolean
     */
    @Override
    public boolean matches(ConditionContext conditionContext, AnnotatedTypeMetadata annotatedTypeMetadata) {
        Environment environment = conditionContext.getEnvironment();
        String property = environment.getProperty("os.name");
        return property!=null&&property.contains("Linux");
    }
}

```

```java
package com.study.spring.annotation.condition;

import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;
import org.springframework.beans.factory.support.BeanDefinitionRegistry;
import org.springframework.context.annotation.Condition;
import org.springframework.context.annotation.ConditionContext;
import org.springframework.core.env.Environment;
import org.springframework.core.type.AnnotatedTypeMetadata;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.condition
 *
 * @author dsy
 */
//判断是否Windows系统 要进行判断必须实现Condition接口
public class WindowsCondition implements Condition {

    /**
     *
     * @param conditionContext  判断条件能使用的上下文环境
     * @param annotatedTypeMetadata 当前标注了@Conditional注解的注释信息
     * @return Boolean
     */
    @Override
    public boolean matches(ConditionContext conditionContext, AnnotatedTypeMetadata annotatedTypeMetadata) {
        Environment environment = conditionContext.getEnvironment();
        String property = environment.getProperty("os.name");
        return property != null && property.contains("Windows");
    }
}

```

**说明：** 这两个类均实现了Condition接口，里面只有一个matches方法返回值为boolea类型，也就是说@Conditional({LinuxCondition.class})或者@Conditional({WindowsCondition.class})通过判断注解括号里面条件类的matches方法的返回值来判定要不要在IOC容器中创建由@Conditional注解标识的这个Bean；若matches返回值为true则创建该Bean，若返回false则不创建该Bean。

```java
@FunctionalInterface
public interface Condition {
    boolean matches(ConditionContext var1, AnnotatedTypeMetadata var2);
}
```

**四、测试：**

```java
package com.study.spring;

import com.study.spring.annotation.bean.Person;
import com.study.spring.annotation.config.MyConfig;
import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;

import java.util.Map;

@SpringBootTest
class ApplicationTests {
    /**
     * @Conditional 注解来按照条件获取bean实例
     */
    @Test
    void testAnnotationConfig2(){
        //创建IOC容器
        AnnotationConfigApplicationContext applicationContext = new AnnotationConfigApplicationContext(MyConfig.class);
        //getBeanNamesForType方法按照类来获取该类的Bean的id
        String[] names = applicationContext.getBeanNamesForType(Person.class);
        //打印
        for (String name:names){
            System.out.println(name);
        }
        //获取具体的Bean
        Map<String, Person> beans = applicationContext.getBeansOfType(Person.class);
        System.out.println(beans);
    }

}

```
**打印输出：**

```java
windows
{windows=Person{name='windows之父', age=48}}
```

若我们改变运行环境，加上参数：-Dos.name=Linux
![在这里插入图片描述](https://img-blog.csdnimg.cn/20200401134456722.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zOTI5NjI4Mw==,size_16,color_FFFFFF,t_70#pic_center)
再次运行打印输出：

```java
linux
{linux=Person{name='linux之父', age=55}}
```

# 总结
1、@Conditional注解的作用是按照一定的判定条件来控制Bean的创建
2、@Conditional可以加在一个配置类上，表示该类下面的全部的@Bean都会启用配置；也可以加在一个@Bean的方法上面，只对该方法有效
3、判定条件类XXXCondition类要实现Condition接口，并重写matches方法，在该方法里面写自己的判定逻辑

参考资料：《Spring Boot实战》
, firstPicture=https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fb-ssl.duitang.com%2Fuploads%2Fitem%2F201809%2F02%2F20180902085455_tnmhi.thumb.700_0.jpg&refer=http%3A%2F%2Fb-ssl.duitang.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1630029799&t=90df9bfc49257642f69016cf413dd3b6, flag=原创, description=在学习SpringBoot的时候我们会在各种自动配置类中看到大量使用了@Conditional注解，这篇文章主要简单说下@Conditional注解的使用方法。, views=null, appreciation=true, shareStatement=true, comment=true, publish=false, recommend=true, createTime=null, updateTime=null, type=null, user=null, tags=null), org.apache.catalina.session.StandardSessionFacade@3d023f16, {}, 1]}
2021-07-28 10:03:51.775 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.m.TypeMapper.selectByPrimaryKey    : ==>  Preparing: SELECT type_id,name FROM type WHERE type_id = ? 
2021-07-28 10:03:51.775 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.m.TypeMapper.selectByPrimaryKey    : ==> Parameters: 6(Integer)
2021-07-28 10:03:51.776 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.m.TypeMapper.selectByPrimaryKey    : <==      Total: 1
2021-07-28 10:03:51.777 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 10:03:51.777 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 1(String)
2021-07-28 10:03:51.778 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 10:03:51.780 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.m.B.updateByPrimaryKeySelective    : ==>  Preparing: UPDATE blog SET type_id = ?,user_id = ?,title = ?,content = ?,first_picture = ?,flag = ?,description = ?,appreciation = ?,share_statement = ?,comment = ?,publish = ?,recommend = ?,update_time = ? WHERE blog_id = ? 
2021-07-28 10:03:51.782 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.m.B.updateByPrimaryKeySelective    : ==> Parameters: 6(Integer), 1(Integer), 条件注解@Conditional(String), # 简介
在学习SpringBoot的时候我们会在各种自动配置类中看到大量使用了@Conditional注解，这篇文章主要简单说下@Conditional注解的使用方法。

**定义：**
按照《Spring Boot实战》书中所说的：“@Conditional根据满足某一特定条件创建一个特定的Bean。比方说，当某一个jar包在一个类路径下的时候，自动配置一个或多个Bean；或者只有某个Bean被创建才会才会创建另外一个Bean。总的来说，就是根据特定判定条件来控制Bean的创建行为，这样我们可以利用这个特性进行一些自动的配置。”

在使用该注解之前我们来看一下@Conditional的源码
```java
@Target({ElementType.TYPE, ElementType.METHOD})
@Retention(RetentionPolicy.RUNTIME)
@Documented
public @interface Conditional {
    Class<? extends Condition>[] value();
}
```

我们关注下面的两点：

* @Target({ElementType.TYPE, ElementType.METHOD})：表示该注解可以加在类上，表示该类下面的所有@Bean都会启用配置；也可以加在方法上，只对该方法有效

* Class<? extends Condition>[] value()：表示要传一个Class集合给该注解，即@Conditional({XXX.class,XXX.class}) ，而且XXX类要继承Condition接口。关于Condition下面会说。


# 示例
我们以自己电脑的操作系统为判定条件，若我们的操作系统为Linux则创建Linux之父的Person的Bean；若操作系统为Windows则创建Windows之父的Person的Bean。

**一、首先我们来创建一个Person类：**

```java
package com.study.spring.annotation.bean;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.bean
 *
 * @author dsy
 */
public class Person {
    private String name;
    private Integer age;

    public Person() {
    }

    public Person(String name, Integer age) {
        this.name = name;
        this.age = age;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Integer getAge() {
        return age;
    }

    public void setAge(Integer age) {
        this.age = age;
    }

    @Override
    public String toString() {
        return "Person{" +
                "name='" + name + '\'' +
                ", age=" + age +
                '}';
    }
}

```
**二、再创建一个配置类MyConfig：**

```java
package com.study.spring.annotation.config;

import com.study.spring.annotation.bean.Person;
import com.study.spring.annotation.condition.LinuxCondition;
import com.study.spring.annotation.condition.WindowsCondition;
import org.springframework.context.annotation.*;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.config
 *
 * @author dsy
 */
@Configuration        //标识该类是一个配置类，相当于之前的一个xml配置文件
public class MyConfig {
 
    /**
     * @Conditional({Condition})  注解：按照一定的条件将bean添加到IOC容器中
     */
    @Conditional({LinuxCondition.class})
    @Bean("linux")
    public Person person01(){
        return new Person("linux之父",55);
    }

    @Bean("windows")
    @Conditional({WindowsCondition.class})
    public Person person02(){
        return new Person("windows之父",48);
    }

}

```

**三、接下来创建两个Condition类：LinuxCondition和WindowsCondition：**

```java
package com.study.spring.annotation.condition;

import org.springframework.context.annotation.Condition;
import org.springframework.context.annotation.ConditionContext;
import org.springframework.core.env.Environment;
import org.springframework.core.type.AnnotatedTypeMetadata;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.condition
 *
 * @author dsy
 */
//判断是否Linux系统 要进行判断必须实现Condition接口
public class LinuxCondition implements Condition {

    /**
     *
     * @param conditionContext  判断条件能使用的上下文环境
     * @param annotatedTypeMetadata 当前标注了@Conditional注解的注释信息
     * @return Boolean
     */
    @Override
    public boolean matches(ConditionContext conditionContext, AnnotatedTypeMetadata annotatedTypeMetadata) {
        Environment environment = conditionContext.getEnvironment();
        String property = environment.getProperty("os.name");
        return property!=null&&property.contains("Linux");
    }
}

```

```java
package com.study.spring.annotation.condition;

import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;
import org.springframework.beans.factory.support.BeanDefinitionRegistry;
import org.springframework.context.annotation.Condition;
import org.springframework.context.annotation.ConditionContext;
import org.springframework.core.env.Environment;
import org.springframework.core.type.AnnotatedTypeMetadata;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.condition
 *
 * @author dsy
 */
//判断是否Windows系统 要进行判断必须实现Condition接口
public class WindowsCondition implements Condition {

    /**
     *
     * @param conditionContext  判断条件能使用的上下文环境
     * @param annotatedTypeMetadata 当前标注了@Conditional注解的注释信息
     * @return Boolean
     */
    @Override
    public boolean matches(ConditionContext conditionContext, AnnotatedTypeMetadata annotatedTypeMetadata) {
        Environment environment = conditionContext.getEnvironment();
        String property = environment.getProperty("os.name");
        return property != null && property.contains("Windows");
    }
}

```

**说明：** 这两个类均实现了Condition接口，里面只有一个matches方法返回值为boolea类型，也就是说@Conditional({LinuxCondition.class})或者@Conditional({WindowsCondition.class})通过判断注解括号里面条件类的matches方法的返回值来判定要不要在IOC容器中创建由@Conditional注解标识的这个Bean；若matches返回值为true则创建该Bean，若返回false则不创建该Bean。

```java
@FunctionalInterface
public interface Condition {
    boolean matches(ConditionContext var1, AnnotatedTypeMetadata var2);
}
```

**四、测试：**

```java
package com.study.spring;

import com.study.spring.annotation.bean.Person;
import com.study.spring.annotation.config.MyConfig;
import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;

import java.util.Map;

@SpringBootTest
class ApplicationTests {
    /**
     * @Conditional 注解来按照条件获取bean实例
     */
    @Test
    void testAnnotationConfig2(){
        //创建IOC容器
        AnnotationConfigApplicationContext applicationContext = new AnnotationConfigApplicationContext(MyConfig.class);
        //getBeanNamesForType方法按照类来获取该类的Bean的id
        String[] names = applicationContext.getBeanNamesForType(Person.class);
        //打印
        for (String name:names){
            System.out.println(name);
        }
        //获取具体的Bean
        Map<String, Person> beans = applicationContext.getBeansOfType(Person.class);
        System.out.println(beans);
    }

}

```
**打印输出：**

```java
windows
{windows=Person{name='windows之父', age=48}}
```

若我们改变运行环境，加上参数：-Dos.name=Linux
![在这里插入图片描述](https://img-blog.csdnimg.cn/20200401134456722.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zOTI5NjI4Mw==,size_16,color_FFFFFF,t_70#pic_center)
再次运行打印输出：

```java
linux
{linux=Person{name='linux之父', age=55}}
```

# 总结
1、@Conditional注解的作用是按照一定的判定条件来控制Bean的创建
2、@Conditional可以加在一个配置类上，表示该类下面的全部的@Bean都会启用配置；也可以加在一个@Bean的方法上面，只对该方法有效
3、判定条件类XXXCondition类要实现Condition接口，并重写matches方法，在该方法里面写自己的判定逻辑

参考资料：《Spring Boot实战》
(String), https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fb-ssl.duitang.com%2Fuploads%2Fitem%2F201809%2F02%2F20180902085455_tnmhi.thumb.700_0.jpg&refer=http%3A%2F%2Fb-ssl.duitang.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1630029799&t=90df9bfc49257642f69016cf413dd3b6(String), 原创(String), 在学习SpringBoot的时候我们会在各种自动配置类中看到大量使用了@Conditional注解，这篇文章主要简单说下@Conditional注解的使用方法。(String), true(Boolean), true(Boolean), true(Boolean), false(Boolean), true(Boolean), 2021-07-28 10:03:51.778(Timestamp), 8(Integer)
2021-07-28 10:03:51.822  INFO 3396 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:03:51.822 ERROR 3396 --- [http-nio-8080-exec-5] b.l.b.h.ControllerExceptionHandler       : Request URL : http://localhost:8080/admin/blogs/add, Exception : 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'first_picture' at row 1
### The error may exist in black/lyg/blog/mapper/BlogMapper.java (best guess)
### The error may involve black.lyg.blog.mapper.BlogMapper.updateByPrimaryKeySelective-Inline
### The error occurred while setting parameters
### SQL: UPDATE blog  SET type_id = ?,user_id = ?,title = ?,content = ?,first_picture = ?,flag = ?,description = ?,appreciation = ?,share_statement = ?,comment = ?,publish = ?,recommend = ?,update_time = ? WHERE  blog_id = ?
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'first_picture' at row 1
; Data truncation: Data too long for column 'first_picture' at row 1; nested exception is com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'first_picture' at row 1
2021-07-28 10:03:51.822  WARN 3396 --- [http-nio-8080-exec-5] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'first_picture' at row 1
### The error may exist in black/lyg/blog/mapper/BlogMapper.java (best guess)
### The error may involve black.lyg.blog.mapper.BlogMapper.updateByPrimaryKeySelective-Inline
### The error occurred while setting parameters
### SQL: UPDATE blog  SET type_id = ?,user_id = ?,title = ?,content = ?,first_picture = ?,flag = ?,description = ?,appreciation = ?,share_statement = ?,comment = ?,publish = ?,recommend = ?,update_time = ? WHERE  blog_id = ?
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'first_picture' at row 1
; Data truncation: Data too long for column 'first_picture' at row 1; nested exception is com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'first_picture' at row 1]
2021-07-28 10:04:42.889 DEBUG 3396 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==>  Preparing: SELECT count(0) FROM blog 
2021-07-28 10:04:42.890 DEBUG 3396 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==> Parameters: 
2021-07-28 10:04:42.891 DEBUG 3396 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.findBlogAll_COUNT     : <==      Total: 1
2021-07-28 10:04:42.892 DEBUG 3396 --- [http-nio-8080-exec-3] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc LIMIT ? 
2021-07-28 10:04:42.892 DEBUG 3396 --- [http-nio-8080-exec-3] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 5(Integer)
2021-07-28 10:04:42.894 DEBUG 3396 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:04:42.894 DEBUG 3396 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:04:42.895 DEBUG 3396 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:04:42.895 DEBUG 3396 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:04:42.895 DEBUG 3396 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:04:42.896 DEBUG 3396 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:04:42.896 DEBUG 3396 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:04:42.896 DEBUG 3396 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:04:42.897 DEBUG 3396 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:04:42.897 DEBUG 3396 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:04:42.897 DEBUG 3396 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 10:04:42.898 DEBUG 3396 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:04:42.898 DEBUG 3396 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:04:42.898 DEBUG 3396 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 10:04:42.899 DEBUG 3396 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:04:42.899 DEBUG 3396 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:04:42.900 DEBUG 3396 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 10:04:42.900 DEBUG 3396 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:04:42.900 DEBUG 3396 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:04:42.901 DEBUG 3396 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 10:04:42.901 DEBUG 3396 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:04:42.902 DEBUG 3396 --- [http-nio-8080-exec-3] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 5
2021-07-28 10:04:42.905  INFO 3396 --- [http-nio-8080-exec-3] black.lyg.blog.service.TagService        : 从redis中获取数据：[TagTops(tagId=20, name=设计模式, BlogNumber=3), TagTops(tagId=21, name=Redis, BlogNumber=5), TagTops(tagId=22, name=Java, BlogNumber=4), TagTops(tagId=2, name=Mybatis, BlogNumber=1), TagTops(tagId=1, name=Spring, BlogNumber=2), TagTops(tagId=24, name=测试, BlogNumber=2), TagTops(tagId=23, name=MySQL, BlogNumber=1)]
2021-07-28 10:04:42.905  INFO 3396 --- [http-nio-8080-exec-3] black.lyg.blog.service.TagService        : 从redis中查找到由标签显示博客的数据：[TagTops(tagId=21, name=Redis, BlogNumber=5), TagTops(tagId=22, name=Java, BlogNumber=4), TagTops(tagId=20, name=设计模式, BlogNumber=3), TagTops(tagId=1, name=Spring, BlogNumber=2), TagTops(tagId=24, name=测试, BlogNumber=2), TagTops(tagId=2, name=Mybatis, BlogNumber=1), TagTops(tagId=23, name=MySQL, BlogNumber=1)]
2021-07-28 10:04:42.907  INFO 3396 --- [http-nio-8080-exec-3] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:04:43.213  INFO 3396 --- [http-nio-8080-exec-2] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:04:46.727  INFO 3396 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.loginPage', args=[]}
2021-07-28 10:04:46.727  INFO 3396 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:04:46.727  INFO 3396 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : result : admin/login 
2021-07-28 10:04:51.265  INFO 3396 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.login', args=[admin, lyg0918, org.apache.catalina.session.StandardSessionFacade@3d023f16, {}]}
2021-07-28 10:04:51.266 DEBUG 3396 --- [http-nio-8080-exec-8] .l.b.m.U.selectUserNameByNameAndPassWord : ==>  Preparing: select * from user where username = ? and password = ? 
2021-07-28 10:04:51.266 DEBUG 3396 --- [http-nio-8080-exec-8] .l.b.m.U.selectUserNameByNameAndPassWord : ==> Parameters: admin(String), 89446CF944BBA2485A8562075A0E0BB7(String)
2021-07-28 10:04:51.267 DEBUG 3396 --- [http-nio-8080-exec-8] .l.b.m.U.selectUserNameByNameAndPassWord : <==      Total: 1
2021-07-28 10:04:51.268  INFO 3396 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:04:51.268  INFO 3396 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : result : admin/index 
2021-07-28 10:04:51.527  INFO 3396 --- [http-nio-8080-exec-4] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:04:53.275  INFO 3396 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 10:04:53.276 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 10:04:53.277 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 10:04:53.277 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 10:04:53.279 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 10:04:53.279 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 10:04:53.279 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 10:04:53.280 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 10:04:53.280 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 10:04:53.282 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:04:53.282 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:04:53.283 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:04:53.283 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:04:53.283 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:04:53.284 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:04:53.285 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:04:53.285 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:04:53.285 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:04:53.285 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:04:53.285 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 10:04:53.286 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:04:53.286 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 8
2021-07-28 10:04:53.286 DEBUG 3396 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 10:04:53.286 DEBUG 3396 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 10:04:53.287 DEBUG 3396 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 10:04:53.287  INFO 3396 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:04:53.287  INFO 3396 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 10:04:53.548  INFO 3396 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:04:55.345  INFO 3396 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/8/edit', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.editPage', args=[{}, 8]}
2021-07-28 10:04:55.347  INFO 3396 --- [http-nio-8080-exec-5] black.lyg.blog.service.BlogService       : 从redis中获取Blog的数据，标题为条件注解@Conditional
2021-07-28 10:04:55.347 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 10:04:55.348 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 8(Integer)
2021-07-28 10:04:55.348 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 10:04:55.349 DEBUG 3396 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 10:04:55.349 DEBUG 3396 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 10:04:55.349 DEBUG 3396 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 10:04:55.350 DEBUG 3396 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TagMapper.selectAll    : ==>  Preparing: SELECT tag_id,name FROM tag 
2021-07-28 10:04:55.350 DEBUG 3396 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TagMapper.selectAll    : ==> Parameters: 
2021-07-28 10:04:55.350 DEBUG 3396 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TagMapper.selectAll    : <==      Total: 7
2021-07-28 10:04:55.351  INFO 3396 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:04:55.351  INFO 3396 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : result : admin/blogs-input 
2021-07-28 10:04:55.587  INFO 3396 --- [http-nio-8080-exec-6] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:05:00.123  INFO 3396 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/add', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogAdd', args=[Blog(blogId=8, typeId=6, userId=null, title=条件注解@Conditional, content=# 简介
在学习SpringBoot的时候我们会在各种自动配置类中看到大量使用了@Conditional注解，这篇文章主要简单说下@Conditional注解的使用方法。

**定义：**
按照《Spring Boot实战》书中所说的：“@Conditional根据满足某一特定条件创建一个特定的Bean。比方说，当某一个jar包在一个类路径下的时候，自动配置一个或多个Bean；或者只有某个Bean被创建才会才会创建另外一个Bean。总的来说，就是根据特定判定条件来控制Bean的创建行为，这样我们可以利用这个特性进行一些自动的配置。”

在使用该注解之前我们来看一下@Conditional的源码
```java
@Target({ElementType.TYPE, ElementType.METHOD})
@Retention(RetentionPolicy.RUNTIME)
@Documented
public @interface Conditional {
    Class<? extends Condition>[] value();
}
```

我们关注下面的两点：

* @Target({ElementType.TYPE, ElementType.METHOD})：表示该注解可以加在类上，表示该类下面的所有@Bean都会启用配置；也可以加在方法上，只对该方法有效

* Class<? extends Condition>[] value()：表示要传一个Class集合给该注解，即@Conditional({XXX.class,XXX.class}) ，而且XXX类要继承Condition接口。关于Condition下面会说。


# 示例
我们以自己电脑的操作系统为判定条件，若我们的操作系统为Linux则创建Linux之父的Person的Bean；若操作系统为Windows则创建Windows之父的Person的Bean。

**一、首先我们来创建一个Person类：**

```java
package com.study.spring.annotation.bean;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.bean
 *
 * @author dsy
 */
public class Person {
    private String name;
    private Integer age;

    public Person() {
    }

    public Person(String name, Integer age) {
        this.name = name;
        this.age = age;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Integer getAge() {
        return age;
    }

    public void setAge(Integer age) {
        this.age = age;
    }

    @Override
    public String toString() {
        return "Person{" +
                "name='" + name + '\'' +
                ", age=" + age +
                '}';
    }
}

```
**二、再创建一个配置类MyConfig：**

```java
package com.study.spring.annotation.config;

import com.study.spring.annotation.bean.Person;
import com.study.spring.annotation.condition.LinuxCondition;
import com.study.spring.annotation.condition.WindowsCondition;
import org.springframework.context.annotation.*;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.config
 *
 * @author dsy
 */
@Configuration        //标识该类是一个配置类，相当于之前的一个xml配置文件
public class MyConfig {
 
    /**
     * @Conditional({Condition})  注解：按照一定的条件将bean添加到IOC容器中
     */
    @Conditional({LinuxCondition.class})
    @Bean("linux")
    public Person person01(){
        return new Person("linux之父",55);
    }

    @Bean("windows")
    @Conditional({WindowsCondition.class})
    public Person person02(){
        return new Person("windows之父",48);
    }

}

```

**三、接下来创建两个Condition类：LinuxCondition和WindowsCondition：**

```java
package com.study.spring.annotation.condition;

import org.springframework.context.annotation.Condition;
import org.springframework.context.annotation.ConditionContext;
import org.springframework.core.env.Environment;
import org.springframework.core.type.AnnotatedTypeMetadata;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.condition
 *
 * @author dsy
 */
//判断是否Linux系统 要进行判断必须实现Condition接口
public class LinuxCondition implements Condition {

    /**
     *
     * @param conditionContext  判断条件能使用的上下文环境
     * @param annotatedTypeMetadata 当前标注了@Conditional注解的注释信息
     * @return Boolean
     */
    @Override
    public boolean matches(ConditionContext conditionContext, AnnotatedTypeMetadata annotatedTypeMetadata) {
        Environment environment = conditionContext.getEnvironment();
        String property = environment.getProperty("os.name");
        return property!=null&&property.contains("Linux");
    }
}

```

```java
package com.study.spring.annotation.condition;

import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;
import org.springframework.beans.factory.support.BeanDefinitionRegistry;
import org.springframework.context.annotation.Condition;
import org.springframework.context.annotation.ConditionContext;
import org.springframework.core.env.Environment;
import org.springframework.core.type.AnnotatedTypeMetadata;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.condition
 *
 * @author dsy
 */
//判断是否Windows系统 要进行判断必须实现Condition接口
public class WindowsCondition implements Condition {

    /**
     *
     * @param conditionContext  判断条件能使用的上下文环境
     * @param annotatedTypeMetadata 当前标注了@Conditional注解的注释信息
     * @return Boolean
     */
    @Override
    public boolean matches(ConditionContext conditionContext, AnnotatedTypeMetadata annotatedTypeMetadata) {
        Environment environment = conditionContext.getEnvironment();
        String property = environment.getProperty("os.name");
        return property != null && property.contains("Windows");
    }
}

```

**说明：** 这两个类均实现了Condition接口，里面只有一个matches方法返回值为boolea类型，也就是说@Conditional({LinuxCondition.class})或者@Conditional({WindowsCondition.class})通过判断注解括号里面条件类的matches方法的返回值来判定要不要在IOC容器中创建由@Conditional注解标识的这个Bean；若matches返回值为true则创建该Bean，若返回false则不创建该Bean。

```java
@FunctionalInterface
public interface Condition {
    boolean matches(ConditionContext var1, AnnotatedTypeMetadata var2);
}
```

**四、测试：**

```java
package com.study.spring;

import com.study.spring.annotation.bean.Person;
import com.study.spring.annotation.config.MyConfig;
import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;

import java.util.Map;

@SpringBootTest
class ApplicationTests {
    /**
     * @Conditional 注解来按照条件获取bean实例
     */
    @Test
    void testAnnotationConfig2(){
        //创建IOC容器
        AnnotationConfigApplicationContext applicationContext = new AnnotationConfigApplicationContext(MyConfig.class);
        //getBeanNamesForType方法按照类来获取该类的Bean的id
        String[] names = applicationContext.getBeanNamesForType(Person.class);
        //打印
        for (String name:names){
            System.out.println(name);
        }
        //获取具体的Bean
        Map<String, Person> beans = applicationContext.getBeansOfType(Person.class);
        System.out.println(beans);
    }

}

```
**打印输出：**

```java
windows
{windows=Person{name='windows之父', age=48}}
```

若我们改变运行环境，加上参数：-Dos.name=Linux
![在这里插入图片描述](https://img-blog.csdnimg.cn/20200401134456722.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zOTI5NjI4Mw==,size_16,color_FFFFFF,t_70#pic_center)
再次运行打印输出：

```java
linux
{linux=Person{name='linux之父', age=55}}
```

# 总结
1、@Conditional注解的作用是按照一定的判定条件来控制Bean的创建
2、@Conditional可以加在一个配置类上，表示该类下面的全部的@Bean都会启用配置；也可以加在一个@Bean的方法上面，只对该方法有效
3、判定条件类XXXCondition类要实现Condition接口，并重写matches方法，在该方法里面写自己的判定逻辑

参考资料：《Spring Boot实战》
, firstPicture=https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fwx1.sinaimg.cn%2Fbmiddle%2Fceeb653ely1fkcffnqwdyj208c08cgll.jpg&refer=http%3A%2F%2Fwx1.sinaimg.cn&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1630029852&t=456a692fd1a717b65241d6ef10df492f, flag=原创, description=在学习SpringBoot的时候我们会在各种自动配置类中看到大量使用了@Conditional注解，这篇文章主要简单说下@Conditional注解的使用方法。, views=null, appreciation=true, shareStatement=true, comment=true, publish=false, recommend=true, createTime=null, updateTime=null, type=null, user=null, tags=null), org.apache.catalina.session.StandardSessionFacade@3d023f16, {}, 1]}
2021-07-28 10:05:00.124 DEBUG 3396 --- [http-nio-8080-exec-3] b.l.b.m.TypeMapper.selectByPrimaryKey    : ==>  Preparing: SELECT type_id,name FROM type WHERE type_id = ? 
2021-07-28 10:05:00.124 DEBUG 3396 --- [http-nio-8080-exec-3] b.l.b.m.TypeMapper.selectByPrimaryKey    : ==> Parameters: 6(Integer)
2021-07-28 10:05:00.125 DEBUG 3396 --- [http-nio-8080-exec-3] b.l.b.m.TypeMapper.selectByPrimaryKey    : <==      Total: 1
2021-07-28 10:05:00.125 DEBUG 3396 --- [http-nio-8080-exec-3] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 10:05:00.126 DEBUG 3396 --- [http-nio-8080-exec-3] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 1(String)
2021-07-28 10:05:00.126 DEBUG 3396 --- [http-nio-8080-exec-3] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 10:05:00.127 DEBUG 3396 --- [http-nio-8080-exec-3] b.l.b.m.B.updateByPrimaryKeySelective    : ==>  Preparing: UPDATE blog SET type_id = ?,user_id = ?,title = ?,content = ?,first_picture = ?,flag = ?,description = ?,appreciation = ?,share_statement = ?,comment = ?,publish = ?,recommend = ?,update_time = ? WHERE blog_id = ? 
2021-07-28 10:05:00.128 DEBUG 3396 --- [http-nio-8080-exec-3] b.l.b.m.B.updateByPrimaryKeySelective    : ==> Parameters: 6(Integer), 1(Integer), 条件注解@Conditional(String), # 简介
在学习SpringBoot的时候我们会在各种自动配置类中看到大量使用了@Conditional注解，这篇文章主要简单说下@Conditional注解的使用方法。

**定义：**
按照《Spring Boot实战》书中所说的：“@Conditional根据满足某一特定条件创建一个特定的Bean。比方说，当某一个jar包在一个类路径下的时候，自动配置一个或多个Bean；或者只有某个Bean被创建才会才会创建另外一个Bean。总的来说，就是根据特定判定条件来控制Bean的创建行为，这样我们可以利用这个特性进行一些自动的配置。”

在使用该注解之前我们来看一下@Conditional的源码
```java
@Target({ElementType.TYPE, ElementType.METHOD})
@Retention(RetentionPolicy.RUNTIME)
@Documented
public @interface Conditional {
    Class<? extends Condition>[] value();
}
```

我们关注下面的两点：

* @Target({ElementType.TYPE, ElementType.METHOD})：表示该注解可以加在类上，表示该类下面的所有@Bean都会启用配置；也可以加在方法上，只对该方法有效

* Class<? extends Condition>[] value()：表示要传一个Class集合给该注解，即@Conditional({XXX.class,XXX.class}) ，而且XXX类要继承Condition接口。关于Condition下面会说。


# 示例
我们以自己电脑的操作系统为判定条件，若我们的操作系统为Linux则创建Linux之父的Person的Bean；若操作系统为Windows则创建Windows之父的Person的Bean。

**一、首先我们来创建一个Person类：**

```java
package com.study.spring.annotation.bean;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.bean
 *
 * @author dsy
 */
public class Person {
    private String name;
    private Integer age;

    public Person() {
    }

    public Person(String name, Integer age) {
        this.name = name;
        this.age = age;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Integer getAge() {
        return age;
    }

    public void setAge(Integer age) {
        this.age = age;
    }

    @Override
    public String toString() {
        return "Person{" +
                "name='" + name + '\'' +
                ", age=" + age +
                '}';
    }
}

```
**二、再创建一个配置类MyConfig：**

```java
package com.study.spring.annotation.config;

import com.study.spring.annotation.bean.Person;
import com.study.spring.annotation.condition.LinuxCondition;
import com.study.spring.annotation.condition.WindowsCondition;
import org.springframework.context.annotation.*;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.config
 *
 * @author dsy
 */
@Configuration        //标识该类是一个配置类，相当于之前的一个xml配置文件
public class MyConfig {
 
    /**
     * @Conditional({Condition})  注解：按照一定的条件将bean添加到IOC容器中
     */
    @Conditional({LinuxCondition.class})
    @Bean("linux")
    public Person person01(){
        return new Person("linux之父",55);
    }

    @Bean("windows")
    @Conditional({WindowsCondition.class})
    public Person person02(){
        return new Person("windows之父",48);
    }

}

```

**三、接下来创建两个Condition类：LinuxCondition和WindowsCondition：**

```java
package com.study.spring.annotation.condition;

import org.springframework.context.annotation.Condition;
import org.springframework.context.annotation.ConditionContext;
import org.springframework.core.env.Environment;
import org.springframework.core.type.AnnotatedTypeMetadata;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.condition
 *
 * @author dsy
 */
//判断是否Linux系统 要进行判断必须实现Condition接口
public class LinuxCondition implements Condition {

    /**
     *
     * @param conditionContext  判断条件能使用的上下文环境
     * @param annotatedTypeMetadata 当前标注了@Conditional注解的注释信息
     * @return Boolean
     */
    @Override
    public boolean matches(ConditionContext conditionContext, AnnotatedTypeMetadata annotatedTypeMetadata) {
        Environment environment = conditionContext.getEnvironment();
        String property = environment.getProperty("os.name");
        return property!=null&&property.contains("Linux");
    }
}

```

```java
package com.study.spring.annotation.condition;

import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;
import org.springframework.beans.factory.support.BeanDefinitionRegistry;
import org.springframework.context.annotation.Condition;
import org.springframework.context.annotation.ConditionContext;
import org.springframework.core.env.Environment;
import org.springframework.core.type.AnnotatedTypeMetadata;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.condition
 *
 * @author dsy
 */
//判断是否Windows系统 要进行判断必须实现Condition接口
public class WindowsCondition implements Condition {

    /**
     *
     * @param conditionContext  判断条件能使用的上下文环境
     * @param annotatedTypeMetadata 当前标注了@Conditional注解的注释信息
     * @return Boolean
     */
    @Override
    public boolean matches(ConditionContext conditionContext, AnnotatedTypeMetadata annotatedTypeMetadata) {
        Environment environment = conditionContext.getEnvironment();
        String property = environment.getProperty("os.name");
        return property != null && property.contains("Windows");
    }
}

```

**说明：** 这两个类均实现了Condition接口，里面只有一个matches方法返回值为boolea类型，也就是说@Conditional({LinuxCondition.class})或者@Conditional({WindowsCondition.class})通过判断注解括号里面条件类的matches方法的返回值来判定要不要在IOC容器中创建由@Conditional注解标识的这个Bean；若matches返回值为true则创建该Bean，若返回false则不创建该Bean。

```java
@FunctionalInterface
public interface Condition {
    boolean matches(ConditionContext var1, AnnotatedTypeMetadata var2);
}
```

**四、测试：**

```java
package com.study.spring;

import com.study.spring.annotation.bean.Person;
import com.study.spring.annotation.config.MyConfig;
import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;

import java.util.Map;

@SpringBootTest
class ApplicationTests {
    /**
     * @Conditional 注解来按照条件获取bean实例
     */
    @Test
    void testAnnotationConfig2(){
        //创建IOC容器
        AnnotationConfigApplicationContext applicationContext = new AnnotationConfigApplicationContext(MyConfig.class);
        //getBeanNamesForType方法按照类来获取该类的Bean的id
        String[] names = applicationContext.getBeanNamesForType(Person.class);
        //打印
        for (String name:names){
            System.out.println(name);
        }
        //获取具体的Bean
        Map<String, Person> beans = applicationContext.getBeansOfType(Person.class);
        System.out.println(beans);
    }

}

```
**打印输出：**

```java
windows
{windows=Person{name='windows之父', age=48}}
```

若我们改变运行环境，加上参数：-Dos.name=Linux
![在这里插入图片描述](https://img-blog.csdnimg.cn/20200401134456722.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zOTI5NjI4Mw==,size_16,color_FFFFFF,t_70#pic_center)
再次运行打印输出：

```java
linux
{linux=Person{name='linux之父', age=55}}
```

# 总结
1、@Conditional注解的作用是按照一定的判定条件来控制Bean的创建
2、@Conditional可以加在一个配置类上，表示该类下面的全部的@Bean都会启用配置；也可以加在一个@Bean的方法上面，只对该方法有效
3、判定条件类XXXCondition类要实现Condition接口，并重写matches方法，在该方法里面写自己的判定逻辑

参考资料：《Spring Boot实战》
(String), https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fwx1.sinaimg.cn%2Fbmiddle%2Fceeb653ely1fkcffnqwdyj208c08cgll.jpg&refer=http%3A%2F%2Fwx1.sinaimg.cn&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1630029852&t=456a692fd1a717b65241d6ef10df492f(String), 原创(String), 在学习SpringBoot的时候我们会在各种自动配置类中看到大量使用了@Conditional注解，这篇文章主要简单说下@Conditional注解的使用方法。(String), true(Boolean), true(Boolean), true(Boolean), false(Boolean), true(Boolean), 2021-07-28 10:05:00.127(Timestamp), 8(Integer)
2021-07-28 10:05:00.132 DEBUG 3396 --- [http-nio-8080-exec-3] b.l.b.m.B.updateByPrimaryKeySelective    : <==    Updates: 1
2021-07-28 10:05:00.133 DEBUG 3396 --- [http-nio-8080-exec-3] b.l.b.m.BlogTagMapper.deleteByExample    : ==>  Preparing: DELETE FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 10:05:00.133 DEBUG 3396 --- [http-nio-8080-exec-3] b.l.b.m.BlogTagMapper.deleteByExample    : ==> Parameters: 8(Integer)
2021-07-28 10:05:00.134 DEBUG 3396 --- [http-nio-8080-exec-3] b.l.b.m.BlogTagMapper.deleteByExample    : <==    Updates: 1
2021-07-28 10:05:00.135 DEBUG 3396 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.BlogTagMapper.insert   : ==>  Preparing: INSERT INTO blog_tag ( blog_tag_id,blog_id,tag_id ) VALUES( ?,?,? ) 
2021-07-28 10:05:00.136 DEBUG 3396 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.BlogTagMapper.insert   : ==> Parameters: null, 8(Integer), 1(Integer)
2021-07-28 10:05:00.137 DEBUG 3396 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.BlogTagMapper.insert   : <==    Updates: 1
2021-07-28 10:05:00.139  INFO 3396 --- [http-nio-8080-exec-3] black.lyg.blog.service.BlogService       : 删除redis中key为blogtags的hash数据类型
2021-07-28 10:05:00.139 DEBUG 3396 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.selectByPrimaryKey    : ==>  Preparing: SELECT blog_id,type_id,user_id,title,content,first_picture,flag,description,views,appreciation,share_statement,comment,publish,recommend,create_time,update_time FROM blog WHERE blog_id = ? 
2021-07-28 10:05:00.139 DEBUG 3396 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.selectByPrimaryKey    : ==> Parameters: 8(Integer)
2021-07-28 10:05:00.141 DEBUG 3396 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.selectByPrimaryKey    : <==      Total: 1
2021-07-28 10:05:00.143  INFO 3396 --- [http-nio-8080-exec-3] black.lyg.blog.service.BlogService       : 更新redis中TheLatestBlog的数据，标题为条件注解@Conditional
2021-07-28 10:05:00.146  INFO 3396 --- [http-nio-8080-exec-3] black.lyg.blog.service.BlogService       : 更新redis中AllBlog的数据，标题为条件注解@Conditional
2021-07-28 10:05:00.148  INFO 3396 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:05:00.148  INFO 3396 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : result : redirect:/admin/blogs 
2021-07-28 10:05:02.909 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==>  Preparing: SELECT count(0) FROM blog 
2021-07-28 10:05:02.909 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==> Parameters: 
2021-07-28 10:05:02.911 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.findBlogAll_COUNT     : <==      Total: 1
2021-07-28 10:05:02.911 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc LIMIT ? 
2021-07-28 10:05:02.912 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 5(Integer)
2021-07-28 10:05:02.914 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:05:02.914 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:05:02.915 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:05:02.915 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:05:02.915 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:05:02.916 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:05:02.916 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:05:02.916 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:05:02.917 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:05:02.917 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:05:02.917 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 10:05:02.918 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:05:02.918 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:05:02.918 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 10:05:02.919 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:05:02.919 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:05:02.919 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 10:05:02.920 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:05:02.920 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:05:02.920 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 10:05:02.921 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:05:02.921 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 5
2021-07-28 10:05:02.924  INFO 3396 --- [http-nio-8080-exec-7] black.lyg.blog.service.TagService        : 从redis中获取数据：[]
2021-07-28 10:05:02.924 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.TagMapper.findSeveralTopTags     : ==>  Preparing: select distinct t.tag_id,t.name ,count(*) as number from tag t ,blog_tag bt where t.tag_id = bt.tag_id group by t.tag_id, t.name order by number desc limit ? 
2021-07-28 10:05:02.924 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.TagMapper.findSeveralTopTags     : ==> Parameters: 10(Integer)
2021-07-28 10:05:02.925 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.TagMapper.findSeveralTopTags     : <==      Total: 7
2021-07-28 10:05:02.927  INFO 3396 --- [http-nio-8080-exec-7] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=21, name=Redis, BlogNumber=5)
2021-07-28 10:05:02.928  INFO 3396 --- [http-nio-8080-exec-7] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=22, name=Java, BlogNumber=4)
2021-07-28 10:05:02.929  INFO 3396 --- [http-nio-8080-exec-7] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=20, name=设计模式, BlogNumber=3)
2021-07-28 10:05:02.930  INFO 3396 --- [http-nio-8080-exec-7] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=1, name=Spring, BlogNumber=2)
2021-07-28 10:05:02.930  INFO 3396 --- [http-nio-8080-exec-7] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=24, name=测试, BlogNumber=2)
2021-07-28 10:05:02.931  INFO 3396 --- [http-nio-8080-exec-7] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=2, name=Mybatis, BlogNumber=1)
2021-07-28 10:05:02.932  INFO 3396 --- [http-nio-8080-exec-7] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=23, name=MySQL, BlogNumber=1)
2021-07-28 10:05:02.932  INFO 3396 --- [http-nio-8080-exec-7] black.lyg.blog.service.TagService        : 从Mysql中查找到由标签显示博客的数据：[TagTops(tagId=21, name=Redis, BlogNumber=5), TagTops(tagId=22, name=Java, BlogNumber=4), TagTops(tagId=20, name=设计模式, BlogNumber=3), TagTops(tagId=1, name=Spring, BlogNumber=2), TagTops(tagId=24, name=测试, BlogNumber=2), TagTops(tagId=2, name=Mybatis, BlogNumber=1), TagTops(tagId=23, name=MySQL, BlogNumber=1)]
2021-07-28 10:05:02.933  INFO 3396 --- [http-nio-8080-exec-7] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:05:03.220  INFO 3396 --- [http-nio-8080-exec-8] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:05:11.312  INFO 3396 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/types', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.TypeController.findAllTypes', args=[{}, 1]}
2021-07-28 10:05:11.312 DEBUG 3396 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectAll_COUNT  : ==>  Preparing: SELECT count(0) FROM type 
2021-07-28 10:05:11.313 DEBUG 3396 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectAll_COUNT  : ==> Parameters: 
2021-07-28 10:05:11.314 DEBUG 3396 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectAll_COUNT  : <==      Total: 1
2021-07-28 10:05:11.315 DEBUG 3396 --- [http-nio-8080-exec-9] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type LIMIT ? 
2021-07-28 10:05:11.315 DEBUG 3396 --- [http-nio-8080-exec-9] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 10(Integer)
2021-07-28 10:05:11.316 DEBUG 3396 --- [http-nio-8080-exec-9] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 10:05:11.316  INFO 3396 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:05:11.317  INFO 3396 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : result : admin/types 
2021-07-28 10:05:11.563  INFO 3396 --- [http-nio-8080-exec-10] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:05:12.384  INFO 3396 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/types', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.TypeController.findAllTypes', args=[{}, 1]}
2021-07-28 10:05:12.385 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectAll_COUNT  : ==>  Preparing: SELECT count(0) FROM type 
2021-07-28 10:05:12.385 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectAll_COUNT  : ==> Parameters: 
2021-07-28 10:05:12.387 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectAll_COUNT  : <==      Total: 1
2021-07-28 10:05:12.387 DEBUG 3396 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type LIMIT ? 
2021-07-28 10:05:12.387 DEBUG 3396 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 10(Integer)
2021-07-28 10:05:12.388 DEBUG 3396 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 10:05:12.388  INFO 3396 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:05:12.388  INFO 3396 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : admin/types 
2021-07-28 10:05:12.633  INFO 3396 --- [http-nio-8080-exec-5] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:05:13.624  INFO 3396 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 10:05:13.625 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 10:05:13.625 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 10:05:13.626 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 10:05:13.626 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 10:05:13.626 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 10:05:13.627 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 10:05:13.628 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 10:05:13.628 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 10:05:13.630 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:05:13.630 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:05:13.630 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:05:13.630 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:05:13.631 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:05:13.631 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:05:13.632 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:05:13.632 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:05:13.633 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:05:13.633 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:05:13.633 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 10:05:13.634 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:05:13.634 DEBUG 3396 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 8
2021-07-28 10:05:13.634 DEBUG 3396 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 10:05:13.634 DEBUG 3396 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 10:05:13.635 DEBUG 3396 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 10:05:13.635  INFO 3396 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:05:13.635  INFO 3396 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 10:05:13.878  INFO 3396 --- [http-nio-8080-exec-3] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:05:26.433 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==>  Preparing: SELECT count(0) FROM blog 
2021-07-28 10:05:26.434 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==> Parameters: 
2021-07-28 10:05:26.436 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.findBlogAll_COUNT     : <==      Total: 1
2021-07-28 10:05:26.436 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc LIMIT ? 
2021-07-28 10:05:26.436 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 5(Integer)
2021-07-28 10:05:26.437 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:05:26.437 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:05:26.438 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:05:26.438 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:05:26.439 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:05:26.439 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:05:26.439 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:05:26.439 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:05:26.440 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:05:26.440 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:05:26.441 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 10:05:26.442 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:05:26.442 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:05:26.442 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 10:05:26.444 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:05:26.444 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:05:26.444 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 10:05:26.445 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:05:26.445 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:05:26.445 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 10:05:26.446 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:05:26.446 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 5
2021-07-28 10:05:26.449  INFO 3396 --- [http-nio-8080-exec-7] black.lyg.blog.service.TagService        : 从redis中获取数据：[TagTops(tagId=20, name=设计模式, BlogNumber=3), TagTops(tagId=21, name=Redis, BlogNumber=5), TagTops(tagId=22, name=Java, BlogNumber=4), TagTops(tagId=2, name=Mybatis, BlogNumber=1), TagTops(tagId=1, name=Spring, BlogNumber=2), TagTops(tagId=24, name=测试, BlogNumber=2), TagTops(tagId=23, name=MySQL, BlogNumber=1)]
2021-07-28 10:05:26.449  INFO 3396 --- [http-nio-8080-exec-7] black.lyg.blog.service.TagService        : 从redis中查找到由标签显示博客的数据：[TagTops(tagId=21, name=Redis, BlogNumber=5), TagTops(tagId=22, name=Java, BlogNumber=4), TagTops(tagId=20, name=设计模式, BlogNumber=3), TagTops(tagId=1, name=Spring, BlogNumber=2), TagTops(tagId=24, name=测试, BlogNumber=2), TagTops(tagId=2, name=Mybatis, BlogNumber=1), TagTops(tagId=23, name=MySQL, BlogNumber=1)]
2021-07-28 10:05:26.449  INFO 3396 --- [http-nio-8080-exec-7] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:05:26.708  INFO 3396 --- [http-nio-8080-exec-8] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:05:48.848  INFO 3396 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/8/edit', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.editPage', args=[{}, 8]}
2021-07-28 10:05:48.850  INFO 3396 --- [http-nio-8080-exec-9] black.lyg.blog.service.BlogService       : 从redis中获取Blog的数据，标题为条件注解@Conditional
2021-07-28 10:05:48.851 DEBUG 3396 --- [http-nio-8080-exec-9] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 10:05:48.851 DEBUG 3396 --- [http-nio-8080-exec-9] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 8(Integer)
2021-07-28 10:05:48.852 DEBUG 3396 --- [http-nio-8080-exec-9] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 10:05:48.853 DEBUG 3396 --- [http-nio-8080-exec-9] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 10:05:48.853 DEBUG 3396 --- [http-nio-8080-exec-9] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 10:05:48.854 DEBUG 3396 --- [http-nio-8080-exec-9] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 10:05:48.854 DEBUG 3396 --- [http-nio-8080-exec-9] b.lyg.blog.mapper.TagMapper.selectAll    : ==>  Preparing: SELECT tag_id,name FROM tag 
2021-07-28 10:05:48.854 DEBUG 3396 --- [http-nio-8080-exec-9] b.lyg.blog.mapper.TagMapper.selectAll    : ==> Parameters: 
2021-07-28 10:05:48.855 DEBUG 3396 --- [http-nio-8080-exec-9] b.lyg.blog.mapper.TagMapper.selectAll    : <==      Total: 7
2021-07-28 10:05:48.855  INFO 3396 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:05:48.855  INFO 3396 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : result : admin/blogs-input 
2021-07-28 10:05:49.135  INFO 3396 --- [http-nio-8080-exec-10] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:05:50.511  INFO 3396 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 10:05:50.512 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 10:05:50.512 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 10:05:50.513 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 10:05:50.513 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 10:05:50.513 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 10:05:50.514 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 10:05:50.515 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 10:05:50.515 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 10:05:50.517 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:05:50.518 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:05:50.518 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:05:50.518 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:05:50.518 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:05:50.519 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:05:50.520 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:05:50.520 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:05:50.520 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:05:50.520 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:05:50.520 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 10:05:50.521 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:05:50.521 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 8
2021-07-28 10:05:50.521 DEBUG 3396 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 10:05:50.521 DEBUG 3396 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 10:05:50.522 DEBUG 3396 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 10:05:50.522  INFO 3396 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:05:50.522  INFO 3396 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 10:05:50.775  INFO 3396 --- [http-nio-8080-exec-5] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:05:51.727  INFO 3396 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/addPage', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.addPage', args=[{}]}
2021-07-28 10:05:51.728 DEBUG 3396 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 10:05:51.728 DEBUG 3396 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 10:05:51.729 DEBUG 3396 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 10:05:51.729 DEBUG 3396 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TagMapper.selectAll    : ==>  Preparing: SELECT tag_id,name FROM tag 
2021-07-28 10:05:51.730 DEBUG 3396 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TagMapper.selectAll    : ==> Parameters: 
2021-07-28 10:05:51.730 DEBUG 3396 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TagMapper.selectAll    : <==      Total: 7
2021-07-28 10:05:51.730  INFO 3396 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:05:51.730  INFO 3396 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : result : admin/blogs-input 
2021-07-28 10:05:51.979  INFO 3396 --- [http-nio-8080-exec-3] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:05:59.732  INFO 3396 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/8/edit', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.editPage', args=[{}, 8]}
2021-07-28 10:05:59.733  INFO 3396 --- [http-nio-8080-exec-7] black.lyg.blog.service.BlogService       : 从redis中获取Blog的数据，标题为条件注解@Conditional
2021-07-28 10:05:59.735 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 10:05:59.735 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 8(Integer)
2021-07-28 10:05:59.736 DEBUG 3396 --- [http-nio-8080-exec-7] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 10:05:59.737 DEBUG 3396 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 10:05:59.737 DEBUG 3396 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 10:05:59.737 DEBUG 3396 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 10:05:59.737 DEBUG 3396 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TagMapper.selectAll    : ==>  Preparing: SELECT tag_id,name FROM tag 
2021-07-28 10:05:59.737 DEBUG 3396 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TagMapper.selectAll    : ==> Parameters: 
2021-07-28 10:05:59.738 DEBUG 3396 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TagMapper.selectAll    : <==      Total: 7
2021-07-28 10:05:59.738  INFO 3396 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:05:59.738  INFO 3396 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : result : admin/blogs-input 
2021-07-28 10:05:59.982  INFO 3396 --- [http-nio-8080-exec-8] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:07:52.297  INFO 3396 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/add', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogAdd', args=[Blog(blogId=8, typeId=6, userId=null, title=条件注解@Conditional, content=# 简介
在学习SpringBoot的时候我们会在各种自动配置类中看到大量使用了@Conditional注解，这篇文章主要简单说下@Conditional注解的使用方法。

**定义：**
按照《Spring Boot实战》书中所说的：“@Conditional根据满足某一特定条件创建一个特定的Bean。比方说，当某一个jar包在一个类路径下的时候，自动配置一个或多个Bean；或者只有某个Bean被创建才会才会创建另外一个Bean。总的来说，就是根据特定判定条件来控制Bean的创建行为，这样我们可以利用这个特性进行一些自动的配置。”

在使用该注解之前我们来看一下@Conditional的源码
```java
@Target({ElementType.TYPE, ElementType.METHOD})
@Retention(RetentionPolicy.RUNTIME)
@Documented
public @interface Conditional {
    Class<? extends Condition>[] value();
}
```

我们关注下面的两点：

* @Target({ElementType.TYPE, ElementType.METHOD})：表示该注解可以加在类上，表示该类下面的所有@Bean都会启用配置；也可以加在方法上，只对该方法有效

* Class<? extends Condition>[] value()：表示要传一个Class集合给该注解，即@Conditional({XXX.class,XXX.class}) ，而且XXX类要继承Condition接口。关于Condition下面会说。


# 示例
我们以自己电脑的操作系统为判定条件，若我们的操作系统为Linux则创建Linux之父的Person的Bean；若操作系统为Windows则创建Windows之父的Person的Bean。

**一、首先我们来创建一个Person类：**

```java
package com.study.spring.annotation.bean;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.bean
 *
 * @author dsy
 */
public class Person {
    private String name;
    private Integer age;

    public Person() {
    }

    public Person(String name, Integer age) {
        this.name = name;
        this.age = age;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Integer getAge() {
        return age;
    }

    public void setAge(Integer age) {
        this.age = age;
    }

    @Override
    public String toString() {
        return "Person{" +
                "name='" + name + '\'' +
                ", age=" + age +
                '}';
    }
}

```
**二、再创建一个配置类MyConfig：**

```java
package com.study.spring.annotation.config;

import com.study.spring.annotation.bean.Person;
import com.study.spring.annotation.condition.LinuxCondition;
import com.study.spring.annotation.condition.WindowsCondition;
import org.springframework.context.annotation.*;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.config
 *
 * @author dsy
 */
@Configuration        //标识该类是一个配置类，相当于之前的一个xml配置文件
public class MyConfig {
 
    /**
     * @Conditional({Condition})  注解：按照一定的条件将bean添加到IOC容器中
     */
    @Conditional({LinuxCondition.class})
    @Bean("linux")
    public Person person01(){
        return new Person("linux之父",55);
    }

    @Bean("windows")
    @Conditional({WindowsCondition.class})
    public Person person02(){
        return new Person("windows之父",48);
    }

}

```

**三、接下来创建两个Condition类：LinuxCondition和WindowsCondition：**

```java
package com.study.spring.annotation.condition;

import org.springframework.context.annotation.Condition;
import org.springframework.context.annotation.ConditionContext;
import org.springframework.core.env.Environment;
import org.springframework.core.type.AnnotatedTypeMetadata;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.condition
 *
 * @author dsy
 */
//判断是否Linux系统 要进行判断必须实现Condition接口
public class LinuxCondition implements Condition {

    /**
     *
     * @param conditionContext  判断条件能使用的上下文环境
     * @param annotatedTypeMetadata 当前标注了@Conditional注解的注释信息
     * @return Boolean
     */
    @Override
    public boolean matches(ConditionContext conditionContext, AnnotatedTypeMetadata annotatedTypeMetadata) {
        Environment environment = conditionContext.getEnvironment();
        String property = environment.getProperty("os.name");
        return property!=null&&property.contains("Linux");
    }
}

```

```java
package com.study.spring.annotation.condition;

import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;
import org.springframework.beans.factory.support.BeanDefinitionRegistry;
import org.springframework.context.annotation.Condition;
import org.springframework.context.annotation.ConditionContext;
import org.springframework.core.env.Environment;
import org.springframework.core.type.AnnotatedTypeMetadata;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.condition
 *
 * @author dsy
 */
//判断是否Windows系统 要进行判断必须实现Condition接口
public class WindowsCondition implements Condition {

    /**
     *
     * @param conditionContext  判断条件能使用的上下文环境
     * @param annotatedTypeMetadata 当前标注了@Conditional注解的注释信息
     * @return Boolean
     */
    @Override
    public boolean matches(ConditionContext conditionContext, AnnotatedTypeMetadata annotatedTypeMetadata) {
        Environment environment = conditionContext.getEnvironment();
        String property = environment.getProperty("os.name");
        return property != null && property.contains("Windows");
    }
}

```

**说明：** 这两个类均实现了Condition接口，里面只有一个matches方法返回值为boolea类型，也就是说@Conditional({LinuxCondition.class})或者@Conditional({WindowsCondition.class})通过判断注解括号里面条件类的matches方法的返回值来判定要不要在IOC容器中创建由@Conditional注解标识的这个Bean；若matches返回值为true则创建该Bean，若返回false则不创建该Bean。

```java
@FunctionalInterface
public interface Condition {
    boolean matches(ConditionContext var1, AnnotatedTypeMetadata var2);
}
```

**四、测试：**

```java
package com.study.spring;

import com.study.spring.annotation.bean.Person;
import com.study.spring.annotation.config.MyConfig;
import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;

import java.util.Map;

@SpringBootTest
class ApplicationTests {
    /**
     * @Conditional 注解来按照条件获取bean实例
     */
    @Test
    void testAnnotationConfig2(){
        //创建IOC容器
        AnnotationConfigApplicationContext applicationContext = new AnnotationConfigApplicationContext(MyConfig.class);
        //getBeanNamesForType方法按照类来获取该类的Bean的id
        String[] names = applicationContext.getBeanNamesForType(Person.class);
        //打印
        for (String name:names){
            System.out.println(name);
        }
        //获取具体的Bean
        Map<String, Person> beans = applicationContext.getBeansOfType(Person.class);
        System.out.println(beans);
    }

}

```
**打印输出：**

```java
windows
{windows=Person{name='windows之父', age=48}}
```

若我们改变运行环境，加上参数：-Dos.name=Linux
![在这里插入图片描述](https://img-blog.csdnimg.cn/20200401134456722.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zOTI5NjI4Mw==,size_16,color_FFFFFF,t_70#pic_center)
再次运行打印输出：

```java
linux
{linux=Person{name='linux之父', age=55}}
```

# 总结
1、@Conditional注解的作用是按照一定的判定条件来控制Bean的创建
2、@Conditional可以加在一个配置类上，表示该类下面的全部的@Bean都会启用配置；也可以加在一个@Bean的方法上面，只对该方法有效
3、判定条件类XXXCondition类要实现Condition接口，并重写matches方法，在该方法里面写自己的判定逻辑

参考资料：《Spring Boot实战》
, firstPicture=https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fwx1.sinaimg.cn%2Fbmiddle%2Fceeb653ely1fkcffnqwdyj208c08cgll.jpg&refer=http%3A%2F%2Fwx1.sinaimg.cn&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1630029852&t=456a692fd1a717b65241d6ef10df492f, flag=原创, description=在学习SpringBoot的时候我们会在各种自动配置类中看到大量使用了@Conditional注解，这篇文章主要简单说下@Conditional注解的使用方法。, views=null, appreciation=true, shareStatement=true, comment=true, publish=true, recommend=true, createTime=null, updateTime=null, type=null, user=null, tags=null), org.apache.catalina.session.StandardSessionFacade@3d023f16, {}, 1]}
2021-07-28 10:07:52.301 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.TypeMapper.selectByPrimaryKey    : ==>  Preparing: SELECT type_id,name FROM type WHERE type_id = ? 
2021-07-28 10:07:52.302 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.TypeMapper.selectByPrimaryKey    : ==> Parameters: 6(Integer)
2021-07-28 10:07:52.303 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.TypeMapper.selectByPrimaryKey    : <==      Total: 1
2021-07-28 10:07:52.304 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 10:07:52.304 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 1(String)
2021-07-28 10:07:52.304 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 10:07:52.305 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.B.updateByPrimaryKeySelective    : ==>  Preparing: UPDATE blog SET type_id = ?,user_id = ?,title = ?,content = ?,first_picture = ?,flag = ?,description = ?,appreciation = ?,share_statement = ?,comment = ?,publish = ?,recommend = ?,update_time = ? WHERE blog_id = ? 
2021-07-28 10:07:52.306 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.B.updateByPrimaryKeySelective    : ==> Parameters: 6(Integer), 1(Integer), 条件注解@Conditional(String), # 简介
在学习SpringBoot的时候我们会在各种自动配置类中看到大量使用了@Conditional注解，这篇文章主要简单说下@Conditional注解的使用方法。

**定义：**
按照《Spring Boot实战》书中所说的：“@Conditional根据满足某一特定条件创建一个特定的Bean。比方说，当某一个jar包在一个类路径下的时候，自动配置一个或多个Bean；或者只有某个Bean被创建才会才会创建另外一个Bean。总的来说，就是根据特定判定条件来控制Bean的创建行为，这样我们可以利用这个特性进行一些自动的配置。”

在使用该注解之前我们来看一下@Conditional的源码
```java
@Target({ElementType.TYPE, ElementType.METHOD})
@Retention(RetentionPolicy.RUNTIME)
@Documented
public @interface Conditional {
    Class<? extends Condition>[] value();
}
```

我们关注下面的两点：

* @Target({ElementType.TYPE, ElementType.METHOD})：表示该注解可以加在类上，表示该类下面的所有@Bean都会启用配置；也可以加在方法上，只对该方法有效

* Class<? extends Condition>[] value()：表示要传一个Class集合给该注解，即@Conditional({XXX.class,XXX.class}) ，而且XXX类要继承Condition接口。关于Condition下面会说。


# 示例
我们以自己电脑的操作系统为判定条件，若我们的操作系统为Linux则创建Linux之父的Person的Bean；若操作系统为Windows则创建Windows之父的Person的Bean。

**一、首先我们来创建一个Person类：**

```java
package com.study.spring.annotation.bean;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.bean
 *
 * @author dsy
 */
public class Person {
    private String name;
    private Integer age;

    public Person() {
    }

    public Person(String name, Integer age) {
        this.name = name;
        this.age = age;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Integer getAge() {
        return age;
    }

    public void setAge(Integer age) {
        this.age = age;
    }

    @Override
    public String toString() {
        return "Person{" +
                "name='" + name + '\'' +
                ", age=" + age +
                '}';
    }
}

```
**二、再创建一个配置类MyConfig：**

```java
package com.study.spring.annotation.config;

import com.study.spring.annotation.bean.Person;
import com.study.spring.annotation.condition.LinuxCondition;
import com.study.spring.annotation.condition.WindowsCondition;
import org.springframework.context.annotation.*;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.config
 *
 * @author dsy
 */
@Configuration        //标识该类是一个配置类，相当于之前的一个xml配置文件
public class MyConfig {
 
    /**
     * @Conditional({Condition})  注解：按照一定的条件将bean添加到IOC容器中
     */
    @Conditional({LinuxCondition.class})
    @Bean("linux")
    public Person person01(){
        return new Person("linux之父",55);
    }

    @Bean("windows")
    @Conditional({WindowsCondition.class})
    public Person person02(){
        return new Person("windows之父",48);
    }

}

```

**三、接下来创建两个Condition类：LinuxCondition和WindowsCondition：**

```java
package com.study.spring.annotation.condition;

import org.springframework.context.annotation.Condition;
import org.springframework.context.annotation.ConditionContext;
import org.springframework.core.env.Environment;
import org.springframework.core.type.AnnotatedTypeMetadata;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.condition
 *
 * @author dsy
 */
//判断是否Linux系统 要进行判断必须实现Condition接口
public class LinuxCondition implements Condition {

    /**
     *
     * @param conditionContext  判断条件能使用的上下文环境
     * @param annotatedTypeMetadata 当前标注了@Conditional注解的注释信息
     * @return Boolean
     */
    @Override
    public boolean matches(ConditionContext conditionContext, AnnotatedTypeMetadata annotatedTypeMetadata) {
        Environment environment = conditionContext.getEnvironment();
        String property = environment.getProperty("os.name");
        return property!=null&&property.contains("Linux");
    }
}

```

```java
package com.study.spring.annotation.condition;

import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;
import org.springframework.beans.factory.support.BeanDefinitionRegistry;
import org.springframework.context.annotation.Condition;
import org.springframework.context.annotation.ConditionContext;
import org.springframework.core.env.Environment;
import org.springframework.core.type.AnnotatedTypeMetadata;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.condition
 *
 * @author dsy
 */
//判断是否Windows系统 要进行判断必须实现Condition接口
public class WindowsCondition implements Condition {

    /**
     *
     * @param conditionContext  判断条件能使用的上下文环境
     * @param annotatedTypeMetadata 当前标注了@Conditional注解的注释信息
     * @return Boolean
     */
    @Override
    public boolean matches(ConditionContext conditionContext, AnnotatedTypeMetadata annotatedTypeMetadata) {
        Environment environment = conditionContext.getEnvironment();
        String property = environment.getProperty("os.name");
        return property != null && property.contains("Windows");
    }
}

```

**说明：** 这两个类均实现了Condition接口，里面只有一个matches方法返回值为boolea类型，也就是说@Conditional({LinuxCondition.class})或者@Conditional({WindowsCondition.class})通过判断注解括号里面条件类的matches方法的返回值来判定要不要在IOC容器中创建由@Conditional注解标识的这个Bean；若matches返回值为true则创建该Bean，若返回false则不创建该Bean。

```java
@FunctionalInterface
public interface Condition {
    boolean matches(ConditionContext var1, AnnotatedTypeMetadata var2);
}
```

**四、测试：**

```java
package com.study.spring;

import com.study.spring.annotation.bean.Person;
import com.study.spring.annotation.config.MyConfig;
import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;

import java.util.Map;

@SpringBootTest
class ApplicationTests {
    /**
     * @Conditional 注解来按照条件获取bean实例
     */
    @Test
    void testAnnotationConfig2(){
        //创建IOC容器
        AnnotationConfigApplicationContext applicationContext = new AnnotationConfigApplicationContext(MyConfig.class);
        //getBeanNamesForType方法按照类来获取该类的Bean的id
        String[] names = applicationContext.getBeanNamesForType(Person.class);
        //打印
        for (String name:names){
            System.out.println(name);
        }
        //获取具体的Bean
        Map<String, Person> beans = applicationContext.getBeansOfType(Person.class);
        System.out.println(beans);
    }

}

```
**打印输出：**

```java
windows
{windows=Person{name='windows之父', age=48}}
```

若我们改变运行环境，加上参数：-Dos.name=Linux
![在这里插入图片描述](https://img-blog.csdnimg.cn/20200401134456722.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zOTI5NjI4Mw==,size_16,color_FFFFFF,t_70#pic_center)
再次运行打印输出：

```java
linux
{linux=Person{name='linux之父', age=55}}
```

# 总结
1、@Conditional注解的作用是按照一定的判定条件来控制Bean的创建
2、@Conditional可以加在一个配置类上，表示该类下面的全部的@Bean都会启用配置；也可以加在一个@Bean的方法上面，只对该方法有效
3、判定条件类XXXCondition类要实现Condition接口，并重写matches方法，在该方法里面写自己的判定逻辑

参考资料：《Spring Boot实战》
(String), https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fwx1.sinaimg.cn%2Fbmiddle%2Fceeb653ely1fkcffnqwdyj208c08cgll.jpg&refer=http%3A%2F%2Fwx1.sinaimg.cn&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1630029852&t=456a692fd1a717b65241d6ef10df492f(String), 原创(String), 在学习SpringBoot的时候我们会在各种自动配置类中看到大量使用了@Conditional注解，这篇文章主要简单说下@Conditional注解的使用方法。(String), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2021-07-28 10:07:52.305(Timestamp), 8(Integer)
2021-07-28 10:07:52.307 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.B.updateByPrimaryKeySelective    : <==    Updates: 1
2021-07-28 10:07:52.308 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.BlogTagMapper.deleteByExample    : ==>  Preparing: DELETE FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 10:07:52.308 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.BlogTagMapper.deleteByExample    : ==> Parameters: 8(Integer)
2021-07-28 10:07:52.309 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.BlogTagMapper.deleteByExample    : <==    Updates: 1
2021-07-28 10:07:52.309 DEBUG 3396 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.BlogTagMapper.insert   : ==>  Preparing: INSERT INTO blog_tag ( blog_tag_id,blog_id,tag_id ) VALUES( ?,?,? ) 
2021-07-28 10:07:52.309 DEBUG 3396 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.BlogTagMapper.insert   : ==> Parameters: null, 8(Integer), 1(Integer)
2021-07-28 10:07:52.310 DEBUG 3396 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.BlogTagMapper.insert   : <==    Updates: 1
2021-07-28 10:07:52.311  INFO 3396 --- [http-nio-8080-exec-10] black.lyg.blog.service.BlogService       : 删除redis中key为blogtags的hash数据类型
2021-07-28 10:07:52.312 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.selectByPrimaryKey    : ==>  Preparing: SELECT blog_id,type_id,user_id,title,content,first_picture,flag,description,views,appreciation,share_statement,comment,publish,recommend,create_time,update_time FROM blog WHERE blog_id = ? 
2021-07-28 10:07:52.312 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.selectByPrimaryKey    : ==> Parameters: 8(Integer)
2021-07-28 10:07:52.313 DEBUG 3396 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.selectByPrimaryKey    : <==      Total: 1
2021-07-28 10:07:52.316  INFO 3396 --- [http-nio-8080-exec-10] black.lyg.blog.service.BlogService       : 更新redis中TheLatestBlog的数据，标题为条件注解@Conditional
2021-07-28 10:07:52.317  INFO 3396 --- [http-nio-8080-exec-10] black.lyg.blog.service.BlogService       : 更新redis中AllBlog的数据，标题为条件注解@Conditional
2021-07-28 10:07:52.319  INFO 3396 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:07:52.319  INFO 3396 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : result : redirect:/admin/blogs 
2021-07-28 10:07:57.004 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==>  Preparing: SELECT count(0) FROM blog 
2021-07-28 10:07:57.004 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==> Parameters: 
2021-07-28 10:07:57.006 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.findBlogAll_COUNT     : <==      Total: 1
2021-07-28 10:07:57.006 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc LIMIT ? 
2021-07-28 10:07:57.007 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 5(Integer)
2021-07-28 10:07:57.008 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:07:57.008 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:07:57.008 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:07:57.009 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:07:57.009 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:07:57.009 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:07:57.009 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:07:57.009 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:07:57.010 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:07:57.010 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:07:57.010 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 10:07:57.011 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:07:57.011 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:07:57.011 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 10:07:57.012 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:07:57.012 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:07:57.012 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 10:07:57.013 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:07:57.013 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:07:57.014 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 10:07:57.014 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:07:57.014 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 5
2021-07-28 10:07:57.016  INFO 3396 --- [http-nio-8080-exec-5] black.lyg.blog.service.TagService        : 从redis中获取数据：[]
2021-07-28 10:07:57.016 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.m.TagMapper.findSeveralTopTags     : ==>  Preparing: select distinct t.tag_id,t.name ,count(*) as number from tag t ,blog_tag bt where t.tag_id = bt.tag_id group by t.tag_id, t.name order by number desc limit ? 
2021-07-28 10:07:57.016 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.m.TagMapper.findSeveralTopTags     : ==> Parameters: 10(Integer)
2021-07-28 10:07:57.017 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.m.TagMapper.findSeveralTopTags     : <==      Total: 7
2021-07-28 10:07:57.018  INFO 3396 --- [http-nio-8080-exec-5] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=21, name=Redis, BlogNumber=5)
2021-07-28 10:07:57.019  INFO 3396 --- [http-nio-8080-exec-5] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=22, name=Java, BlogNumber=4)
2021-07-28 10:07:57.020  INFO 3396 --- [http-nio-8080-exec-5] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=20, name=设计模式, BlogNumber=3)
2021-07-28 10:07:57.021  INFO 3396 --- [http-nio-8080-exec-5] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=1, name=Spring, BlogNumber=2)
2021-07-28 10:07:57.021  INFO 3396 --- [http-nio-8080-exec-5] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=24, name=测试, BlogNumber=2)
2021-07-28 10:07:57.021  INFO 3396 --- [http-nio-8080-exec-5] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=2, name=Mybatis, BlogNumber=1)
2021-07-28 10:07:57.022  INFO 3396 --- [http-nio-8080-exec-5] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=23, name=MySQL, BlogNumber=1)
2021-07-28 10:07:57.022  INFO 3396 --- [http-nio-8080-exec-5] black.lyg.blog.service.TagService        : 从Mysql中查找到由标签显示博客的数据：[TagTops(tagId=21, name=Redis, BlogNumber=5), TagTops(tagId=22, name=Java, BlogNumber=4), TagTops(tagId=20, name=设计模式, BlogNumber=3), TagTops(tagId=1, name=Spring, BlogNumber=2), TagTops(tagId=24, name=测试, BlogNumber=2), TagTops(tagId=2, name=Mybatis, BlogNumber=1), TagTops(tagId=23, name=MySQL, BlogNumber=1)]
2021-07-28 10:07:57.023  INFO 3396 --- [http-nio-8080-exec-5] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:07:57.298  INFO 3396 --- [http-nio-8080-exec-6] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:08:07.514 DEBUG 3396 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.findYearsGroupByYear  : ==>  Preparing: select date_format(b.update_time,'%Y') as year from blog b group by year order by year desc 
2021-07-28 10:08:07.514 DEBUG 3396 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.findYearsGroupByYear  : ==> Parameters: 
2021-07-28 10:08:07.515 DEBUG 3396 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.findYearsGroupByYear  : <==      Total: 2
2021-07-28 10:08:07.516 DEBUG 3396 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectBlogByYear      : ==>  Preparing: select * from blog b where date_format(b.update_time,'%Y') = ? 
2021-07-28 10:08:07.516 DEBUG 3396 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectBlogByYear      : ==> Parameters: 2021(String)
2021-07-28 10:08:07.518 DEBUG 3396 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectBlogByYear      : <==      Total: 6
2021-07-28 10:08:07.518 DEBUG 3396 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectBlogByYear      : ==>  Preparing: select * from blog b where date_format(b.update_time,'%Y') = ? 
2021-07-28 10:08:07.519 DEBUG 3396 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectBlogByYear      : ==> Parameters: 2020(String)
2021-07-28 10:08:07.520 DEBUG 3396 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectBlogByYear      : <==      Total: 4
2021-07-28 10:08:07.522  INFO 3396 --- [http-nio-8080-exec-2] black.lyg.blog.service.BlogService       : 从redis中获取到博客总数量为：10
2021-07-28 10:08:07.777  INFO 3396 --- [http-nio-8080-exec-7] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:08:12.128  INFO 3396 --- [http-nio-8080-exec-8] black.lyg.blog.service.BlogService       : 从redis中获取Blog的数据，标题为条件注解@Conditional
2021-07-28 10:08:12.129 DEBUG 3396 --- [http-nio-8080-exec-8] b.l.b.m.B.updateByPrimaryKeySelective    : ==>  Preparing: UPDATE blog SET type_id = ?,user_id = ?,title = ?,content = ?,first_picture = ?,flag = ?,description = ?,views = ?,appreciation = ?,share_statement = ?,comment = ?,publish = ?,recommend = ?,create_time = ?,update_time = ? WHERE blog_id = ? 
2021-07-28 10:08:12.129 DEBUG 3396 --- [http-nio-8080-exec-8] b.l.b.m.B.updateByPrimaryKeySelective    : ==> Parameters: 6(Integer), 1(Integer), 条件注解@Conditional(String), # 简介
在学习SpringBoot的时候我们会在各种自动配置类中看到大量使用了@Conditional注解，这篇文章主要简单说下@Conditional注解的使用方法。

**定义：**
按照《Spring Boot实战》书中所说的：“@Conditional根据满足某一特定条件创建一个特定的Bean。比方说，当某一个jar包在一个类路径下的时候，自动配置一个或多个Bean；或者只有某个Bean被创建才会才会创建另外一个Bean。总的来说，就是根据特定判定条件来控制Bean的创建行为，这样我们可以利用这个特性进行一些自动的配置。”

在使用该注解之前我们来看一下@Conditional的源码
```java
@Target({ElementType.TYPE, ElementType.METHOD})
@Retention(RetentionPolicy.RUNTIME)
@Documented
public @interface Conditional {
    Class<? extends Condition>[] value();
}
```

我们关注下面的两点：

* @Target({ElementType.TYPE, ElementType.METHOD})：表示该注解可以加在类上，表示该类下面的所有@Bean都会启用配置；也可以加在方法上，只对该方法有效

* Class<? extends Condition>[] value()：表示要传一个Class集合给该注解，即@Conditional({XXX.class,XXX.class}) ，而且XXX类要继承Condition接口。关于Condition下面会说。


# 示例
我们以自己电脑的操作系统为判定条件，若我们的操作系统为Linux则创建Linux之父的Person的Bean；若操作系统为Windows则创建Windows之父的Person的Bean。

**一、首先我们来创建一个Person类：**

```java
package com.study.spring.annotation.bean;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.bean
 *
 * @author dsy
 */
public class Person {
    private String name;
    private Integer age;

    public Person() {
    }

    public Person(String name, Integer age) {
        this.name = name;
        this.age = age;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Integer getAge() {
        return age;
    }

    public void setAge(Integer age) {
        this.age = age;
    }

    @Override
    public String toString() {
        return "Person{" +
                "name='" + name + '\'' +
                ", age=" + age +
                '}';
    }
}

```
**二、再创建一个配置类MyConfig：**

```java
package com.study.spring.annotation.config;

import com.study.spring.annotation.bean.Person;
import com.study.spring.annotation.condition.LinuxCondition;
import com.study.spring.annotation.condition.WindowsCondition;
import org.springframework.context.annotation.*;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.config
 *
 * @author dsy
 */
@Configuration        //标识该类是一个配置类，相当于之前的一个xml配置文件
public class MyConfig {
 
    /**
     * @Conditional({Condition})  注解：按照一定的条件将bean添加到IOC容器中
     */
    @Conditional({LinuxCondition.class})
    @Bean("linux")
    public Person person01(){
        return new Person("linux之父",55);
    }

    @Bean("windows")
    @Conditional({WindowsCondition.class})
    public Person person02(){
        return new Person("windows之父",48);
    }

}

```

**三、接下来创建两个Condition类：LinuxCondition和WindowsCondition：**

```java
package com.study.spring.annotation.condition;

import org.springframework.context.annotation.Condition;
import org.springframework.context.annotation.ConditionContext;
import org.springframework.core.env.Environment;
import org.springframework.core.type.AnnotatedTypeMetadata;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.condition
 *
 * @author dsy
 */
//判断是否Linux系统 要进行判断必须实现Condition接口
public class LinuxCondition implements Condition {

    /**
     *
     * @param conditionContext  判断条件能使用的上下文环境
     * @param annotatedTypeMetadata 当前标注了@Conditional注解的注释信息
     * @return Boolean
     */
    @Override
    public boolean matches(ConditionContext conditionContext, AnnotatedTypeMetadata annotatedTypeMetadata) {
        Environment environment = conditionContext.getEnvironment();
        String property = environment.getProperty("os.name");
        return property!=null&&property.contains("Linux");
    }
}

```

```java
package com.study.spring.annotation.condition;

import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;
import org.springframework.beans.factory.support.BeanDefinitionRegistry;
import org.springframework.context.annotation.Condition;
import org.springframework.context.annotation.ConditionContext;
import org.springframework.core.env.Environment;
import org.springframework.core.type.AnnotatedTypeMetadata;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.condition
 *
 * @author dsy
 */
//判断是否Windows系统 要进行判断必须实现Condition接口
public class WindowsCondition implements Condition {

    /**
     *
     * @param conditionContext  判断条件能使用的上下文环境
     * @param annotatedTypeMetadata 当前标注了@Conditional注解的注释信息
     * @return Boolean
     */
    @Override
    public boolean matches(ConditionContext conditionContext, AnnotatedTypeMetadata annotatedTypeMetadata) {
        Environment environment = conditionContext.getEnvironment();
        String property = environment.getProperty("os.name");
        return property != null && property.contains("Windows");
    }
}

```

**说明：** 这两个类均实现了Condition接口，里面只有一个matches方法返回值为boolea类型，也就是说@Conditional({LinuxCondition.class})或者@Conditional({WindowsCondition.class})通过判断注解括号里面条件类的matches方法的返回值来判定要不要在IOC容器中创建由@Conditional注解标识的这个Bean；若matches返回值为true则创建该Bean，若返回false则不创建该Bean。

```java
@FunctionalInterface
public interface Condition {
    boolean matches(ConditionContext var1, AnnotatedTypeMetadata var2);
}
```

**四、测试：**

```java
package com.study.spring;

import com.study.spring.annotation.bean.Person;
import com.study.spring.annotation.config.MyConfig;
import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;

import java.util.Map;

@SpringBootTest
class ApplicationTests {
    /**
     * @Conditional 注解来按照条件获取bean实例
     */
    @Test
    void testAnnotationConfig2(){
        //创建IOC容器
        AnnotationConfigApplicationContext applicationContext = new AnnotationConfigApplicationContext(MyConfig.class);
        //getBeanNamesForType方法按照类来获取该类的Bean的id
        String[] names = applicationContext.getBeanNamesForType(Person.class);
        //打印
        for (String name:names){
            System.out.println(name);
        }
        //获取具体的Bean
        Map<String, Person> beans = applicationContext.getBeansOfType(Person.class);
        System.out.println(beans);
    }

}

```
**打印输出：**

```java
windows
{windows=Person{name='windows之父', age=48}}
```

若我们改变运行环境，加上参数：-Dos.name=Linux
![在这里插入图片描述](https://img-blog.csdnimg.cn/20200401134456722.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zOTI5NjI4Mw==,size_16,color_FFFFFF,t_70#pic_center)
再次运行打印输出：

```java
linux
{linux=Person{name='linux之父', age=55}}
```

# 总结
1、@Conditional注解的作用是按照一定的判定条件来控制Bean的创建
2、@Conditional可以加在一个配置类上，表示该类下面的全部的@Bean都会启用配置；也可以加在一个@Bean的方法上面，只对该方法有效
3、判定条件类XXXCondition类要实现Condition接口，并重写matches方法，在该方法里面写自己的判定逻辑

参考资料：《Spring Boot实战》
(String), https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fwx1.sinaimg.cn%2Fbmiddle%2Fceeb653ely1fkcffnqwdyj208c08cgll.jpg&refer=http%3A%2F%2Fwx1.sinaimg.cn&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1630029852&t=456a692fd1a717b65241d6ef10df492f(String), 原创(String), 在学习SpringBoot的时候我们会在各种自动配置类中看到大量使用了@Conditional注解，这篇文章主要简单说下@Conditional注解的使用方法。(String), 2592(Integer), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2020-04-08 17:12:44.0(Timestamp), 2021-07-28 10:07:52.305(Timestamp), 8(Integer)
2021-07-28 10:08:12.133 DEBUG 3396 --- [http-nio-8080-exec-8] b.l.b.m.B.updateByPrimaryKeySelective    : <==    Updates: 1
2021-07-28 10:08:12.135  INFO 3396 --- [http-nio-8080-exec-8] black.lyg.blog.service.BlogService       : 更新redis中AllBlog的博客标题为：条件注解@Conditional的views为：2592
2021-07-28 10:08:12.165 DEBUG 3396 --- [http-nio-8080-exec-8] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 10:08:12.165 DEBUG 3396 --- [http-nio-8080-exec-8] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 8(Integer)
2021-07-28 10:08:12.166 DEBUG 3396 --- [http-nio-8080-exec-8] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 10:08:12.166 DEBUG 3396 --- [http-nio-8080-exec-8] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 10:08:12.166 DEBUG 3396 --- [http-nio-8080-exec-8] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 1(Integer)
2021-07-28 10:08:12.167 DEBUG 3396 --- [http-nio-8080-exec-8] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 10:08:12.473  INFO 3396 --- [http-nio-8080-exec-4] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:08:12.591 DEBUG 3396 --- [http-nio-8080-exec-9] b.l.b.m.CommentMapper.selectByExample    : ==>  Preparing: SELECT comment_id,blog_id,nick_name,email,content,avatar,create_time,parent_comment_id FROM comment WHERE ( ( blog_id = ? ) ) order by comment_id desc 
2021-07-28 10:08:12.591 DEBUG 3396 --- [http-nio-8080-exec-9] b.l.b.m.CommentMapper.selectByExample    : ==> Parameters: 8(Integer)
2021-07-28 10:08:12.594 DEBUG 3396 --- [http-nio-8080-exec-9] b.l.b.m.CommentMapper.selectByExample    : <==      Total: 0
2021-07-28 10:12:56.920 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==>  Preparing: SELECT count(0) FROM blog 
2021-07-28 10:12:56.920 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==> Parameters: 
2021-07-28 10:12:56.923 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.findBlogAll_COUNT     : <==      Total: 1
2021-07-28 10:12:56.923 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc LIMIT ? 
2021-07-28 10:12:56.923 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 5(Integer)
2021-07-28 10:12:56.924 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:12:56.924 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:12:56.926 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:12:56.926 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:12:56.926 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:12:56.927 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:12:56.927 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:12:56.927 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:12:56.928 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:12:56.928 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:12:56.928 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 10:12:56.930 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:12:56.930 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:12:56.930 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 10:12:56.930 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:12:56.931 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:12:56.931 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 10:12:56.931 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:12:56.931 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:12:56.931 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 10:12:56.932 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:12:56.932 DEBUG 3396 --- [http-nio-8080-exec-5] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 5
2021-07-28 10:12:56.934  INFO 3396 --- [http-nio-8080-exec-5] black.lyg.blog.service.TagService        : 从redis中获取数据：[TagTops(tagId=20, name=设计模式, BlogNumber=3), TagTops(tagId=21, name=Redis, BlogNumber=5), TagTops(tagId=22, name=Java, BlogNumber=4), TagTops(tagId=2, name=Mybatis, BlogNumber=1), TagTops(tagId=1, name=Spring, BlogNumber=2), TagTops(tagId=24, name=测试, BlogNumber=2), TagTops(tagId=23, name=MySQL, BlogNumber=1)]
2021-07-28 10:12:56.934  INFO 3396 --- [http-nio-8080-exec-5] black.lyg.blog.service.TagService        : 从redis中查找到由标签显示博客的数据：[TagTops(tagId=21, name=Redis, BlogNumber=5), TagTops(tagId=22, name=Java, BlogNumber=4), TagTops(tagId=20, name=设计模式, BlogNumber=3), TagTops(tagId=1, name=Spring, BlogNumber=2), TagTops(tagId=24, name=测试, BlogNumber=2), TagTops(tagId=2, name=Mybatis, BlogNumber=1), TagTops(tagId=23, name=MySQL, BlogNumber=1)]
2021-07-28 10:12:56.935  INFO 3396 --- [http-nio-8080-exec-5] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:12:57.231  INFO 3396 --- [http-nio-8080-exec-6] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:13:02.224  INFO 3396 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.loginPage', args=[]}
2021-07-28 10:13:02.224  INFO 3396 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:13:02.224  INFO 3396 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : result : admin/login 
2021-07-28 10:13:08.361  INFO 3396 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.login', args=[admin, lyg0918, org.apache.catalina.session.StandardSessionFacade@3d023f16, {}]}
2021-07-28 10:13:08.362 DEBUG 3396 --- [http-nio-8080-exec-7] .l.b.m.U.selectUserNameByNameAndPassWord : ==>  Preparing: select * from user where username = ? and password = ? 
2021-07-28 10:13:08.362 DEBUG 3396 --- [http-nio-8080-exec-7] .l.b.m.U.selectUserNameByNameAndPassWord : ==> Parameters: admin(String), 89446CF944BBA2485A8562075A0E0BB7(String)
2021-07-28 10:13:08.363 DEBUG 3396 --- [http-nio-8080-exec-7] .l.b.m.U.selectUserNameByNameAndPassWord : <==      Total: 1
2021-07-28 10:13:08.363  INFO 3396 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:13:08.363  INFO 3396 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : result : admin/index 
2021-07-28 10:13:08.616  INFO 3396 --- [http-nio-8080-exec-8] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:13:10.080  INFO 3396 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 10:13:10.080 DEBUG 3396 --- [http-nio-8080-exec-4] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 10:13:10.081 DEBUG 3396 --- [http-nio-8080-exec-4] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 10:13:10.082 DEBUG 3396 --- [http-nio-8080-exec-4] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 10:13:10.082 DEBUG 3396 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 10:13:10.082 DEBUG 3396 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 10:13:10.083 DEBUG 3396 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 10:13:10.083 DEBUG 3396 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 10:13:10.083 DEBUG 3396 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 10:13:10.085 DEBUG 3396 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:13:10.085 DEBUG 3396 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:13:10.086 DEBUG 3396 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:13:10.086 DEBUG 3396 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:13:10.086 DEBUG 3396 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:13:10.087 DEBUG 3396 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:13:10.087 DEBUG 3396 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:13:10.087 DEBUG 3396 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:13:10.087 DEBUG 3396 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:13:10.088 DEBUG 3396 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:13:10.088 DEBUG 3396 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 10:13:10.088 DEBUG 3396 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:13:10.088 DEBUG 3396 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 8
2021-07-28 10:13:10.089 DEBUG 3396 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 10:13:10.089 DEBUG 3396 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 10:13:10.089 DEBUG 3396 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 10:13:10.089  INFO 3396 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:13:10.089  INFO 3396 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 10:13:10.339  INFO 3396 --- [http-nio-8080-exec-9] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:13:27.020  INFO 3396 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 10:13:27.021 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 10:13:27.021 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 10:13:27.022 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 10:13:27.022 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 10:13:27.023 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 10:13:27.024 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 10:13:27.024 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 10:13:27.024 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 10:13:27.026 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:13:27.026 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:13:27.027 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:13:27.027 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:13:27.027 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:13:27.028 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:13:27.030 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:13:27.030 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:13:27.030 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:13:27.031 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:13:27.031 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 10:13:27.032 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:13:27.032 DEBUG 3396 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 8
2021-07-28 10:13:27.032 DEBUG 3396 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 10:13:27.032 DEBUG 3396 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 10:13:27.033 DEBUG 3396 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 10:13:27.033  INFO 3396 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:13:27.033  INFO 3396 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 10:13:27.286  INFO 3396 --- [http-nio-8080-exec-5] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:14:41.815  INFO 2172 --- [restartedMain] black.lyg.blog.BlogApplication           : Starting BlogApplication on Administraror with PID 2172 (D:\Desktop\blog\blog-master\target\classes started by Administrator in D:\Desktop\blog\blog-master)
2021-07-28 10:14:41.815 DEBUG 2172 --- [restartedMain] black.lyg.blog.BlogApplication           : Running with Spring Boot v2.2.6.RELEASE, Spring v5.2.5.RELEASE
2021-07-28 10:14:41.815  INFO 2172 --- [restartedMain] black.lyg.blog.BlogApplication           : The following profiles are active: dev
2021-07-28 10:14:41.847  INFO 2172 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-07-28 10:14:41.847  INFO 2172 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-07-28 10:14:42.419  INFO 2172 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-28 10:14:42.419  INFO 2172 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-28 10:14:42.453  INFO 2172 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 19ms. Found 0 Redis repository interfaces.
2021-07-28 10:14:42.563  WARN 2172 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[black.lyg.blog]' package. Please check your configuration.
2021-07-28 10:14:43.096  INFO 2172 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-07-28 10:14:43.096  INFO 2172 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-28 10:14:43.096  INFO 2172 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-28 10:14:43.096  INFO 2172 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : An older version [1.2.14] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.23]
2021-07-28 10:14:43.096  INFO 2172 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.14] using APR version [1.6.2].
2021-07-28 10:14:43.096  INFO 2172 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-07-28 10:14:43.096  INFO 2172 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-07-28 10:14:44.128  INFO 2172 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.0.2l  25 May 2017]
2021-07-28 10:14:44.239  INFO 2172 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-28 10:14:44.239  INFO 2172 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2392 ms
2021-07-28 10:14:44.270  INFO 2172 --- [restartedMain] o.s.boot.web.servlet.RegistrationBean    : Filter webStatFilter was not registered (possibly already registered?)
2021-07-28 10:14:45.276  INFO 2172 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-28 10:14:45.354  INFO 2172 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-07-28 10:14:45.808  INFO 2172 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-07-28 10:14:45.852  INFO 2172 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-07-28 10:14:45.852  INFO 2172 --- [restartedMain] black.lyg.blog.BlogApplication           : Started BlogApplication in 4.368 seconds (JVM running for 6.837)
2021-07-28 10:14:45.883  INFO 2172 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-28 10:14:46.843 DEBUG 2172 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc 
2021-07-28 10:14:46.859 DEBUG 2172 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 
2021-07-28 10:14:46.890 DEBUG 2172 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:14:46.890 DEBUG 2172 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:14:46.890 DEBUG 2172 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:14:46.890 DEBUG 2172 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:14:46.890 DEBUG 2172 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:14:46.890 DEBUG 2172 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:14:46.890 DEBUG 2172 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:14:46.890 DEBUG 2172 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:14:46.906 DEBUG 2172 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:14:46.906 DEBUG 2172 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:14:46.906 DEBUG 2172 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 10:14:46.906 DEBUG 2172 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:14:46.906 DEBUG 2172 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:14:46.906 DEBUG 2172 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 10:14:46.906 DEBUG 2172 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:14:46.906 DEBUG 2172 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:14:46.906 DEBUG 2172 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 10:14:46.906 DEBUG 2172 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:14:46.906 DEBUG 2172 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:14:46.906 DEBUG 2172 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 10:14:46.906 DEBUG 2172 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:14:46.906 DEBUG 2172 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 10
2021-07-28 10:14:47.000  INFO 2172 --- [restartedMain] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2021-07-28 10:14:47.000  INFO 2172 --- [restartedMain] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2021-07-28 10:14:48.700  INFO 2172 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：条件注解@Conditional
2021-07-28 10:14:48.700  INFO 2172 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：随笔
2021-07-28 10:14:48.700  INFO 2172 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java常见关键字final、static、super、abstract、this
2021-07-28 10:14:48.700  INFO 2172 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：挖掘机技术哪家强
2021-07-28 10:14:48.700  INFO 2172 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：山东菏泽曹县流弊六六六，卧底宝贝儿
2021-07-28 10:14:48.700  INFO 2172 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：欢迎使用 Markdown在线编辑器 MdEditor
2021-07-28 10:14:48.700  INFO 2172 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java中 equals() 和 hashCode()的关系
2021-07-28 10:14:48.700  INFO 2172 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（二）：Hash
2021-07-28 10:14:48.700  INFO 2172 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（一）：String
2021-07-28 10:14:48.700  INFO 2172 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java合并两个int数组
2021-07-28 10:14:48.700  INFO 2172 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 初始化redis中blogCount的数量为：10
2021-07-28 10:14:56.709  INFO 2172 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-28 10:14:56.709  INFO 2172 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-28 10:14:56.717  INFO 2172 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 8 ms
2021-07-28 10:14:56.740  INFO 2172 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/logout', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.logout', args=[org.apache.catalina.session.StandardSessionFacade@6528b8b4]}
2021-07-28 10:14:56.743  INFO 2172 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:14:56.743  INFO 2172 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : result : redirect:admin 
2021-07-28 10:14:56.774  INFO 2172 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.loginPage', args=[]}
2021-07-28 10:14:56.774  INFO 2172 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:14:56.774  INFO 2172 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : admin/login 
2021-07-28 10:14:57.151 ERROR 2172 --- [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: Cannot call sendError() after the response has been committed] with root cause

java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:472) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at com.alibaba.druid.support.http.WebStatFilter$StatHttpServletResponseWrapper.sendError(WebStatFilter.java:343) ~[druid-1.1.16.jar:1.1.16]
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:488) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:53) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124) ~[druid-1.1.16.jar:1.1.16]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_221]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_221]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_221]

2021-07-28 10:14:57.160 ERROR 2172 --- [http-nio-8080-exec-1] s.e.ErrorMvcAutoConfiguration$StaticView : Cannot render error page for request [/admin/admin] and exception [Cannot call sendError() after the response has been committed] as the response has already been committed. As a result, the response may have the wrong status code.
2021-07-28 10:15:00.818 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==>  Preparing: SELECT count(0) FROM blog 
2021-07-28 10:15:00.819 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==> Parameters: 
2021-07-28 10:15:00.821 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.findBlogAll_COUNT     : <==      Total: 1
2021-07-28 10:15:00.821 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc LIMIT ? 
2021-07-28 10:15:00.822 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 5(Integer)
2021-07-28 10:15:00.824 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:15:00.825 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:15:00.825 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:15:00.826 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:15:00.826 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:15:00.827 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:15:00.827 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:15:00.827 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:15:00.828 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:15:00.828 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:15:00.829 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 10:15:00.830 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:15:00.830 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:15:00.830 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 10:15:00.832 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:15:00.832 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:15:00.833 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 10:15:00.835 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:15:00.835 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:15:00.835 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 10:15:00.836 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:15:00.837 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 5
2021-07-28 10:15:00.865  INFO 2172 --- [http-nio-8080-exec-3] black.lyg.blog.service.TagService        : 从redis中获取数据：[TagTops(tagId=20, name=设计模式, BlogNumber=3), TagTops(tagId=21, name=Redis, BlogNumber=5), TagTops(tagId=22, name=Java, BlogNumber=4), TagTops(tagId=2, name=Mybatis, BlogNumber=1), TagTops(tagId=1, name=Spring, BlogNumber=2), TagTops(tagId=24, name=测试, BlogNumber=2), TagTops(tagId=23, name=MySQL, BlogNumber=1)]
2021-07-28 10:15:00.865  INFO 2172 --- [http-nio-8080-exec-3] black.lyg.blog.service.TagService        : 从redis中查找到由标签显示博客的数据：[TagTops(tagId=21, name=Redis, BlogNumber=5), TagTops(tagId=22, name=Java, BlogNumber=4), TagTops(tagId=20, name=设计模式, BlogNumber=3), TagTops(tagId=1, name=Spring, BlogNumber=2), TagTops(tagId=24, name=测试, BlogNumber=2), TagTops(tagId=2, name=Mybatis, BlogNumber=1), TagTops(tagId=23, name=MySQL, BlogNumber=1)]
2021-07-28 10:15:00.879  INFO 2172 --- [http-nio-8080-exec-3] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:15:01.205  INFO 2172 --- [http-nio-8080-exec-10] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:15:10.383  INFO 2172 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.login', args=[admin, lyg0918, org.apache.catalina.session.StandardSessionFacade@6528b8b4, {}]}
2021-07-28 10:15:10.384 DEBUG 2172 --- [http-nio-8080-exec-5] .l.b.m.U.selectUserNameByNameAndPassWord : ==>  Preparing: select * from user where username = ? and password = ? 
2021-07-28 10:15:10.386 DEBUG 2172 --- [http-nio-8080-exec-5] .l.b.m.U.selectUserNameByNameAndPassWord : ==> Parameters: admin(String), 89446CF944BBA2485A8562075A0E0BB7(String)
2021-07-28 10:15:10.387 DEBUG 2172 --- [http-nio-8080-exec-5] .l.b.m.U.selectUserNameByNameAndPassWord : <==      Total: 1
2021-07-28 10:15:10.387  INFO 2172 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:15:10.387  INFO 2172 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : result : admin/index 
2021-07-28 10:15:10.671  INFO 2172 --- [http-nio-8080-exec-7] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:15:12.554  INFO 2172 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/personal/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.PersonalController.blogs', args=[{}, admin, 1]}
2021-07-28 10:15:12.559 DEBUG 2172 --- [http-nio-8080-exec-8] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 10:15:12.559 DEBUG 2172 --- [http-nio-8080-exec-8] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 10:15:12.560 DEBUG 2172 --- [http-nio-8080-exec-8] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 10:15:12.561 DEBUG 2172 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 10:15:12.561 DEBUG 2172 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 10:15:12.562 DEBUG 2172 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 10:15:12.563  INFO 2172 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:15:12.563  INFO 2172 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : result : admin/personal 
2021-07-28 10:15:22.926  INFO 2172 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/personal/update', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.PersonalController.userInfoUadate', args=[org.apache.catalina.session.StandardSessionFacade@6528b8b4, 玩泥, lyg0918@qq.com, ]}
2021-07-28 10:15:22.926 DEBUG 2172 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? 
2021-07-28 10:15:22.926 DEBUG 2172 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String)
2021-07-28 10:15:22.928 DEBUG 2172 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 10:15:22.940 DEBUG 2172 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.updateByPrimaryKey    : ==>  Preparing: UPDATE user SET nick_name = ?,username = ?,password = ?,email = ?,avatar = ?,type = ?,create_time = ?,update_time = ? WHERE user_id = ? 
2021-07-28 10:15:22.942 DEBUG 2172 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.updateByPrimaryKey    : ==> Parameters: 玩泥(String), admin(String), 89446CF944BBA2485A8562075A0E0BB7(String), lyg0918@qq.com(String), https://cdn.glitch.com/bcca76bf-b6da-4c18-9b77-b7d3e3601f26%2Fuser.png?v=1627092421035(String), null, 2021-07-24 19:53:23.0(Timestamp), 2021-07-28 10:15:22.928(Timestamp), 1(Integer)
2021-07-28 10:15:22.946 DEBUG 2172 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.updateByPrimaryKey    : <==    Updates: 1
2021-07-28 10:15:22.947  INFO 2172 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:15:22.947  INFO 2172 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : result : redirect:/admin/personal/admin 
2021-07-28 10:15:22.953  INFO 2172 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/personal/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.PersonalController.blogs', args=[{}, admin, 1]}
2021-07-28 10:15:22.953 DEBUG 2172 --- [http-nio-8080-exec-2] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 10:15:22.954 DEBUG 2172 --- [http-nio-8080-exec-2] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 10:15:22.954 DEBUG 2172 --- [http-nio-8080-exec-2] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 10:15:22.955 DEBUG 2172 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 10:15:22.955 DEBUG 2172 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 10:15:22.956 DEBUG 2172 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 10:15:22.956  INFO 2172 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:15:22.956  INFO 2172 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : result : admin/personal 
2021-07-28 10:15:50.854  INFO 2172 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 10:15:50.857 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 10:15:50.857 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 10:15:50.858 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 10:15:50.859 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 10:15:50.859 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 10:15:50.860 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 10:15:50.861 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 10:15:50.861 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 10:15:50.863 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:15:50.863 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:15:50.864 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:15:50.864 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:15:50.864 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:15:50.865 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:15:50.866 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:15:50.866 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:15:50.866 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:15:50.867 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:15:50.867 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 10:15:50.868 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:15:50.869 DEBUG 2172 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 8
2021-07-28 10:15:50.870 DEBUG 2172 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 10:15:50.870 DEBUG 2172 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 10:15:50.870 DEBUG 2172 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 10:15:50.870  INFO 2172 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:15:50.870  INFO 2172 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 10:15:51.144  INFO 2172 --- [http-nio-8080-exec-10] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:16:09.026  INFO 2172 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/8/edit', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.editPage', args=[{}, 8]}
2021-07-28 10:16:09.028  INFO 2172 --- [http-nio-8080-exec-5] black.lyg.blog.service.BlogService       : 从redis中获取Blog的数据，标题为条件注解@Conditional
2021-07-28 10:16:09.053 DEBUG 2172 --- [http-nio-8080-exec-5] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 10:16:09.053 DEBUG 2172 --- [http-nio-8080-exec-5] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 8(Integer)
2021-07-28 10:16:09.055 DEBUG 2172 --- [http-nio-8080-exec-5] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 10:16:09.055 DEBUG 2172 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 10:16:09.055 DEBUG 2172 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 10:16:09.056 DEBUG 2172 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 10:16:09.057 DEBUG 2172 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TagMapper.selectAll    : ==>  Preparing: SELECT tag_id,name FROM tag 
2021-07-28 10:16:09.057 DEBUG 2172 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TagMapper.selectAll    : ==> Parameters: 
2021-07-28 10:16:09.059 DEBUG 2172 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TagMapper.selectAll    : <==      Total: 7
2021-07-28 10:16:09.059  INFO 2172 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:16:09.059  INFO 2172 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : result : admin/blogs-input 
2021-07-28 10:16:09.335  INFO 2172 --- [http-nio-8080-exec-7] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:20:49.268  INFO 10696 --- [restartedMain] black.lyg.blog.BlogApplication           : Starting BlogApplication on Administraror with PID 10696 (D:\Desktop\blog\blog-master\target\classes started by Administrator in D:\Desktop\blog\blog-master)
2021-07-28 10:20:49.270 DEBUG 10696 --- [restartedMain] black.lyg.blog.BlogApplication           : Running with Spring Boot v2.2.6.RELEASE, Spring v5.2.5.RELEASE
2021-07-28 10:20:49.271  INFO 10696 --- [restartedMain] black.lyg.blog.BlogApplication           : The following profiles are active: dev
2021-07-28 10:20:49.321  INFO 10696 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-07-28 10:20:49.322  INFO 10696 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-07-28 10:20:49.831  INFO 10696 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-28 10:20:49.831  INFO 10696 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-28 10:20:49.862  INFO 10696 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16ms. Found 0 Redis repository interfaces.
2021-07-28 10:20:49.981  WARN 10696 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[black.lyg.blog]' package. Please check your configuration.
2021-07-28 10:20:50.487  INFO 10696 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-07-28 10:20:50.493  INFO 10696 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-28 10:20:50.494  INFO 10696 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-28 10:20:50.495  INFO 10696 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : An older version [1.2.14] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.23]
2021-07-28 10:20:50.496  INFO 10696 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.14] using APR version [1.6.2].
2021-07-28 10:20:50.496  INFO 10696 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-07-28 10:20:50.496  INFO 10696 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-07-28 10:20:51.522  INFO 10696 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.0.2l  25 May 2017]
2021-07-28 10:20:51.616  INFO 10696 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-28 10:20:51.616  INFO 10696 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2294 ms
2021-07-28 10:20:51.648  INFO 10696 --- [restartedMain] o.s.boot.web.servlet.RegistrationBean    : Filter webStatFilter was not registered (possibly already registered?)
2021-07-28 10:20:52.590  INFO 10696 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-28 10:20:52.652  INFO 10696 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-07-28 10:20:53.099  INFO 10696 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-07-28 10:20:53.130  INFO 10696 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-07-28 10:20:53.130  INFO 10696 --- [restartedMain] black.lyg.blog.BlogApplication           : Started BlogApplication in 4.206 seconds (JVM running for 5.547)
2021-07-28 10:20:53.161  INFO 10696 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-28 10:20:54.119 DEBUG 10696 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc 
2021-07-28 10:20:54.134 DEBUG 10696 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 
2021-07-28 10:20:54.150 DEBUG 10696 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:20:54.150 DEBUG 10696 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:20:54.150 DEBUG 10696 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:20:54.150 DEBUG 10696 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:20:54.150 DEBUG 10696 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:20:54.150 DEBUG 10696 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:20:54.150 DEBUG 10696 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:20:54.150 DEBUG 10696 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:20:54.150 DEBUG 10696 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:20:54.166 DEBUG 10696 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:20:54.166 DEBUG 10696 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 10:20:54.166 DEBUG 10696 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:20:54.166 DEBUG 10696 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:20:54.166 DEBUG 10696 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 10:20:54.166 DEBUG 10696 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:20:54.166 DEBUG 10696 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:20:54.166 DEBUG 10696 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 10:20:54.166 DEBUG 10696 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:20:54.166 DEBUG 10696 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:20:54.166 DEBUG 10696 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 10:20:54.166 DEBUG 10696 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:20:54.166 DEBUG 10696 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 10
2021-07-28 10:20:54.259  INFO 10696 --- [restartedMain] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2021-07-28 10:20:54.259  INFO 10696 --- [restartedMain] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2021-07-28 10:20:55.891  INFO 10696 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：条件注解@Conditional
2021-07-28 10:20:55.891  INFO 10696 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：随笔
2021-07-28 10:20:55.891  INFO 10696 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java常见关键字final、static、super、abstract、this
2021-07-28 10:20:55.891  INFO 10696 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：挖掘机技术哪家强
2021-07-28 10:20:55.891  INFO 10696 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：山东菏泽曹县流弊六六六，卧底宝贝儿
2021-07-28 10:20:55.906  INFO 10696 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：欢迎使用 Markdown在线编辑器 MdEditor
2021-07-28 10:20:55.906  INFO 10696 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java中 equals() 和 hashCode()的关系
2021-07-28 10:20:55.906  INFO 10696 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（二）：Hash
2021-07-28 10:20:55.906  INFO 10696 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（一）：String
2021-07-28 10:20:55.906  INFO 10696 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java合并两个int数组
2021-07-28 10:20:55.906  INFO 10696 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 初始化redis中blogCount的数量为：10
2021-07-28 10:21:07.382  INFO 10696 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-28 10:21:07.383  INFO 10696 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-28 10:21:07.391  INFO 10696 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 8 ms
2021-07-28 10:21:07.415  INFO 10696 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.loginPage', args=[]}
2021-07-28 10:21:07.419  INFO 10696 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:21:07.419  INFO 10696 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : admin/login 
2021-07-28 10:21:07.805  INFO 10696 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/types', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.TypeController.findAllTypes', args=[{}, 1]}
2021-07-28 10:21:07.851 DEBUG 10696 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectAll_COUNT  : ==>  Preparing: SELECT count(0) FROM type 
2021-07-28 10:21:07.852 DEBUG 10696 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectAll_COUNT  : ==> Parameters: 
2021-07-28 10:21:07.854 DEBUG 10696 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectAll_COUNT  : <==      Total: 1
2021-07-28 10:21:07.855 DEBUG 10696 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type LIMIT ? 
2021-07-28 10:21:07.856 DEBUG 10696 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 10(Integer)
2021-07-28 10:21:07.857 DEBUG 10696 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 10:21:07.859  INFO 10696 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:21:07.859  INFO 10696 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : admin/types 
2021-07-28 10:21:07.878 ERROR 10696 --- [http-nio-8080-exec-1] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-1] Exception processing template "admin/types": An error happened during template parsing (template: "class path resource [templates/admin/types.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/admin/types.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098) [thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072) [thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362) [thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189) [thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) [tomcat-embed-websocket-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124) [druid-1.1.16.jar:1.1.16]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_221]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_221]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_221]
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "session.user.username" (template: "admin/_fragments" - line 22, col 19)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	... 51 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "session.user.username" (template: "admin/_fragments" - line 22, col 19)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290) ~[thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.LinkExpression.resolveParameters(LinkExpression.java:337) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:283) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.Model.process(Model.java:282) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1587) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	... 53 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'username' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263) ~[thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	... 80 common frames omitted

2021-07-28 10:21:07.882 ERROR 10696 --- [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/admin/types.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'username' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263) ~[thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.LinkExpression.resolveParameters(LinkExpression.java:337) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:283) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.Model.process(Model.java:282) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1587) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362) ~[thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189) ~[thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124) ~[druid-1.1.16.jar:1.1.16]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_221]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_221]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_221]

2021-07-28 10:21:07.889 ERROR 10696 --- [http-nio-8080-exec-1] s.e.ErrorMvcAutoConfiguration$StaticView : Cannot render error page for request [/admin/types] and exception [An error happened during template parsing (template: "class path resource [templates/admin/types.html]")] as the response has already been committed. As a result, the response may have the wrong status code.
2021-07-28 10:21:14.120  INFO 10696 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.login', args=[admin, lyg0918, org.apache.catalina.session.StandardSessionFacade@261076cc, {}]}
2021-07-28 10:21:14.121 DEBUG 10696 --- [http-nio-8080-exec-5] .l.b.m.U.selectUserNameByNameAndPassWord : ==>  Preparing: select * from user where username = ? and password = ? 
2021-07-28 10:21:14.121 DEBUG 10696 --- [http-nio-8080-exec-5] .l.b.m.U.selectUserNameByNameAndPassWord : ==> Parameters: admin(String), 89446CF944BBA2485A8562075A0E0BB7(String)
2021-07-28 10:21:14.122 DEBUG 10696 --- [http-nio-8080-exec-5] .l.b.m.U.selectUserNameByNameAndPassWord : <==      Total: 1
2021-07-28 10:21:14.123  INFO 10696 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:21:14.123  INFO 10696 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : result : admin/index 
2021-07-28 10:21:14.446  INFO 10696 --- [http-nio-8080-exec-8] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:21:17.790  INFO 10696 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 10:21:17.795 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 10:21:17.795 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 10:21:17.796 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 10:21:17.796 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 10:21:17.796 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 10:21:17.798 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 10:21:17.799 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 10:21:17.799 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 10:21:17.802 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:21:17.802 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:21:17.803 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:21:17.804 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:21:17.804 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:21:17.806 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:21:17.807 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:21:17.807 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:21:17.809 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:21:17.810 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:21:17.810 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 10:21:17.812 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:21:17.812 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 8
2021-07-28 10:21:17.812 DEBUG 10696 --- [http-nio-8080-exec-2] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 10:21:17.812 DEBUG 10696 --- [http-nio-8080-exec-2] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 10:21:17.814 DEBUG 10696 --- [http-nio-8080-exec-2] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 10:21:17.814  INFO 10696 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:21:17.814  INFO 10696 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 10:21:18.073  INFO 10696 --- [http-nio-8080-exec-6] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:21:21.373  INFO 10696 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/8/edit', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.editPage', args=[{}, 8]}
2021-07-28 10:21:21.375  INFO 10696 --- [http-nio-8080-exec-7] black.lyg.blog.service.BlogService       : 从redis中获取Blog的数据，标题为条件注解@Conditional
2021-07-28 10:21:21.397 DEBUG 10696 --- [http-nio-8080-exec-7] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 10:21:21.397 DEBUG 10696 --- [http-nio-8080-exec-7] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 8(Integer)
2021-07-28 10:21:21.399 DEBUG 10696 --- [http-nio-8080-exec-7] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 10:21:21.400 DEBUG 10696 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 10:21:21.400 DEBUG 10696 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 10:21:21.402 DEBUG 10696 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 10:21:21.402 DEBUG 10696 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TagMapper.selectAll    : ==>  Preparing: SELECT tag_id,name FROM tag 
2021-07-28 10:21:21.403 DEBUG 10696 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TagMapper.selectAll    : ==> Parameters: 
2021-07-28 10:21:21.404 DEBUG 10696 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TagMapper.selectAll    : <==      Total: 7
2021-07-28 10:21:21.404  INFO 10696 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:21:21.404  INFO 10696 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : result : admin/blogs-input 
2021-07-28 10:21:21.656  INFO 10696 --- [http-nio-8080-exec-3] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:21:48.937  INFO 10696 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/add', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogAdd', args=[Blog(blogId=8, typeId=6, userId=null, title=条件注解@Conditional, content=# 简介
在学习SpringBoot的时候我们会在各种自动配置类中看到大量使用了@Conditional注解，这篇文章主要简单说下@Conditional注解的使用方法。

**定义：**
按照《Spring Boot实战》书中所说的：“@Conditional根据满足某一特定条件创建一个特定的Bean。比方说，当某一个jar包在一个类路径下的时候，自动配置一个或多个Bean；或者只有某个Bean被创建才会才会创建另外一个Bean。总的来说，就是根据特定判定条件来控制Bean的创建行为，这样我们可以利用这个特性进行一些自动的配置。”

在使用该注解之前我们来看一下@Conditional的源码
```java
@Target({ElementType.TYPE, ElementType.METHOD})
@Retention(RetentionPolicy.RUNTIME)
@Documented
public @interface Conditional {
    Class<? extends Condition>[] value();
}
```

我们关注下面的两点：

* @Target({ElementType.TYPE, ElementType.METHOD})：表示该注解可以加在类上，表示该类下面的所有@Bean都会启用配置；也可以加在方法上，只对该方法有效

* Class<? extends Condition>[] value()：表示要传一个Class集合给该注解，即@Conditional({XXX.class,XXX.class}) ，而且XXX类要继承Condition接口。关于Condition下面会说。


# 示例
我们以自己电脑的操作系统为判定条件，若我们的操作系统为Linux则创建Linux之父的Person的Bean；若操作系统为Windows则创建Windows之父的Person的Bean。

**一、首先我们来创建一个Person类：**

```java
package com.study.spring.annotation.bean;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.bean
 *
 * @author dsy
 */
public class Person {
    private String name;
    private Integer age;

    public Person() {
    }

    public Person(String name, Integer age) {
        this.name = name;
        this.age = age;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Integer getAge() {
        return age;
    }

    public void setAge(Integer age) {
        this.age = age;
    }

    @Override
    public String toString() {
        return "Person{" +
                "name='" + name + '\'' +
                ", age=" + age +
                '}';
    }
}

```
**二、再创建一个配置类MyConfig：**

```java
package com.study.spring.annotation.config;

import com.study.spring.annotation.bean.Person;
import com.study.spring.annotation.condition.LinuxCondition;
import com.study.spring.annotation.condition.WindowsCondition;
import org.springframework.context.annotation.*;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.config
 *
 * @author dsy
 */
@Configuration        //标识该类是一个配置类，相当于之前的一个xml配置文件
public class MyConfig {
 
    /**
     * @Conditional({Condition})  注解：按照一定的条件将bean添加到IOC容器中
     */
    @Conditional({LinuxCondition.class})
    @Bean("linux")
    public Person person01(){
        return new Person("linux之父",55);
    }

    @Bean("windows")
    @Conditional({WindowsCondition.class})
    public Person person02(){
        return new Person("windows之父",48);
    }

}

```

**三、接下来创建两个Condition类：LinuxCondition和WindowsCondition：**

```java
package com.study.spring.annotation.condition;

import org.springframework.context.annotation.Condition;
import org.springframework.context.annotation.ConditionContext;
import org.springframework.core.env.Environment;
import org.springframework.core.type.AnnotatedTypeMetadata;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.condition
 *
 * @author dsy
 */
//判断是否Linux系统 要进行判断必须实现Condition接口
public class LinuxCondition implements Condition {

    /**
     *
     * @param conditionContext  判断条件能使用的上下文环境
     * @param annotatedTypeMetadata 当前标注了@Conditional注解的注释信息
     * @return Boolean
     */
    @Override
    public boolean matches(ConditionContext conditionContext, AnnotatedTypeMetadata annotatedTypeMetadata) {
        Environment environment = conditionContext.getEnvironment();
        String property = environment.getProperty("os.name");
        return property!=null&&property.contains("Linux");
    }
}

```

```java
package com.study.spring.annotation.condition;

import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;
import org.springframework.beans.factory.support.BeanDefinitionRegistry;
import org.springframework.context.annotation.Condition;
import org.springframework.context.annotation.ConditionContext;
import org.springframework.core.env.Environment;
import org.springframework.core.type.AnnotatedTypeMetadata;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.condition
 *
 * @author dsy
 */
//判断是否Windows系统 要进行判断必须实现Condition接口
public class WindowsCondition implements Condition {

    /**
     *
     * @param conditionContext  判断条件能使用的上下文环境
     * @param annotatedTypeMetadata 当前标注了@Conditional注解的注释信息
     * @return Boolean
     */
    @Override
    public boolean matches(ConditionContext conditionContext, AnnotatedTypeMetadata annotatedTypeMetadata) {
        Environment environment = conditionContext.getEnvironment();
        String property = environment.getProperty("os.name");
        return property != null && property.contains("Windows");
    }
}

```

**说明：** 这两个类均实现了Condition接口，里面只有一个matches方法返回值为boolea类型，也就是说@Conditional({LinuxCondition.class})或者@Conditional({WindowsCondition.class})通过判断注解括号里面条件类的matches方法的返回值来判定要不要在IOC容器中创建由@Conditional注解标识的这个Bean；若matches返回值为true则创建该Bean，若返回false则不创建该Bean。

```java
@FunctionalInterface
public interface Condition {
    boolean matches(ConditionContext var1, AnnotatedTypeMetadata var2);
}
```

**四、测试：**

```java
package com.study.spring;

import com.study.spring.annotation.bean.Person;
import com.study.spring.annotation.config.MyConfig;
import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;

import java.util.Map;

@SpringBootTest
class ApplicationTests {
    /**
     * @Conditional 注解来按照条件获取bean实例
     */
    @Test
    void testAnnotationConfig2(){
        //创建IOC容器
        AnnotationConfigApplicationContext applicationContext = new AnnotationConfigApplicationContext(MyConfig.class);
        //getBeanNamesForType方法按照类来获取该类的Bean的id
        String[] names = applicationContext.getBeanNamesForType(Person.class);
        //打印
        for (String name:names){
            System.out.println(name);
        }
        //获取具体的Bean
        Map<String, Person> beans = applicationContext.getBeansOfType(Person.class);
        System.out.println(beans);
    }

}

```
**打印输出：**

```java
windows
{windows=Person{name='windows之父', age=48}}
```

若我们改变运行环境，加上参数：-Dos.name=Linux
![在这里插入图片描述](https://img-blog.csdnimg.cn/20200401134456722.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zOTI5NjI4Mw==,size_16,color_FFFFFF,t_70#pic_center)
再次运行打印输出：

```java
linux
{linux=Person{name='linux之父', age=55}}
```

# 总结
1、@Conditional注解的作用是按照一定的判定条件来控制Bean的创建
2、@Conditional可以加在一个配置类上，表示该类下面的全部的@Bean都会启用配置；也可以加在一个@Bean的方法上面，只对该方法有效
3、判定条件类XXXCondition类要实现Condition接口，并重写matches方法，在该方法里面写自己的判定逻辑
, firstPicture=https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fwx1.sinaimg.cn%2Fbmiddle%2Fceeb653ely1fkcffnqwdyj208c08cgll.jpg&refer=http%3A%2F%2Fwx1.sinaimg.cn&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1630029852&t=456a692fd1a717b65241d6ef10df492f, flag=原创, description=在学习SpringBoot的时候我们会在各种自动配置类中看到大量使用了@Conditional注解，这篇文章主要简单说下@Conditional注解的使用方法。, views=null, appreciation=true, shareStatement=true, comment=true, publish=false, recommend=true, createTime=null, updateTime=null, type=null, user=null, tags=null), org.apache.catalina.session.StandardSessionFacade@261076cc, {}, 1]}
2021-07-28 10:21:48.938 DEBUG 10696 --- [http-nio-8080-exec-10] b.l.b.m.TypeMapper.selectByPrimaryKey    : ==>  Preparing: SELECT type_id,name FROM type WHERE type_id = ? 
2021-07-28 10:21:48.938 DEBUG 10696 --- [http-nio-8080-exec-10] b.l.b.m.TypeMapper.selectByPrimaryKey    : ==> Parameters: 6(Integer)
2021-07-28 10:21:48.939 DEBUG 10696 --- [http-nio-8080-exec-10] b.l.b.m.TypeMapper.selectByPrimaryKey    : <==      Total: 1
2021-07-28 10:21:48.940 DEBUG 10696 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 10:21:48.940 DEBUG 10696 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 1(String)
2021-07-28 10:21:48.941 DEBUG 10696 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 10:21:48.944 DEBUG 10696 --- [http-nio-8080-exec-10] b.l.b.m.B.updateByPrimaryKeySelective    : ==>  Preparing: UPDATE blog SET type_id = ?,user_id = ?,title = ?,content = ?,first_picture = ?,flag = ?,description = ?,appreciation = ?,share_statement = ?,comment = ?,publish = ?,recommend = ?,update_time = ? WHERE blog_id = ? 
2021-07-28 10:21:48.946 DEBUG 10696 --- [http-nio-8080-exec-10] b.l.b.m.B.updateByPrimaryKeySelective    : ==> Parameters: 6(Integer), 1(Integer), 条件注解@Conditional(String), # 简介
在学习SpringBoot的时候我们会在各种自动配置类中看到大量使用了@Conditional注解，这篇文章主要简单说下@Conditional注解的使用方法。

**定义：**
按照《Spring Boot实战》书中所说的：“@Conditional根据满足某一特定条件创建一个特定的Bean。比方说，当某一个jar包在一个类路径下的时候，自动配置一个或多个Bean；或者只有某个Bean被创建才会才会创建另外一个Bean。总的来说，就是根据特定判定条件来控制Bean的创建行为，这样我们可以利用这个特性进行一些自动的配置。”

在使用该注解之前我们来看一下@Conditional的源码
```java
@Target({ElementType.TYPE, ElementType.METHOD})
@Retention(RetentionPolicy.RUNTIME)
@Documented
public @interface Conditional {
    Class<? extends Condition>[] value();
}
```

我们关注下面的两点：

* @Target({ElementType.TYPE, ElementType.METHOD})：表示该注解可以加在类上，表示该类下面的所有@Bean都会启用配置；也可以加在方法上，只对该方法有效

* Class<? extends Condition>[] value()：表示要传一个Class集合给该注解，即@Conditional({XXX.class,XXX.class}) ，而且XXX类要继承Condition接口。关于Condition下面会说。


# 示例
我们以自己电脑的操作系统为判定条件，若我们的操作系统为Linux则创建Linux之父的Person的Bean；若操作系统为Windows则创建Windows之父的Person的Bean。

**一、首先我们来创建一个Person类：**

```java
package com.study.spring.annotation.bean;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.bean
 *
 * @author dsy
 */
public class Person {
    private String name;
    private Integer age;

    public Person() {
    }

    public Person(String name, Integer age) {
        this.name = name;
        this.age = age;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Integer getAge() {
        return age;
    }

    public void setAge(Integer age) {
        this.age = age;
    }

    @Override
    public String toString() {
        return "Person{" +
                "name='" + name + '\'' +
                ", age=" + age +
                '}';
    }
}

```
**二、再创建一个配置类MyConfig：**

```java
package com.study.spring.annotation.config;

import com.study.spring.annotation.bean.Person;
import com.study.spring.annotation.condition.LinuxCondition;
import com.study.spring.annotation.condition.WindowsCondition;
import org.springframework.context.annotation.*;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.config
 *
 * @author dsy
 */
@Configuration        //标识该类是一个配置类，相当于之前的一个xml配置文件
public class MyConfig {
 
    /**
     * @Conditional({Condition})  注解：按照一定的条件将bean添加到IOC容器中
     */
    @Conditional({LinuxCondition.class})
    @Bean("linux")
    public Person person01(){
        return new Person("linux之父",55);
    }

    @Bean("windows")
    @Conditional({WindowsCondition.class})
    public Person person02(){
        return new Person("windows之父",48);
    }

}

```

**三、接下来创建两个Condition类：LinuxCondition和WindowsCondition：**

```java
package com.study.spring.annotation.condition;

import org.springframework.context.annotation.Condition;
import org.springframework.context.annotation.ConditionContext;
import org.springframework.core.env.Environment;
import org.springframework.core.type.AnnotatedTypeMetadata;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.condition
 *
 * @author dsy
 */
//判断是否Linux系统 要进行判断必须实现Condition接口
public class LinuxCondition implements Condition {

    /**
     *
     * @param conditionContext  判断条件能使用的上下文环境
     * @param annotatedTypeMetadata 当前标注了@Conditional注解的注释信息
     * @return Boolean
     */
    @Override
    public boolean matches(ConditionContext conditionContext, AnnotatedTypeMetadata annotatedTypeMetadata) {
        Environment environment = conditionContext.getEnvironment();
        String property = environment.getProperty("os.name");
        return property!=null&&property.contains("Linux");
    }
}

```

```java
package com.study.spring.annotation.condition;

import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;
import org.springframework.beans.factory.support.BeanDefinitionRegistry;
import org.springframework.context.annotation.Condition;
import org.springframework.context.annotation.ConditionContext;
import org.springframework.core.env.Environment;
import org.springframework.core.type.AnnotatedTypeMetadata;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.condition
 *
 * @author dsy
 */
//判断是否Windows系统 要进行判断必须实现Condition接口
public class WindowsCondition implements Condition {

    /**
     *
     * @param conditionContext  判断条件能使用的上下文环境
     * @param annotatedTypeMetadata 当前标注了@Conditional注解的注释信息
     * @return Boolean
     */
    @Override
    public boolean matches(ConditionContext conditionContext, AnnotatedTypeMetadata annotatedTypeMetadata) {
        Environment environment = conditionContext.getEnvironment();
        String property = environment.getProperty("os.name");
        return property != null && property.contains("Windows");
    }
}

```

**说明：** 这两个类均实现了Condition接口，里面只有一个matches方法返回值为boolea类型，也就是说@Conditional({LinuxCondition.class})或者@Conditional({WindowsCondition.class})通过判断注解括号里面条件类的matches方法的返回值来判定要不要在IOC容器中创建由@Conditional注解标识的这个Bean；若matches返回值为true则创建该Bean，若返回false则不创建该Bean。

```java
@FunctionalInterface
public interface Condition {
    boolean matches(ConditionContext var1, AnnotatedTypeMetadata var2);
}
```

**四、测试：**

```java
package com.study.spring;

import com.study.spring.annotation.bean.Person;
import com.study.spring.annotation.config.MyConfig;
import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;

import java.util.Map;

@SpringBootTest
class ApplicationTests {
    /**
     * @Conditional 注解来按照条件获取bean实例
     */
    @Test
    void testAnnotationConfig2(){
        //创建IOC容器
        AnnotationConfigApplicationContext applicationContext = new AnnotationConfigApplicationContext(MyConfig.class);
        //getBeanNamesForType方法按照类来获取该类的Bean的id
        String[] names = applicationContext.getBeanNamesForType(Person.class);
        //打印
        for (String name:names){
            System.out.println(name);
        }
        //获取具体的Bean
        Map<String, Person> beans = applicationContext.getBeansOfType(Person.class);
        System.out.println(beans);
    }

}

```
**打印输出：**

```java
windows
{windows=Person{name='windows之父', age=48}}
```

若我们改变运行环境，加上参数：-Dos.name=Linux
![在这里插入图片描述](https://img-blog.csdnimg.cn/20200401134456722.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zOTI5NjI4Mw==,size_16,color_FFFFFF,t_70#pic_center)
再次运行打印输出：

```java
linux
{linux=Person{name='linux之父', age=55}}
```

# 总结
1、@Conditional注解的作用是按照一定的判定条件来控制Bean的创建
2、@Conditional可以加在一个配置类上，表示该类下面的全部的@Bean都会启用配置；也可以加在一个@Bean的方法上面，只对该方法有效
3、判定条件类XXXCondition类要实现Condition接口，并重写matches方法，在该方法里面写自己的判定逻辑
(String), https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fwx1.sinaimg.cn%2Fbmiddle%2Fceeb653ely1fkcffnqwdyj208c08cgll.jpg&refer=http%3A%2F%2Fwx1.sinaimg.cn&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1630029852&t=456a692fd1a717b65241d6ef10df492f(String), 原创(String), 在学习SpringBoot的时候我们会在各种自动配置类中看到大量使用了@Conditional注解，这篇文章主要简单说下@Conditional注解的使用方法。(String), true(Boolean), true(Boolean), true(Boolean), false(Boolean), true(Boolean), 2021-07-28 10:21:48.942(Timestamp), 8(Integer)
2021-07-28 10:21:48.948 DEBUG 10696 --- [http-nio-8080-exec-10] b.l.b.m.B.updateByPrimaryKeySelective    : <==    Updates: 1
2021-07-28 10:21:48.948 DEBUG 10696 --- [http-nio-8080-exec-10] b.l.b.m.BlogTagMapper.deleteByExample    : ==>  Preparing: DELETE FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 10:21:48.949 DEBUG 10696 --- [http-nio-8080-exec-10] b.l.b.m.BlogTagMapper.deleteByExample    : ==> Parameters: 8(Integer)
2021-07-28 10:21:48.950 DEBUG 10696 --- [http-nio-8080-exec-10] b.l.b.m.BlogTagMapper.deleteByExample    : <==    Updates: 1
2021-07-28 10:21:48.952 DEBUG 10696 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.BlogTagMapper.insert   : ==>  Preparing: INSERT INTO blog_tag ( blog_tag_id,blog_id,tag_id ) VALUES( ?,?,? ) 
2021-07-28 10:21:48.953 DEBUG 10696 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.BlogTagMapper.insert   : ==> Parameters: null, 8(Integer), 1(Integer)
2021-07-28 10:21:48.955 DEBUG 10696 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.BlogTagMapper.insert   : <==    Updates: 1
2021-07-28 10:21:48.957  INFO 10696 --- [http-nio-8080-exec-10] black.lyg.blog.service.BlogService       : 删除redis中key为blogtags的hash数据类型
2021-07-28 10:21:48.957 DEBUG 10696 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.selectByPrimaryKey    : ==>  Preparing: SELECT blog_id,type_id,user_id,title,content,first_picture,flag,description,views,appreciation,share_statement,comment,publish,recommend,create_time,update_time FROM blog WHERE blog_id = ? 
2021-07-28 10:21:48.958 DEBUG 10696 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.selectByPrimaryKey    : ==> Parameters: 8(Integer)
2021-07-28 10:21:48.959 DEBUG 10696 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.selectByPrimaryKey    : <==      Total: 1
2021-07-28 10:21:48.963  INFO 10696 --- [http-nio-8080-exec-10] black.lyg.blog.service.BlogService       : 更新redis中TheLatestBlog的数据，标题为条件注解@Conditional
2021-07-28 10:21:48.964  INFO 10696 --- [http-nio-8080-exec-10] black.lyg.blog.service.BlogService       : 更新redis中AllBlog的数据，标题为条件注解@Conditional
2021-07-28 10:21:48.969  INFO 10696 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:21:48.969  INFO 10696 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : result : redirect:/admin/blogs/admin 
2021-07-28 10:21:48.987  INFO 10696 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{message=操作成功}, admin, 1]}
2021-07-28 10:21:48.987 DEBUG 10696 --- [http-nio-8080-exec-1] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 10:21:48.987 DEBUG 10696 --- [http-nio-8080-exec-1] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 10:21:48.988 DEBUG 10696 --- [http-nio-8080-exec-1] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 10:21:48.989 DEBUG 10696 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 10:21:48.989 DEBUG 10696 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 10:21:48.990 DEBUG 10696 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 10:21:48.990 DEBUG 10696 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 10:21:48.990 DEBUG 10696 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 10:21:48.992 DEBUG 10696 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:21:48.992 DEBUG 10696 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:21:48.993 DEBUG 10696 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:21:48.993 DEBUG 10696 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:21:48.994 DEBUG 10696 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:21:48.994 DEBUG 10696 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:21:48.995 DEBUG 10696 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:21:48.995 DEBUG 10696 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:21:48.996 DEBUG 10696 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:21:48.997 DEBUG 10696 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:21:48.997 DEBUG 10696 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 10:21:48.998 DEBUG 10696 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:21:48.998 DEBUG 10696 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 8
2021-07-28 10:21:48.999 DEBUG 10696 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 10:21:48.999 DEBUG 10696 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 10:21:49.000 DEBUG 10696 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 10:21:49.000  INFO 10696 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:21:49.000  INFO 10696 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 10:21:49.279  INFO 10696 --- [http-nio-8080-exec-5] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:21:56.807  INFO 10696 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/8/edit', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.editPage', args=[{}, 8]}
2021-07-28 10:21:56.808  INFO 10696 --- [http-nio-8080-exec-8] black.lyg.blog.service.BlogService       : 从redis中获取Blog的数据，标题为条件注解@Conditional
2021-07-28 10:21:56.811 DEBUG 10696 --- [http-nio-8080-exec-8] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 10:21:56.811 DEBUG 10696 --- [http-nio-8080-exec-8] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 8(Integer)
2021-07-28 10:21:56.812 DEBUG 10696 --- [http-nio-8080-exec-8] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 10:21:56.813 DEBUG 10696 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 10:21:56.813 DEBUG 10696 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 10:21:56.814 DEBUG 10696 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 10:21:56.815 DEBUG 10696 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.TagMapper.selectAll    : ==>  Preparing: SELECT tag_id,name FROM tag 
2021-07-28 10:21:56.815 DEBUG 10696 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.TagMapper.selectAll    : ==> Parameters: 
2021-07-28 10:21:56.815 DEBUG 10696 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.TagMapper.selectAll    : <==      Total: 7
2021-07-28 10:21:56.816  INFO 10696 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:21:56.816  INFO 10696 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : result : admin/blogs-input 
2021-07-28 10:21:57.067  INFO 10696 --- [http-nio-8080-exec-4] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:21:59.150  INFO 10696 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/add', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogAdd', args=[Blog(blogId=8, typeId=6, userId=null, title=条件注解@Conditional, content=# 简介
在学习SpringBoot的时候我们会在各种自动配置类中看到大量使用了@Conditional注解，这篇文章主要简单说下@Conditional注解的使用方法。

**定义：**
按照《Spring Boot实战》书中所说的：“@Conditional根据满足某一特定条件创建一个特定的Bean。比方说，当某一个jar包在一个类路径下的时候，自动配置一个或多个Bean；或者只有某个Bean被创建才会才会创建另外一个Bean。总的来说，就是根据特定判定条件来控制Bean的创建行为，这样我们可以利用这个特性进行一些自动的配置。”

在使用该注解之前我们来看一下@Conditional的源码
```java
@Target({ElementType.TYPE, ElementType.METHOD})
@Retention(RetentionPolicy.RUNTIME)
@Documented
public @interface Conditional {
    Class<? extends Condition>[] value();
}
```

我们关注下面的两点：

* @Target({ElementType.TYPE, ElementType.METHOD})：表示该注解可以加在类上，表示该类下面的所有@Bean都会启用配置；也可以加在方法上，只对该方法有效

* Class<? extends Condition>[] value()：表示要传一个Class集合给该注解，即@Conditional({XXX.class,XXX.class}) ，而且XXX类要继承Condition接口。关于Condition下面会说。


# 示例
我们以自己电脑的操作系统为判定条件，若我们的操作系统为Linux则创建Linux之父的Person的Bean；若操作系统为Windows则创建Windows之父的Person的Bean。

**一、首先我们来创建一个Person类：**

```java
package com.study.spring.annotation.bean;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.bean
 *
 * @author dsy
 */
public class Person {
    private String name;
    private Integer age;

    public Person() {
    }

    public Person(String name, Integer age) {
        this.name = name;
        this.age = age;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Integer getAge() {
        return age;
    }

    public void setAge(Integer age) {
        this.age = age;
    }

    @Override
    public String toString() {
        return "Person{" +
                "name='" + name + '\'' +
                ", age=" + age +
                '}';
    }
}

```
**二、再创建一个配置类MyConfig：**

```java
package com.study.spring.annotation.config;

import com.study.spring.annotation.bean.Person;
import com.study.spring.annotation.condition.LinuxCondition;
import com.study.spring.annotation.condition.WindowsCondition;
import org.springframework.context.annotation.*;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.config
 *
 * @author dsy
 */
@Configuration        //标识该类是一个配置类，相当于之前的一个xml配置文件
public class MyConfig {
 
    /**
     * @Conditional({Condition})  注解：按照一定的条件将bean添加到IOC容器中
     */
    @Conditional({LinuxCondition.class})
    @Bean("linux")
    public Person person01(){
        return new Person("linux之父",55);
    }

    @Bean("windows")
    @Conditional({WindowsCondition.class})
    public Person person02(){
        return new Person("windows之父",48);
    }

}

```

**三、接下来创建两个Condition类：LinuxCondition和WindowsCondition：**

```java
package com.study.spring.annotation.condition;

import org.springframework.context.annotation.Condition;
import org.springframework.context.annotation.ConditionContext;
import org.springframework.core.env.Environment;
import org.springframework.core.type.AnnotatedTypeMetadata;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.condition
 *
 * @author dsy
 */
//判断是否Linux系统 要进行判断必须实现Condition接口
public class LinuxCondition implements Condition {

    /**
     *
     * @param conditionContext  判断条件能使用的上下文环境
     * @param annotatedTypeMetadata 当前标注了@Conditional注解的注释信息
     * @return Boolean
     */
    @Override
    public boolean matches(ConditionContext conditionContext, AnnotatedTypeMetadata annotatedTypeMetadata) {
        Environment environment = conditionContext.getEnvironment();
        String property = environment.getProperty("os.name");
        return property!=null&&property.contains("Linux");
    }
}

```

```java
package com.study.spring.annotation.condition;

import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;
import org.springframework.beans.factory.support.BeanDefinitionRegistry;
import org.springframework.context.annotation.Condition;
import org.springframework.context.annotation.ConditionContext;
import org.springframework.core.env.Environment;
import org.springframework.core.type.AnnotatedTypeMetadata;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.condition
 *
 * @author dsy
 */
//判断是否Windows系统 要进行判断必须实现Condition接口
public class WindowsCondition implements Condition {

    /**
     *
     * @param conditionContext  判断条件能使用的上下文环境
     * @param annotatedTypeMetadata 当前标注了@Conditional注解的注释信息
     * @return Boolean
     */
    @Override
    public boolean matches(ConditionContext conditionContext, AnnotatedTypeMetadata annotatedTypeMetadata) {
        Environment environment = conditionContext.getEnvironment();
        String property = environment.getProperty("os.name");
        return property != null && property.contains("Windows");
    }
}

```

**说明：** 这两个类均实现了Condition接口，里面只有一个matches方法返回值为boolea类型，也就是说@Conditional({LinuxCondition.class})或者@Conditional({WindowsCondition.class})通过判断注解括号里面条件类的matches方法的返回值来判定要不要在IOC容器中创建由@Conditional注解标识的这个Bean；若matches返回值为true则创建该Bean，若返回false则不创建该Bean。

```java
@FunctionalInterface
public interface Condition {
    boolean matches(ConditionContext var1, AnnotatedTypeMetadata var2);
}
```

**四、测试：**

```java
package com.study.spring;

import com.study.spring.annotation.bean.Person;
import com.study.spring.annotation.config.MyConfig;
import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;

import java.util.Map;

@SpringBootTest
class ApplicationTests {
    /**
     * @Conditional 注解来按照条件获取bean实例
     */
    @Test
    void testAnnotationConfig2(){
        //创建IOC容器
        AnnotationConfigApplicationContext applicationContext = new AnnotationConfigApplicationContext(MyConfig.class);
        //getBeanNamesForType方法按照类来获取该类的Bean的id
        String[] names = applicationContext.getBeanNamesForType(Person.class);
        //打印
        for (String name:names){
            System.out.println(name);
        }
        //获取具体的Bean
        Map<String, Person> beans = applicationContext.getBeansOfType(Person.class);
        System.out.println(beans);
    }

}

```
**打印输出：**

```java
windows
{windows=Person{name='windows之父', age=48}}
```

若我们改变运行环境，加上参数：-Dos.name=Linux
![在这里插入图片描述](https://img-blog.csdnimg.cn/20200401134456722.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zOTI5NjI4Mw==,size_16,color_FFFFFF,t_70#pic_center)
再次运行打印输出：

```java
linux
{linux=Person{name='linux之父', age=55}}
```

# 总结
1、@Conditional注解的作用是按照一定的判定条件来控制Bean的创建
2、@Conditional可以加在一个配置类上，表示该类下面的全部的@Bean都会启用配置；也可以加在一个@Bean的方法上面，只对该方法有效
3、判定条件类XXXCondition类要实现Condition接口，并重写matches方法，在该方法里面写自己的判定逻辑
, firstPicture=https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fwx1.sinaimg.cn%2Fbmiddle%2Fceeb653ely1fkcffnqwdyj208c08cgll.jpg&refer=http%3A%2F%2Fwx1.sinaimg.cn&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1630029852&t=456a692fd1a717b65241d6ef10df492f, flag=原创, description=在学习SpringBoot的时候我们会在各种自动配置类中看到大量使用了@Conditional注解，这篇文章主要简单说下@Conditional注解的使用方法。, views=null, appreciation=true, shareStatement=true, comment=true, publish=true, recommend=true, createTime=null, updateTime=null, type=null, user=null, tags=null), org.apache.catalina.session.StandardSessionFacade@261076cc, {}, 1]}
2021-07-28 10:21:59.151 DEBUG 10696 --- [http-nio-8080-exec-6] b.l.b.m.TypeMapper.selectByPrimaryKey    : ==>  Preparing: SELECT type_id,name FROM type WHERE type_id = ? 
2021-07-28 10:21:59.151 DEBUG 10696 --- [http-nio-8080-exec-6] b.l.b.m.TypeMapper.selectByPrimaryKey    : ==> Parameters: 6(Integer)
2021-07-28 10:21:59.153 DEBUG 10696 --- [http-nio-8080-exec-6] b.l.b.m.TypeMapper.selectByPrimaryKey    : <==      Total: 1
2021-07-28 10:21:59.154 DEBUG 10696 --- [http-nio-8080-exec-6] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 10:21:59.154 DEBUG 10696 --- [http-nio-8080-exec-6] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 1(String)
2021-07-28 10:21:59.155 DEBUG 10696 --- [http-nio-8080-exec-6] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 10:21:59.156 DEBUG 10696 --- [http-nio-8080-exec-6] b.l.b.m.B.updateByPrimaryKeySelective    : ==>  Preparing: UPDATE blog SET type_id = ?,user_id = ?,title = ?,content = ?,first_picture = ?,flag = ?,description = ?,appreciation = ?,share_statement = ?,comment = ?,publish = ?,recommend = ?,update_time = ? WHERE blog_id = ? 
2021-07-28 10:21:59.158 DEBUG 10696 --- [http-nio-8080-exec-6] b.l.b.m.B.updateByPrimaryKeySelective    : ==> Parameters: 6(Integer), 1(Integer), 条件注解@Conditional(String), # 简介
在学习SpringBoot的时候我们会在各种自动配置类中看到大量使用了@Conditional注解，这篇文章主要简单说下@Conditional注解的使用方法。

**定义：**
按照《Spring Boot实战》书中所说的：“@Conditional根据满足某一特定条件创建一个特定的Bean。比方说，当某一个jar包在一个类路径下的时候，自动配置一个或多个Bean；或者只有某个Bean被创建才会才会创建另外一个Bean。总的来说，就是根据特定判定条件来控制Bean的创建行为，这样我们可以利用这个特性进行一些自动的配置。”

在使用该注解之前我们来看一下@Conditional的源码
```java
@Target({ElementType.TYPE, ElementType.METHOD})
@Retention(RetentionPolicy.RUNTIME)
@Documented
public @interface Conditional {
    Class<? extends Condition>[] value();
}
```

我们关注下面的两点：

* @Target({ElementType.TYPE, ElementType.METHOD})：表示该注解可以加在类上，表示该类下面的所有@Bean都会启用配置；也可以加在方法上，只对该方法有效

* Class<? extends Condition>[] value()：表示要传一个Class集合给该注解，即@Conditional({XXX.class,XXX.class}) ，而且XXX类要继承Condition接口。关于Condition下面会说。


# 示例
我们以自己电脑的操作系统为判定条件，若我们的操作系统为Linux则创建Linux之父的Person的Bean；若操作系统为Windows则创建Windows之父的Person的Bean。

**一、首先我们来创建一个Person类：**

```java
package com.study.spring.annotation.bean;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.bean
 *
 * @author dsy
 */
public class Person {
    private String name;
    private Integer age;

    public Person() {
    }

    public Person(String name, Integer age) {
        this.name = name;
        this.age = age;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Integer getAge() {
        return age;
    }

    public void setAge(Integer age) {
        this.age = age;
    }

    @Override
    public String toString() {
        return "Person{" +
                "name='" + name + '\'' +
                ", age=" + age +
                '}';
    }
}

```
**二、再创建一个配置类MyConfig：**

```java
package com.study.spring.annotation.config;

import com.study.spring.annotation.bean.Person;
import com.study.spring.annotation.condition.LinuxCondition;
import com.study.spring.annotation.condition.WindowsCondition;
import org.springframework.context.annotation.*;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.config
 *
 * @author dsy
 */
@Configuration        //标识该类是一个配置类，相当于之前的一个xml配置文件
public class MyConfig {
 
    /**
     * @Conditional({Condition})  注解：按照一定的条件将bean添加到IOC容器中
     */
    @Conditional({LinuxCondition.class})
    @Bean("linux")
    public Person person01(){
        return new Person("linux之父",55);
    }

    @Bean("windows")
    @Conditional({WindowsCondition.class})
    public Person person02(){
        return new Person("windows之父",48);
    }

}

```

**三、接下来创建两个Condition类：LinuxCondition和WindowsCondition：**

```java
package com.study.spring.annotation.condition;

import org.springframework.context.annotation.Condition;
import org.springframework.context.annotation.ConditionContext;
import org.springframework.core.env.Environment;
import org.springframework.core.type.AnnotatedTypeMetadata;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.condition
 *
 * @author dsy
 */
//判断是否Linux系统 要进行判断必须实现Condition接口
public class LinuxCondition implements Condition {

    /**
     *
     * @param conditionContext  判断条件能使用的上下文环境
     * @param annotatedTypeMetadata 当前标注了@Conditional注解的注释信息
     * @return Boolean
     */
    @Override
    public boolean matches(ConditionContext conditionContext, AnnotatedTypeMetadata annotatedTypeMetadata) {
        Environment environment = conditionContext.getEnvironment();
        String property = environment.getProperty("os.name");
        return property!=null&&property.contains("Linux");
    }
}

```

```java
package com.study.spring.annotation.condition;

import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;
import org.springframework.beans.factory.support.BeanDefinitionRegistry;
import org.springframework.context.annotation.Condition;
import org.springframework.context.annotation.ConditionContext;
import org.springframework.core.env.Environment;
import org.springframework.core.type.AnnotatedTypeMetadata;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.condition
 *
 * @author dsy
 */
//判断是否Windows系统 要进行判断必须实现Condition接口
public class WindowsCondition implements Condition {

    /**
     *
     * @param conditionContext  判断条件能使用的上下文环境
     * @param annotatedTypeMetadata 当前标注了@Conditional注解的注释信息
     * @return Boolean
     */
    @Override
    public boolean matches(ConditionContext conditionContext, AnnotatedTypeMetadata annotatedTypeMetadata) {
        Environment environment = conditionContext.getEnvironment();
        String property = environment.getProperty("os.name");
        return property != null && property.contains("Windows");
    }
}

```

**说明：** 这两个类均实现了Condition接口，里面只有一个matches方法返回值为boolea类型，也就是说@Conditional({LinuxCondition.class})或者@Conditional({WindowsCondition.class})通过判断注解括号里面条件类的matches方法的返回值来判定要不要在IOC容器中创建由@Conditional注解标识的这个Bean；若matches返回值为true则创建该Bean，若返回false则不创建该Bean。

```java
@FunctionalInterface
public interface Condition {
    boolean matches(ConditionContext var1, AnnotatedTypeMetadata var2);
}
```

**四、测试：**

```java
package com.study.spring;

import com.study.spring.annotation.bean.Person;
import com.study.spring.annotation.config.MyConfig;
import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;

import java.util.Map;

@SpringBootTest
class ApplicationTests {
    /**
     * @Conditional 注解来按照条件获取bean实例
     */
    @Test
    void testAnnotationConfig2(){
        //创建IOC容器
        AnnotationConfigApplicationContext applicationContext = new AnnotationConfigApplicationContext(MyConfig.class);
        //getBeanNamesForType方法按照类来获取该类的Bean的id
        String[] names = applicationContext.getBeanNamesForType(Person.class);
        //打印
        for (String name:names){
            System.out.println(name);
        }
        //获取具体的Bean
        Map<String, Person> beans = applicationContext.getBeansOfType(Person.class);
        System.out.println(beans);
    }

}

```
**打印输出：**

```java
windows
{windows=Person{name='windows之父', age=48}}
```

若我们改变运行环境，加上参数：-Dos.name=Linux
![在这里插入图片描述](https://img-blog.csdnimg.cn/20200401134456722.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zOTI5NjI4Mw==,size_16,color_FFFFFF,t_70#pic_center)
再次运行打印输出：

```java
linux
{linux=Person{name='linux之父', age=55}}
```

# 总结
1、@Conditional注解的作用是按照一定的判定条件来控制Bean的创建
2、@Conditional可以加在一个配置类上，表示该类下面的全部的@Bean都会启用配置；也可以加在一个@Bean的方法上面，只对该方法有效
3、判定条件类XXXCondition类要实现Condition接口，并重写matches方法，在该方法里面写自己的判定逻辑
(String), https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fwx1.sinaimg.cn%2Fbmiddle%2Fceeb653ely1fkcffnqwdyj208c08cgll.jpg&refer=http%3A%2F%2Fwx1.sinaimg.cn&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1630029852&t=456a692fd1a717b65241d6ef10df492f(String), 原创(String), 在学习SpringBoot的时候我们会在各种自动配置类中看到大量使用了@Conditional注解，这篇文章主要简单说下@Conditional注解的使用方法。(String), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2021-07-28 10:21:59.155(Timestamp), 8(Integer)
2021-07-28 10:21:59.159 DEBUG 10696 --- [http-nio-8080-exec-6] b.l.b.m.B.updateByPrimaryKeySelective    : <==    Updates: 1
2021-07-28 10:21:59.159 DEBUG 10696 --- [http-nio-8080-exec-6] b.l.b.m.BlogTagMapper.deleteByExample    : ==>  Preparing: DELETE FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 10:21:59.160 DEBUG 10696 --- [http-nio-8080-exec-6] b.l.b.m.BlogTagMapper.deleteByExample    : ==> Parameters: 8(Integer)
2021-07-28 10:21:59.160 DEBUG 10696 --- [http-nio-8080-exec-6] b.l.b.m.BlogTagMapper.deleteByExample    : <==    Updates: 1
2021-07-28 10:21:59.161 DEBUG 10696 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.BlogTagMapper.insert   : ==>  Preparing: INSERT INTO blog_tag ( blog_tag_id,blog_id,tag_id ) VALUES( ?,?,? ) 
2021-07-28 10:21:59.161 DEBUG 10696 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.BlogTagMapper.insert   : ==> Parameters: null, 8(Integer), 1(Integer)
2021-07-28 10:21:59.161 DEBUG 10696 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.BlogTagMapper.insert   : <==    Updates: 1
2021-07-28 10:21:59.162  INFO 10696 --- [http-nio-8080-exec-6] black.lyg.blog.service.BlogService       : 删除redis中key为blogtags的hash数据类型
2021-07-28 10:21:59.163 DEBUG 10696 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.selectByPrimaryKey    : ==>  Preparing: SELECT blog_id,type_id,user_id,title,content,first_picture,flag,description,views,appreciation,share_statement,comment,publish,recommend,create_time,update_time FROM blog WHERE blog_id = ? 
2021-07-28 10:21:59.163 DEBUG 10696 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.selectByPrimaryKey    : ==> Parameters: 8(Integer)
2021-07-28 10:21:59.164 DEBUG 10696 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.selectByPrimaryKey    : <==      Total: 1
2021-07-28 10:21:59.165  INFO 10696 --- [http-nio-8080-exec-6] black.lyg.blog.service.BlogService       : 更新redis中TheLatestBlog的数据，标题为条件注解@Conditional
2021-07-28 10:21:59.168  INFO 10696 --- [http-nio-8080-exec-6] black.lyg.blog.service.BlogService       : 更新redis中AllBlog的数据，标题为条件注解@Conditional
2021-07-28 10:21:59.171  INFO 10696 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:21:59.171  INFO 10696 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : result : redirect:/admin/blogs/admin 
2021-07-28 10:21:59.177  INFO 10696 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{message=操作成功}, admin, 1]}
2021-07-28 10:21:59.177 DEBUG 10696 --- [http-nio-8080-exec-7] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 10:21:59.177 DEBUG 10696 --- [http-nio-8080-exec-7] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 10:21:59.178 DEBUG 10696 --- [http-nio-8080-exec-7] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 10:21:59.179 DEBUG 10696 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 10:21:59.179 DEBUG 10696 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 10:21:59.179 DEBUG 10696 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 10:21:59.180 DEBUG 10696 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 10:21:59.180 DEBUG 10696 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 10:21:59.182 DEBUG 10696 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:21:59.182 DEBUG 10696 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:21:59.183 DEBUG 10696 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:21:59.184 DEBUG 10696 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:21:59.184 DEBUG 10696 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:21:59.185 DEBUG 10696 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:21:59.186 DEBUG 10696 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:21:59.187 DEBUG 10696 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:21:59.187 DEBUG 10696 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:21:59.188 DEBUG 10696 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:21:59.188 DEBUG 10696 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 10:21:59.189 DEBUG 10696 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:21:59.189 DEBUG 10696 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 8
2021-07-28 10:21:59.189 DEBUG 10696 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 10:21:59.189 DEBUG 10696 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 10:21:59.190 DEBUG 10696 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 10:21:59.190  INFO 10696 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:21:59.190  INFO 10696 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 10:21:59.441  INFO 10696 --- [http-nio-8080-exec-3] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:22:02.974 DEBUG 10696 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==>  Preparing: SELECT count(0) FROM blog 
2021-07-28 10:22:02.975 DEBUG 10696 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==> Parameters: 
2021-07-28 10:22:02.977 DEBUG 10696 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogAll_COUNT     : <==      Total: 1
2021-07-28 10:22:02.977 DEBUG 10696 --- [http-nio-8080-exec-9] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc LIMIT ? 
2021-07-28 10:22:02.977 DEBUG 10696 --- [http-nio-8080-exec-9] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 5(Integer)
2021-07-28 10:22:02.978 DEBUG 10696 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:22:02.979 DEBUG 10696 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:22:02.980 DEBUG 10696 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:22:02.980 DEBUG 10696 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:22:02.980 DEBUG 10696 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:22:02.980 DEBUG 10696 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:22:02.982 DEBUG 10696 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:22:02.982 DEBUG 10696 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:22:02.982 DEBUG 10696 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:22:02.982 DEBUG 10696 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:22:02.983 DEBUG 10696 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 10:22:02.983 DEBUG 10696 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:22:02.983 DEBUG 10696 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:22:02.984 DEBUG 10696 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 10:22:02.985 DEBUG 10696 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:22:02.986 DEBUG 10696 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:22:02.986 DEBUG 10696 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 10:22:02.986 DEBUG 10696 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:22:02.986 DEBUG 10696 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:22:02.986 DEBUG 10696 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 10:22:02.987 DEBUG 10696 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:22:02.987 DEBUG 10696 --- [http-nio-8080-exec-9] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 5
2021-07-28 10:22:02.990  INFO 10696 --- [http-nio-8080-exec-9] black.lyg.blog.service.TagService        : 从redis中获取数据：[]
2021-07-28 10:22:02.991 DEBUG 10696 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.findSeveralTopTags     : ==>  Preparing: select distinct t.tag_id,t.name ,count(*) as number from tag t ,blog_tag bt where t.tag_id = bt.tag_id group by t.tag_id, t.name order by number desc limit ? 
2021-07-28 10:22:02.991 DEBUG 10696 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.findSeveralTopTags     : ==> Parameters: 10(Integer)
2021-07-28 10:22:02.992 DEBUG 10696 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.findSeveralTopTags     : <==      Total: 7
2021-07-28 10:22:02.993  INFO 10696 --- [http-nio-8080-exec-9] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=21, name=Redis, BlogNumber=5)
2021-07-28 10:22:02.994  INFO 10696 --- [http-nio-8080-exec-9] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=22, name=Java, BlogNumber=4)
2021-07-28 10:22:02.995  INFO 10696 --- [http-nio-8080-exec-9] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=20, name=设计模式, BlogNumber=3)
2021-07-28 10:22:02.996  INFO 10696 --- [http-nio-8080-exec-9] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=1, name=Spring, BlogNumber=2)
2021-07-28 10:22:02.996  INFO 10696 --- [http-nio-8080-exec-9] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=24, name=测试, BlogNumber=2)
2021-07-28 10:22:02.997  INFO 10696 --- [http-nio-8080-exec-9] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=2, name=Mybatis, BlogNumber=1)
2021-07-28 10:22:02.998  INFO 10696 --- [http-nio-8080-exec-9] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=23, name=MySQL, BlogNumber=1)
2021-07-28 10:22:02.998  INFO 10696 --- [http-nio-8080-exec-9] black.lyg.blog.service.TagService        : 从Mysql中查找到由标签显示博客的数据：[TagTops(tagId=21, name=Redis, BlogNumber=5), TagTops(tagId=22, name=Java, BlogNumber=4), TagTops(tagId=20, name=设计模式, BlogNumber=3), TagTops(tagId=1, name=Spring, BlogNumber=2), TagTops(tagId=24, name=测试, BlogNumber=2), TagTops(tagId=2, name=Mybatis, BlogNumber=1), TagTops(tagId=23, name=MySQL, BlogNumber=1)]
2021-07-28 10:22:02.999  INFO 10696 --- [http-nio-8080-exec-9] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:22:03.303  INFO 10696 --- [http-nio-8080-exec-10] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:22:08.217  INFO 10696 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 从redis中获取Blog的数据，标题为条件注解@Conditional
2021-07-28 10:22:08.218 DEBUG 10696 --- [http-nio-8080-exec-1] b.l.b.m.B.updateByPrimaryKeySelective    : ==>  Preparing: UPDATE blog SET type_id = ?,user_id = ?,title = ?,content = ?,first_picture = ?,flag = ?,description = ?,views = ?,appreciation = ?,share_statement = ?,comment = ?,publish = ?,recommend = ?,create_time = ?,update_time = ? WHERE blog_id = ? 
2021-07-28 10:22:08.220 DEBUG 10696 --- [http-nio-8080-exec-1] b.l.b.m.B.updateByPrimaryKeySelective    : ==> Parameters: 6(Integer), 1(Integer), 条件注解@Conditional(String), # 简介
在学习SpringBoot的时候我们会在各种自动配置类中看到大量使用了@Conditional注解，这篇文章主要简单说下@Conditional注解的使用方法。

**定义：**
按照《Spring Boot实战》书中所说的：“@Conditional根据满足某一特定条件创建一个特定的Bean。比方说，当某一个jar包在一个类路径下的时候，自动配置一个或多个Bean；或者只有某个Bean被创建才会才会创建另外一个Bean。总的来说，就是根据特定判定条件来控制Bean的创建行为，这样我们可以利用这个特性进行一些自动的配置。”

在使用该注解之前我们来看一下@Conditional的源码
```java
@Target({ElementType.TYPE, ElementType.METHOD})
@Retention(RetentionPolicy.RUNTIME)
@Documented
public @interface Conditional {
    Class<? extends Condition>[] value();
}
```

我们关注下面的两点：

* @Target({ElementType.TYPE, ElementType.METHOD})：表示该注解可以加在类上，表示该类下面的所有@Bean都会启用配置；也可以加在方法上，只对该方法有效

* Class<? extends Condition>[] value()：表示要传一个Class集合给该注解，即@Conditional({XXX.class,XXX.class}) ，而且XXX类要继承Condition接口。关于Condition下面会说。


# 示例
我们以自己电脑的操作系统为判定条件，若我们的操作系统为Linux则创建Linux之父的Person的Bean；若操作系统为Windows则创建Windows之父的Person的Bean。

**一、首先我们来创建一个Person类：**

```java
package com.study.spring.annotation.bean;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.bean
 *
 * @author dsy
 */
public class Person {
    private String name;
    private Integer age;

    public Person() {
    }

    public Person(String name, Integer age) {
        this.name = name;
        this.age = age;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Integer getAge() {
        return age;
    }

    public void setAge(Integer age) {
        this.age = age;
    }

    @Override
    public String toString() {
        return "Person{" +
                "name='" + name + '\'' +
                ", age=" + age +
                '}';
    }
}

```
**二、再创建一个配置类MyConfig：**

```java
package com.study.spring.annotation.config;

import com.study.spring.annotation.bean.Person;
import com.study.spring.annotation.condition.LinuxCondition;
import com.study.spring.annotation.condition.WindowsCondition;
import org.springframework.context.annotation.*;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.config
 *
 * @author dsy
 */
@Configuration        //标识该类是一个配置类，相当于之前的一个xml配置文件
public class MyConfig {
 
    /**
     * @Conditional({Condition})  注解：按照一定的条件将bean添加到IOC容器中
     */
    @Conditional({LinuxCondition.class})
    @Bean("linux")
    public Person person01(){
        return new Person("linux之父",55);
    }

    @Bean("windows")
    @Conditional({WindowsCondition.class})
    public Person person02(){
        return new Person("windows之父",48);
    }

}

```

**三、接下来创建两个Condition类：LinuxCondition和WindowsCondition：**

```java
package com.study.spring.annotation.condition;

import org.springframework.context.annotation.Condition;
import org.springframework.context.annotation.ConditionContext;
import org.springframework.core.env.Environment;
import org.springframework.core.type.AnnotatedTypeMetadata;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.condition
 *
 * @author dsy
 */
//判断是否Linux系统 要进行判断必须实现Condition接口
public class LinuxCondition implements Condition {

    /**
     *
     * @param conditionContext  判断条件能使用的上下文环境
     * @param annotatedTypeMetadata 当前标注了@Conditional注解的注释信息
     * @return Boolean
     */
    @Override
    public boolean matches(ConditionContext conditionContext, AnnotatedTypeMetadata annotatedTypeMetadata) {
        Environment environment = conditionContext.getEnvironment();
        String property = environment.getProperty("os.name");
        return property!=null&&property.contains("Linux");
    }
}

```

```java
package com.study.spring.annotation.condition;

import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;
import org.springframework.beans.factory.support.BeanDefinitionRegistry;
import org.springframework.context.annotation.Condition;
import org.springframework.context.annotation.ConditionContext;
import org.springframework.core.env.Environment;
import org.springframework.core.type.AnnotatedTypeMetadata;

/**
 * Created on 2020/3/31
 * Package com.study.spring.annotation.condition
 *
 * @author dsy
 */
//判断是否Windows系统 要进行判断必须实现Condition接口
public class WindowsCondition implements Condition {

    /**
     *
     * @param conditionContext  判断条件能使用的上下文环境
     * @param annotatedTypeMetadata 当前标注了@Conditional注解的注释信息
     * @return Boolean
     */
    @Override
    public boolean matches(ConditionContext conditionContext, AnnotatedTypeMetadata annotatedTypeMetadata) {
        Environment environment = conditionContext.getEnvironment();
        String property = environment.getProperty("os.name");
        return property != null && property.contains("Windows");
    }
}

```

**说明：** 这两个类均实现了Condition接口，里面只有一个matches方法返回值为boolea类型，也就是说@Conditional({LinuxCondition.class})或者@Conditional({WindowsCondition.class})通过判断注解括号里面条件类的matches方法的返回值来判定要不要在IOC容器中创建由@Conditional注解标识的这个Bean；若matches返回值为true则创建该Bean，若返回false则不创建该Bean。

```java
@FunctionalInterface
public interface Condition {
    boolean matches(ConditionContext var1, AnnotatedTypeMetadata var2);
}
```

**四、测试：**

```java
package com.study.spring;

import com.study.spring.annotation.bean.Person;
import com.study.spring.annotation.config.MyConfig;
import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;

import java.util.Map;

@SpringBootTest
class ApplicationTests {
    /**
     * @Conditional 注解来按照条件获取bean实例
     */
    @Test
    void testAnnotationConfig2(){
        //创建IOC容器
        AnnotationConfigApplicationContext applicationContext = new AnnotationConfigApplicationContext(MyConfig.class);
        //getBeanNamesForType方法按照类来获取该类的Bean的id
        String[] names = applicationContext.getBeanNamesForType(Person.class);
        //打印
        for (String name:names){
            System.out.println(name);
        }
        //获取具体的Bean
        Map<String, Person> beans = applicationContext.getBeansOfType(Person.class);
        System.out.println(beans);
    }

}

```
**打印输出：**

```java
windows
{windows=Person{name='windows之父', age=48}}
```

若我们改变运行环境，加上参数：-Dos.name=Linux
![在这里插入图片描述](https://img-blog.csdnimg.cn/20200401134456722.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zOTI5NjI4Mw==,size_16,color_FFFFFF,t_70#pic_center)
再次运行打印输出：

```java
linux
{linux=Person{name='linux之父', age=55}}
```

# 总结
1、@Conditional注解的作用是按照一定的判定条件来控制Bean的创建
2、@Conditional可以加在一个配置类上，表示该类下面的全部的@Bean都会启用配置；也可以加在一个@Bean的方法上面，只对该方法有效
3、判定条件类XXXCondition类要实现Condition接口，并重写matches方法，在该方法里面写自己的判定逻辑
(String), https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fwx1.sinaimg.cn%2Fbmiddle%2Fceeb653ely1fkcffnqwdyj208c08cgll.jpg&refer=http%3A%2F%2Fwx1.sinaimg.cn&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1630029852&t=456a692fd1a717b65241d6ef10df492f(String), 原创(String), 在学习SpringBoot的时候我们会在各种自动配置类中看到大量使用了@Conditional注解，这篇文章主要简单说下@Conditional注解的使用方法。(String), 2593(Integer), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2020-04-08 17:12:44.0(Timestamp), 2021-07-28 10:21:59.155(Timestamp), 8(Integer)
2021-07-28 10:22:08.224 DEBUG 10696 --- [http-nio-8080-exec-1] b.l.b.m.B.updateByPrimaryKeySelective    : <==    Updates: 1
2021-07-28 10:22:08.225  INFO 10696 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 更新redis中AllBlog的博客标题为：条件注解@Conditional的views为：2593
2021-07-28 10:22:08.256 DEBUG 10696 --- [http-nio-8080-exec-1] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 10:22:08.256 DEBUG 10696 --- [http-nio-8080-exec-1] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 8(Integer)
2021-07-28 10:22:08.257 DEBUG 10696 --- [http-nio-8080-exec-1] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 10:22:08.257 DEBUG 10696 --- [http-nio-8080-exec-1] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 10:22:08.257 DEBUG 10696 --- [http-nio-8080-exec-1] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 1(Integer)
2021-07-28 10:22:08.258 DEBUG 10696 --- [http-nio-8080-exec-1] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 10:22:08.591  INFO 10696 --- [http-nio-8080-exec-5] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:22:08.707 DEBUG 10696 --- [http-nio-8080-exec-8] b.l.b.m.CommentMapper.selectByExample    : ==>  Preparing: SELECT comment_id,blog_id,nick_name,email,content,avatar,create_time,parent_comment_id FROM comment WHERE ( ( blog_id = ? ) ) order by comment_id desc 
2021-07-28 10:22:08.707 DEBUG 10696 --- [http-nio-8080-exec-8] b.l.b.m.CommentMapper.selectByExample    : ==> Parameters: 8(Integer)
2021-07-28 10:22:08.708 DEBUG 10696 --- [http-nio-8080-exec-8] b.l.b.m.CommentMapper.selectByExample    : <==      Total: 0
2021-07-28 10:22:40.089  INFO 10696 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , false, admin]}
2021-07-28 10:22:40.090 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 10:22:40.090 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 10:22:40.091 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 10:22:40.092 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 10:22:40.092 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 10:22:40.093 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 10:22:40.094 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 order by update_time desc 
2021-07-28 10:22:40.094 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 
2021-07-28 10:22:40.095 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:22:40.095 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:22:40.095 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:22:40.098 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:22:40.099 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:22:40.099 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:22:40.100 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:22:40.100 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:22:40.100 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:22:40.102 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:22:40.102 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 10:22:40.103 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:22:40.103 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:22:40.104 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 10:22:40.105 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:22:40.105 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:22:40.106 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 10:22:40.107 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:22:40.107 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:22:40.107 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 10:22:40.108 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:22:40.109 DEBUG 10696 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 10
2021-07-28 10:22:40.110  INFO 10696 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:22:40.120 ERROR 10696 --- [http-nio-8080-exec-2] b.l.b.h.ControllerExceptionHandler       : Request URL : http://localhost:8080/admin/blogs/search, Exception : java.util.ArrayList cannot be cast to com.github.pagehelper.Page
2021-07-28 10:22:40.120  WARN 10696 --- [http-nio-8080-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page]
2021-07-28 10:23:48.057  INFO 10248 --- [restartedMain] black.lyg.blog.BlogApplication           : Starting BlogApplication on Administraror with PID 10248 (D:\Desktop\blog\blog-master\target\classes started by Administrator in D:\Desktop\blog\blog-master)
2021-07-28 10:23:48.073 DEBUG 10248 --- [restartedMain] black.lyg.blog.BlogApplication           : Running with Spring Boot v2.2.6.RELEASE, Spring v5.2.5.RELEASE
2021-07-28 10:23:48.073  INFO 10248 --- [restartedMain] black.lyg.blog.BlogApplication           : The following profiles are active: dev
2021-07-28 10:23:48.116  INFO 10248 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-07-28 10:23:48.116  INFO 10248 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-07-28 10:23:48.651  INFO 10248 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-28 10:23:48.651  INFO 10248 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-28 10:23:48.682  INFO 10248 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 17ms. Found 0 Redis repository interfaces.
2021-07-28 10:23:48.778  WARN 10248 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[black.lyg.blog]' package. Please check your configuration.
2021-07-28 10:23:49.297  INFO 10248 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-07-28 10:23:49.297  INFO 10248 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-28 10:23:49.297  INFO 10248 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-28 10:23:49.313  INFO 10248 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : An older version [1.2.14] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.23]
2021-07-28 10:23:49.313  INFO 10248 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.14] using APR version [1.6.2].
2021-07-28 10:23:49.313  INFO 10248 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-07-28 10:23:49.313  INFO 10248 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-07-28 10:23:50.321  INFO 10248 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.0.2l  25 May 2017]
2021-07-28 10:23:50.431  INFO 10248 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-28 10:23:50.431  INFO 10248 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2315 ms
2021-07-28 10:23:50.479  INFO 10248 --- [restartedMain] o.s.boot.web.servlet.RegistrationBean    : Filter webStatFilter was not registered (possibly already registered?)
2021-07-28 10:23:51.430  INFO 10248 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-28 10:23:51.493  INFO 10248 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-07-28 10:23:51.950  INFO 10248 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-07-28 10:23:51.997  INFO 10248 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-07-28 10:23:51.997  INFO 10248 --- [restartedMain] black.lyg.blog.BlogApplication           : Started BlogApplication in 4.297 seconds (JVM running for 5.877)
2021-07-28 10:23:52.028  INFO 10248 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-28 10:23:52.974 DEBUG 10248 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc 
2021-07-28 10:23:52.990 DEBUG 10248 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 
2021-07-28 10:23:53.021 DEBUG 10248 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:23:53.021 DEBUG 10248 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:23:53.021 DEBUG 10248 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:23:53.021 DEBUG 10248 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:23:53.021 DEBUG 10248 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:23:53.021 DEBUG 10248 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:23:53.021 DEBUG 10248 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:23:53.021 DEBUG 10248 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:23:53.021 DEBUG 10248 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:23:53.021 DEBUG 10248 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:23:53.021 DEBUG 10248 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 10:23:53.021 DEBUG 10248 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:23:53.037 DEBUG 10248 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:23:53.037 DEBUG 10248 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 10:23:53.037 DEBUG 10248 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:23:53.037 DEBUG 10248 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:23:53.037 DEBUG 10248 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 10:23:53.037 DEBUG 10248 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:23:53.037 DEBUG 10248 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:23:53.037 DEBUG 10248 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 10:23:53.037 DEBUG 10248 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:23:53.037 DEBUG 10248 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 10
2021-07-28 10:23:53.132  INFO 10248 --- [restartedMain] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2021-07-28 10:23:53.132  INFO 10248 --- [restartedMain] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2021-07-28 10:23:55.276  INFO 10248 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：条件注解@Conditional
2021-07-28 10:23:55.276  INFO 10248 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：随笔
2021-07-28 10:23:55.276  INFO 10248 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java常见关键字final、static、super、abstract、this
2021-07-28 10:23:55.276  INFO 10248 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：挖掘机技术哪家强
2021-07-28 10:23:55.276  INFO 10248 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：山东菏泽曹县流弊六六六，卧底宝贝儿
2021-07-28 10:23:55.276  INFO 10248 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：欢迎使用 Markdown在线编辑器 MdEditor
2021-07-28 10:23:55.293  INFO 10248 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java中 equals() 和 hashCode()的关系
2021-07-28 10:23:55.293  INFO 10248 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（二）：Hash
2021-07-28 10:23:55.293  INFO 10248 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（一）：String
2021-07-28 10:23:55.293  INFO 10248 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java合并两个int数组
2021-07-28 10:23:55.293  INFO 10248 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 初始化redis中blogCount的数量为：10
2021-07-28 10:24:07.015  INFO 10248 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-28 10:24:07.015  INFO 10248 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-28 10:24:07.024  INFO 10248 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 9 ms
2021-07-28 10:24:07.048  INFO 10248 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/logout', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.logout', args=[org.apache.catalina.session.StandardSessionFacade@72d40d1e]}
2021-07-28 10:24:07.051  INFO 10248 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:24:07.051  INFO 10248 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : redirect:admin 
2021-07-28 10:24:07.081  INFO 10248 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.loginPage', args=[]}
2021-07-28 10:24:07.081  INFO 10248 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:24:07.081  INFO 10248 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : result : admin/login 
2021-07-28 10:24:07.480 ERROR 10248 --- [http-nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: Cannot call sendError() after the response has been committed] with root cause

java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:472) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at com.alibaba.druid.support.http.WebStatFilter$StatHttpServletResponseWrapper.sendError(WebStatFilter.java:343) ~[druid-1.1.16.jar:1.1.16]
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:488) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:53) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124) ~[druid-1.1.16.jar:1.1.16]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_221]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_221]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_221]

2021-07-28 10:24:07.487 ERROR 10248 --- [http-nio-8080-exec-2] s.e.ErrorMvcAutoConfiguration$StaticView : Cannot render error page for request [/admin/admin] and exception [Cannot call sendError() after the response has been committed] as the response has already been committed. As a result, the response may have the wrong status code.
2021-07-28 10:24:12.765  INFO 10248 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.login', args=[admin, lyg0918, org.apache.catalina.session.StandardSessionFacade@72d40d1e, {}]}
2021-07-28 10:24:12.766 DEBUG 10248 --- [http-nio-8080-exec-3] .l.b.m.U.selectUserNameByNameAndPassWord : ==>  Preparing: select * from user where username = ? and password = ? 
2021-07-28 10:24:12.767 DEBUG 10248 --- [http-nio-8080-exec-3] .l.b.m.U.selectUserNameByNameAndPassWord : ==> Parameters: admin(String), 89446CF944BBA2485A8562075A0E0BB7(String)
2021-07-28 10:24:12.768 DEBUG 10248 --- [http-nio-8080-exec-3] .l.b.m.U.selectUserNameByNameAndPassWord : <==      Total: 1
2021-07-28 10:24:12.769  INFO 10248 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:24:12.769  INFO 10248 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : result : admin/index 
2021-07-28 10:24:13.079  INFO 10248 --- [http-nio-8080-exec-9] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:24:16.310  INFO 10248 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 10:24:16.330 DEBUG 10248 --- [http-nio-8080-exec-4] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 10:24:16.330 DEBUG 10248 --- [http-nio-8080-exec-4] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 10:24:16.331 DEBUG 10248 --- [http-nio-8080-exec-4] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 10:24:16.332 DEBUG 10248 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 10:24:16.333 DEBUG 10248 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 10:24:16.334 DEBUG 10248 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 10:24:16.335 DEBUG 10248 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 10:24:16.335 DEBUG 10248 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 10:24:16.338 DEBUG 10248 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:24:16.338 DEBUG 10248 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:24:16.339 DEBUG 10248 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:24:16.339 DEBUG 10248 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:24:16.339 DEBUG 10248 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:24:16.341 DEBUG 10248 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:24:16.342 DEBUG 10248 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:24:16.343 DEBUG 10248 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:24:16.344 DEBUG 10248 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:24:16.345 DEBUG 10248 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:24:16.345 DEBUG 10248 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 10:24:16.347 DEBUG 10248 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:24:16.347 DEBUG 10248 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 8
2021-07-28 10:24:16.361 DEBUG 10248 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 10:24:16.361 DEBUG 10248 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 10:24:16.362 DEBUG 10248 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 10:24:16.362  INFO 10248 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:24:16.362  INFO 10248 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 10:24:16.629  INFO 10248 --- [http-nio-8080-exec-6] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:24:20.295  INFO 10248 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , false, admin]}
2021-07-28 10:24:20.296 DEBUG 10248 --- [http-nio-8080-exec-8] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 10:24:20.296 DEBUG 10248 --- [http-nio-8080-exec-8] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 10:24:20.298 DEBUG 10248 --- [http-nio-8080-exec-8] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 10:24:20.298 DEBUG 10248 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 10:24:20.298 DEBUG 10248 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 10:24:20.300 DEBUG 10248 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 10:24:20.312 DEBUG 10248 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 order by update_time desc 
2021-07-28 10:24:20.312 DEBUG 10248 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 
2021-07-28 10:24:20.315 DEBUG 10248 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:24:20.315 DEBUG 10248 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:24:20.316 DEBUG 10248 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:24:20.316 DEBUG 10248 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:24:20.316 DEBUG 10248 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:24:20.318 DEBUG 10248 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:24:20.318 DEBUG 10248 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:24:20.318 DEBUG 10248 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:24:20.319 DEBUG 10248 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:24:20.320 DEBUG 10248 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:24:20.320 DEBUG 10248 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 10:24:20.321 DEBUG 10248 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:24:20.321 DEBUG 10248 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:24:20.321 DEBUG 10248 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 10:24:20.322 DEBUG 10248 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:24:20.322 DEBUG 10248 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:24:20.322 DEBUG 10248 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 10:24:20.324 DEBUG 10248 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:24:20.325 DEBUG 10248 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:24:20.325 DEBUG 10248 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 10:24:20.326 DEBUG 10248 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:24:20.327 DEBUG 10248 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 10
2021-07-28 10:24:20.327  INFO 10248 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:24:20.328 ERROR 10248 --- [http-nio-8080-exec-8] b.l.b.h.ControllerExceptionHandler       : Request URL : http://localhost:8080/admin/blogs/search, Exception : java.util.ArrayList cannot be cast to com.github.pagehelper.Page
2021-07-28 10:24:20.329  WARN 10248 --- [http-nio-8080-exec-8] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page]
2021-07-28 10:25:14.047  INFO 10248 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 10:25:14.048 DEBUG 10248 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 10:25:14.049 DEBUG 10248 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 10:25:14.050 DEBUG 10248 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 10:25:14.051 DEBUG 10248 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 10:25:14.051 DEBUG 10248 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 10:25:14.053 DEBUG 10248 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 10:25:14.053 DEBUG 10248 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 10:25:14.053 DEBUG 10248 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 10:25:14.056 DEBUG 10248 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:25:14.056 DEBUG 10248 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:25:14.057 DEBUG 10248 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:25:14.058 DEBUG 10248 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:25:14.058 DEBUG 10248 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:25:14.059 DEBUG 10248 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:25:14.060 DEBUG 10248 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:25:14.060 DEBUG 10248 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:25:14.061 DEBUG 10248 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:25:14.062 DEBUG 10248 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:25:14.062 DEBUG 10248 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 16(String)
2021-07-28 10:25:14.063 DEBUG 10248 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:25:14.064 DEBUG 10248 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 8
2021-07-28 10:25:14.064 DEBUG 10248 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 10:25:14.064 DEBUG 10248 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 10:25:14.065 DEBUG 10248 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 10:25:14.066  INFO 10248 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:25:14.066  INFO 10248 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 10:25:14.347  INFO 10248 --- [http-nio-8080-exec-10] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:25:17.032  INFO 10248 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/24/delete', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.deleteBlog', args=[24, {}]}
2021-07-28 10:25:17.039 DEBUG 10248 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.selectByPrimaryKey    : ==>  Preparing: SELECT blog_id,type_id,user_id,title,content,first_picture,flag,description,views,appreciation,share_statement,comment,publish,recommend,create_time,update_time FROM blog WHERE blog_id = ? 
2021-07-28 10:25:17.040 DEBUG 10248 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.selectByPrimaryKey    : ==> Parameters: 24(Integer)
2021-07-28 10:25:17.041 DEBUG 10248 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.selectByPrimaryKey    : <==      Total: 1
2021-07-28 10:25:17.052 DEBUG 10248 --- [http-nio-8080-exec-1] b.l.b.m.BlogTagMapper.deleteByExample    : ==>  Preparing: DELETE FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 10:25:17.052 DEBUG 10248 --- [http-nio-8080-exec-1] b.l.b.m.BlogTagMapper.deleteByExample    : ==> Parameters: 24(Integer)
2021-07-28 10:25:17.053 DEBUG 10248 --- [http-nio-8080-exec-1] b.l.b.m.BlogTagMapper.deleteByExample    : <==    Updates: 2
2021-07-28 10:25:17.054 DEBUG 10248 --- [http-nio-8080-exec-1] b.l.b.m.CommentMapper.deleteByExample    : ==>  Preparing: DELETE FROM comment WHERE ( ( blog_id = ? ) ) 
2021-07-28 10:25:17.054 DEBUG 10248 --- [http-nio-8080-exec-1] b.l.b.m.CommentMapper.deleteByExample    : ==> Parameters: 24(Integer)
2021-07-28 10:25:17.055 DEBUG 10248 --- [http-nio-8080-exec-1] b.l.b.m.CommentMapper.deleteByExample    : <==    Updates: 0
2021-07-28 10:25:17.055 DEBUG 10248 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.deleteByPrimaryKey    : ==>  Preparing: DELETE FROM blog WHERE blog_id = ? 
2021-07-28 10:25:17.055 DEBUG 10248 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.deleteByPrimaryKey    : ==> Parameters: 24(Integer)
2021-07-28 10:25:17.056 DEBUG 10248 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.deleteByPrimaryKey    : <==    Updates: 1
2021-07-28 10:25:17.058  INFO 10248 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 更新redis中BlogCount的数值,变化为：-1
2021-07-28 10:25:17.061  INFO 10248 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 从redis中获取到typeTops的数据：TypeTops(typeId=16, name=美食, blogNumber=1)
2021-07-28 10:25:17.063  INFO 10248 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 更新redis中BlogTypes中相关的数据TypeTops(typeId=16, name=美食, blogNumber=0)
2021-07-28 10:25:17.065  INFO 10248 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 删除redis中key为blogtags的hash数据类型
2021-07-28 10:25:17.066  INFO 10248 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 删除redis中TheLatestBlog中有关该博客的数据，标题为山东菏泽曹县流弊六六六，卧底宝贝儿
2021-07-28 10:25:17.067  INFO 10248 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 删除redis中AllBlog中有关该博客的数据，标题为山东菏泽曹县流弊六六六，卧底宝贝儿
2021-07-28 10:25:17.070  INFO 10248 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:25:17.070  INFO 10248 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : redirect:/admin/blogs 
2021-07-28 10:42:10.933  INFO 8656 --- [restartedMain] black.lyg.blog.BlogApplication           : Starting BlogApplication on Administraror with PID 8656 (D:\Desktop\blog\blog-master\target\classes started by Administrator in D:\Desktop\blog\blog-master)
2021-07-28 10:42:10.935 DEBUG 8656 --- [restartedMain] black.lyg.blog.BlogApplication           : Running with Spring Boot v2.2.6.RELEASE, Spring v5.2.5.RELEASE
2021-07-28 10:42:10.935  INFO 8656 --- [restartedMain] black.lyg.blog.BlogApplication           : The following profiles are active: dev
2021-07-28 10:42:10.968  INFO 8656 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-07-28 10:42:10.968  INFO 8656 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-07-28 10:42:11.481  INFO 8656 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-28 10:42:11.482  INFO 8656 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-28 10:42:11.506  INFO 8656 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15ms. Found 0 Redis repository interfaces.
2021-07-28 10:42:11.590  WARN 8656 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[black.lyg.blog]' package. Please check your configuration.
2021-07-28 10:42:12.065  INFO 8656 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-07-28 10:42:12.070  INFO 8656 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-28 10:42:12.071  INFO 8656 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-28 10:42:12.072  INFO 8656 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : An older version [1.2.14] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.23]
2021-07-28 10:42:12.072  INFO 8656 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.14] using APR version [1.6.2].
2021-07-28 10:42:12.073  INFO 8656 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-07-28 10:42:12.073  INFO 8656 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-07-28 10:42:13.098  INFO 8656 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.0.2l  25 May 2017]
2021-07-28 10:42:13.201  INFO 8656 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-28 10:42:13.201  INFO 8656 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2233 ms
2021-07-28 10:42:13.235  INFO 8656 --- [restartedMain] o.s.boot.web.servlet.RegistrationBean    : Filter webStatFilter was not registered (possibly already registered?)
2021-07-28 10:42:14.115  INFO 8656 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-28 10:42:14.199  INFO 8656 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-07-28 10:42:14.643  INFO 8656 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-07-28 10:42:14.682  INFO 8656 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-07-28 10:42:14.684  INFO 8656 --- [restartedMain] black.lyg.blog.BlogApplication           : Started BlogApplication in 4.057 seconds (JVM running for 5.379)
2021-07-28 10:42:14.716  INFO 8656 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-28 10:42:15.780 DEBUG 8656 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc 
2021-07-28 10:42:15.796 DEBUG 8656 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 
2021-07-28 10:42:15.819 DEBUG 8656 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:42:15.820 DEBUG 8656 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:42:15.821 DEBUG 8656 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:42:15.823 DEBUG 8656 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:42:15.823 DEBUG 8656 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:42:15.824 DEBUG 8656 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:42:15.825 DEBUG 8656 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:42:15.825 DEBUG 8656 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:42:15.826 DEBUG 8656 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:42:15.827 DEBUG 8656 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:42:15.827 DEBUG 8656 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 10:42:15.828 DEBUG 8656 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:42:15.829 DEBUG 8656 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:42:15.829 DEBUG 8656 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 10:42:15.830 DEBUG 8656 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:42:15.830 DEBUG 8656 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:42:15.830 DEBUG 8656 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 10:42:15.831 DEBUG 8656 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:42:15.833 DEBUG 8656 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 9
2021-07-28 10:42:15.924  INFO 8656 --- [restartedMain] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2021-07-28 10:42:15.925  INFO 8656 --- [restartedMain] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2021-07-28 10:42:17.558  INFO 8656 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：条件注解@Conditional
2021-07-28 10:42:17.559  INFO 8656 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：随笔
2021-07-28 10:42:17.560  INFO 8656 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java常见关键字final、static、super、abstract、this
2021-07-28 10:42:17.562  INFO 8656 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：挖掘机技术哪家强
2021-07-28 10:42:17.564  INFO 8656 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：欢迎使用 Markdown在线编辑器 MdEditor
2021-07-28 10:42:17.565  INFO 8656 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java中 equals() 和 hashCode()的关系
2021-07-28 10:42:17.567  INFO 8656 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（二）：Hash
2021-07-28 10:42:17.567  INFO 8656 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（一）：String
2021-07-28 10:42:17.568  INFO 8656 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java合并两个int数组
2021-07-28 10:42:17.570  INFO 8656 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 初始化redis中blogCount的数量为：9
2021-07-28 10:42:21.809  INFO 8656 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-28 10:42:21.809  INFO 8656 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-28 10:42:21.817  INFO 8656 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 8 ms
2021-07-28 10:42:21.844  INFO 8656 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.loginPage', args=[]}
2021-07-28 10:42:21.848  INFO 8656 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:42:21.848  INFO 8656 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : admin/login 
2021-07-28 10:42:22.234 ERROR 8656 --- [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: Cannot call sendError() after the response has been committed] with root cause

java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:472) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at com.alibaba.druid.support.http.WebStatFilter$StatHttpServletResponseWrapper.sendError(WebStatFilter.java:343) ~[druid-1.1.16.jar:1.1.16]
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:488) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:53) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124) ~[druid-1.1.16.jar:1.1.16]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_221]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_221]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_221]

2021-07-28 10:42:22.243 ERROR 8656 --- [http-nio-8080-exec-1] s.e.ErrorMvcAutoConfiguration$StaticView : Cannot render error page for request [/admin/blogs] and exception [Cannot call sendError() after the response has been committed] as the response has already been committed. As a result, the response may have the wrong status code.
2021-07-28 10:42:27.776  INFO 8656 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.login', args=[admin, lyg0918, org.apache.catalina.session.StandardSessionFacade@6f3f326d, {}]}
2021-07-28 10:42:27.777 DEBUG 8656 --- [http-nio-8080-exec-3] .l.b.m.U.selectUserNameByNameAndPassWord : ==>  Preparing: select * from user where username = ? and password = ? 
2021-07-28 10:42:27.777 DEBUG 8656 --- [http-nio-8080-exec-3] .l.b.m.U.selectUserNameByNameAndPassWord : ==> Parameters: admin(String), 89446CF944BBA2485A8562075A0E0BB7(String)
2021-07-28 10:42:27.779 DEBUG 8656 --- [http-nio-8080-exec-3] .l.b.m.U.selectUserNameByNameAndPassWord : <==      Total: 1
2021-07-28 10:42:27.779  INFO 8656 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:42:27.779  INFO 8656 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : result : admin/index 
2021-07-28 10:42:28.092  INFO 8656 --- [http-nio-8080-exec-4] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:42:30.376  INFO 8656 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 10:42:30.397 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 10:42:30.397 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 10:42:30.398 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 10:42:30.399 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 10:42:30.400 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 10:42:30.401 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 10:42:30.401 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 10:42:30.401 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 10:42:30.404 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:42:30.405 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:42:30.406 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:42:30.406 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:42:30.406 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:42:30.408 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:42:30.409 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:42:30.409 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:42:30.410 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:42:30.411 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 10:42:30.424 DEBUG 8656 --- [http-nio-8080-exec-2] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 10:42:30.425 DEBUG 8656 --- [http-nio-8080-exec-2] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 10:42:30.426 DEBUG 8656 --- [http-nio-8080-exec-2] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 10:42:30.426  INFO 8656 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:42:30.426  INFO 8656 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 10:42:30.693  INFO 8656 --- [http-nio-8080-exec-5] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:42:33.065  INFO 8656 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/addPage', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.addPage', args=[{}]}
2021-07-28 10:42:33.065 DEBUG 8656 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 10:42:33.066 DEBUG 8656 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 10:42:33.067 DEBUG 8656 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 10:42:33.069 DEBUG 8656 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TagMapper.selectAll    : ==>  Preparing: SELECT tag_id,name FROM tag 
2021-07-28 10:42:33.069 DEBUG 8656 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TagMapper.selectAll    : ==> Parameters: 
2021-07-28 10:42:33.071 DEBUG 8656 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TagMapper.selectAll    : <==      Total: 7
2021-07-28 10:42:33.071  INFO 8656 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:42:33.071  INFO 8656 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : result : admin/blogs-input 
2021-07-28 10:42:33.328  INFO 8656 --- [http-nio-8080-exec-8] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:43:45.412  INFO 8656 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/add', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogAdd', args=[Blog(blogId=null, typeId=6, userId=null, title=好好学习，天天向上, content=## 666

```java, firstPicture=https://img0.baidu.com/it/u=2970102104,2596451141&fm=26&fmt=auto&gp=0.jpg, flag=原创, description=, views=null, appreciation=null, shareStatement=null, comment=null, publish=false, recommend=null, createTime=null, updateTime=null, type=null, user=null, tags=null), org.apache.catalina.session.StandardSessionFacade@6f3f326d, {}, 24,20,21]}
2021-07-28 10:43:45.417 DEBUG 8656 --- [http-nio-8080-exec-1] b.l.b.m.TypeMapper.selectByPrimaryKey    : ==>  Preparing: SELECT type_id,name FROM type WHERE type_id = ? 
2021-07-28 10:43:45.417 DEBUG 8656 --- [http-nio-8080-exec-1] b.l.b.m.TypeMapper.selectByPrimaryKey    : ==> Parameters: 6(Integer)
2021-07-28 10:43:45.418 DEBUG 8656 --- [http-nio-8080-exec-1] b.l.b.m.TypeMapper.selectByPrimaryKey    : <==      Total: 1
2021-07-28 10:43:45.419 DEBUG 8656 --- [http-nio-8080-exec-1] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 10:43:45.419 DEBUG 8656 --- [http-nio-8080-exec-1] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 24(String)
2021-07-28 10:43:45.419 DEBUG 8656 --- [http-nio-8080-exec-1] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 10:43:45.420 DEBUG 8656 --- [http-nio-8080-exec-1] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 10:43:45.421 DEBUG 8656 --- [http-nio-8080-exec-1] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 20(String)
2021-07-28 10:43:45.421 DEBUG 8656 --- [http-nio-8080-exec-1] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 10:43:45.422 DEBUG 8656 --- [http-nio-8080-exec-1] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 10:43:45.422 DEBUG 8656 --- [http-nio-8080-exec-1] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 21(String)
2021-07-28 10:43:45.423 DEBUG 8656 --- [http-nio-8080-exec-1] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 10:43:45.443 DEBUG 8656 --- [http-nio-8080-exec-1] black.lyg.blog.mapper.BlogMapper.insert  : ==>  Preparing: INSERT INTO blog ( blog_id,type_id,user_id,title,content,first_picture,flag,description,views,appreciation,share_statement,comment,publish,recommend,create_time,update_time ) VALUES( ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,? ) 
2021-07-28 10:43:45.446 DEBUG 8656 --- [http-nio-8080-exec-1] black.lyg.blog.mapper.BlogMapper.insert  : ==> Parameters: null, 6(Integer), 1(Integer), 好好学习，天天向上(String), ## 666

```java(String), https://img0.baidu.com/it/u=2970102104,2596451141&fm=26&fmt=auto&gp=0.jpg(String), 原创(String), (String), 0(Integer), false(Boolean), false(Boolean), false(Boolean), false(Boolean), false(Boolean), 2021-07-28 10:43:45.429(Timestamp), 2021-07-28 10:43:45.429(Timestamp)
2021-07-28 10:43:45.448 DEBUG 8656 --- [http-nio-8080-exec-1] black.lyg.blog.mapper.BlogMapper.insert  : <==    Updates: 1
2021-07-28 10:43:45.450 DEBUG 8656 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.insert!selectKey      : ==>  Executing: SELECT LAST_INSERT_ID() 
2021-07-28 10:43:45.451 DEBUG 8656 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.insert!selectKey      : <==      Total: 1
2021-07-28 10:43:45.453  INFO 8656 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 更新redis中BlogCount的数值,变化为：+1
2021-07-28 10:43:45.454  INFO 8656 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 更新redis中BlogTypes中相关的数据:TypeTops(typeId=6, name=学习日志, blogNumber=5)
2021-07-28 10:43:45.456  INFO 8656 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 更新redis中BlogTypes中相关的数据TypeTops(typeId=6, name=学习日志, blogNumber=6)
2021-07-28 10:43:45.457 DEBUG 8656 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.BlogTagMapper.insert   : ==>  Preparing: INSERT INTO blog_tag ( blog_tag_id,blog_id,tag_id ) VALUES( ?,?,? ) 
2021-07-28 10:43:45.458 DEBUG 8656 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.BlogTagMapper.insert   : ==> Parameters: null, 27(Integer), 24(Integer)
2021-07-28 10:43:45.460 DEBUG 8656 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.BlogTagMapper.insert   : <==    Updates: 1
2021-07-28 10:43:45.460 DEBUG 8656 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.BlogTagMapper.insert   : ==>  Preparing: INSERT INTO blog_tag ( blog_tag_id,blog_id,tag_id ) VALUES( ?,?,? ) 
2021-07-28 10:43:45.461 DEBUG 8656 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.BlogTagMapper.insert   : ==> Parameters: null, 27(Integer), 20(Integer)
2021-07-28 10:43:45.462 DEBUG 8656 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.BlogTagMapper.insert   : <==    Updates: 1
2021-07-28 10:43:45.462 DEBUG 8656 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.BlogTagMapper.insert   : ==>  Preparing: INSERT INTO blog_tag ( blog_tag_id,blog_id,tag_id ) VALUES( ?,?,? ) 
2021-07-28 10:43:45.462 DEBUG 8656 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.BlogTagMapper.insert   : ==> Parameters: null, 27(Integer), 21(Integer)
2021-07-28 10:43:45.463 DEBUG 8656 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.BlogTagMapper.insert   : <==    Updates: 1
2021-07-28 10:43:45.465  INFO 8656 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 删除redis中key为blogtags的hash数据类型
2021-07-28 10:43:45.465 DEBUG 8656 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.selectByPrimaryKey    : ==>  Preparing: SELECT blog_id,type_id,user_id,title,content,first_picture,flag,description,views,appreciation,share_statement,comment,publish,recommend,create_time,update_time FROM blog WHERE blog_id = ? 
2021-07-28 10:43:45.465 DEBUG 8656 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.selectByPrimaryKey    : ==> Parameters: 27(Integer)
2021-07-28 10:43:45.467 DEBUG 8656 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.selectByPrimaryKey    : <==      Total: 1
2021-07-28 10:43:45.470  INFO 8656 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 更新redis中TheLatestBlog的数据，标题为好好学习，天天向上
2021-07-28 10:43:45.472  INFO 8656 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 更新redis中AllBlog的数据，标题为好好学习，天天向上
2021-07-28 10:43:45.475  INFO 8656 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:43:45.475  INFO 8656 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : redirect:/admin/blogs/admin 
2021-07-28 10:43:45.494  INFO 8656 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{message=操作成功}, admin, 1]}
2021-07-28 10:43:45.495 DEBUG 8656 --- [http-nio-8080-exec-3] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 10:43:45.495 DEBUG 8656 --- [http-nio-8080-exec-3] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 10:43:45.496 DEBUG 8656 --- [http-nio-8080-exec-3] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 10:43:45.497 DEBUG 8656 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 10:43:45.497 DEBUG 8656 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 10:43:45.498 DEBUG 8656 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 10:43:45.499 DEBUG 8656 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 10:43:45.499 DEBUG 8656 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 10:43:45.501 DEBUG 8656 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:43:45.502 DEBUG 8656 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:43:45.502 DEBUG 8656 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:43:45.502 DEBUG 8656 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:43:45.503 DEBUG 8656 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:43:45.504 DEBUG 8656 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:43:45.504 DEBUG 8656 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:43:45.505 DEBUG 8656 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:43:45.505 DEBUG 8656 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:43:45.506 DEBUG 8656 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 8
2021-07-28 10:43:45.506 DEBUG 8656 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 10:43:45.506 DEBUG 8656 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 10:43:45.507 DEBUG 8656 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 10:43:45.508  INFO 8656 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:43:45.508  INFO 8656 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 10:43:45.789  INFO 8656 --- [http-nio-8080-exec-4] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:43:50.513 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==>  Preparing: SELECT count(0) FROM blog 
2021-07-28 10:43:50.513 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==> Parameters: 
2021-07-28 10:43:50.515 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.findBlogAll_COUNT     : <==      Total: 1
2021-07-28 10:43:50.515 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc LIMIT ? 
2021-07-28 10:43:50.516 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 5(Integer)
2021-07-28 10:43:50.518 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:43:50.519 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:43:50.520 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:43:50.520 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:43:50.521 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:43:50.522 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:43:50.522 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:43:50.523 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:43:50.524 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:43:50.525 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:43:50.525 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 10:43:50.527 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:43:50.527 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:43:50.527 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 10:43:50.528 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:43:50.529 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:43:50.529 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 10:43:50.529 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:43:50.530 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 5
2021-07-28 10:43:50.533  INFO 8656 --- [http-nio-8080-exec-2] black.lyg.blog.service.TagService        : 从redis中获取数据：[]
2021-07-28 10:43:50.533 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.TagMapper.findSeveralTopTags     : ==>  Preparing: select distinct t.tag_id,t.name ,count(*) as number from tag t ,blog_tag bt where t.tag_id = bt.tag_id group by t.tag_id, t.name order by number desc limit ? 
2021-07-28 10:43:50.533 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.TagMapper.findSeveralTopTags     : ==> Parameters: 10(Integer)
2021-07-28 10:43:50.534 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.TagMapper.findSeveralTopTags     : <==      Total: 7
2021-07-28 10:43:50.535  INFO 8656 --- [http-nio-8080-exec-2] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=21, name=Redis, BlogNumber=5)
2021-07-28 10:43:50.537  INFO 8656 --- [http-nio-8080-exec-2] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=22, name=Java, BlogNumber=4)
2021-07-28 10:43:50.538  INFO 8656 --- [http-nio-8080-exec-2] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=20, name=设计模式, BlogNumber=3)
2021-07-28 10:43:50.539  INFO 8656 --- [http-nio-8080-exec-2] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=24, name=测试, BlogNumber=3)
2021-07-28 10:43:50.540  INFO 8656 --- [http-nio-8080-exec-2] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=1, name=Spring, BlogNumber=2)
2021-07-28 10:43:50.540  INFO 8656 --- [http-nio-8080-exec-2] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=2, name=Mybatis, BlogNumber=1)
2021-07-28 10:43:50.541  INFO 8656 --- [http-nio-8080-exec-2] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=23, name=MySQL, BlogNumber=1)
2021-07-28 10:43:50.542  INFO 8656 --- [http-nio-8080-exec-2] black.lyg.blog.service.TagService        : 从Mysql中查找到由标签显示博客的数据：[TagTops(tagId=21, name=Redis, BlogNumber=5), TagTops(tagId=22, name=Java, BlogNumber=4), TagTops(tagId=20, name=设计模式, BlogNumber=3), TagTops(tagId=24, name=测试, BlogNumber=3), TagTops(tagId=1, name=Spring, BlogNumber=2), TagTops(tagId=2, name=Mybatis, BlogNumber=1), TagTops(tagId=23, name=MySQL, BlogNumber=1)]
2021-07-28 10:43:50.544  INFO 8656 --- [http-nio-8080-exec-2] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:43:50.844  INFO 8656 --- [http-nio-8080-exec-5] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:43:55.859  INFO 8656 --- [http-nio-8080-exec-7] black.lyg.blog.service.BlogService       : 从redis中获取Blog的数据，标题为好好学习，天天向上
2021-07-28 10:43:55.860 DEBUG 8656 --- [http-nio-8080-exec-7] b.l.b.m.B.updateByPrimaryKeySelective    : ==>  Preparing: UPDATE blog SET type_id = ?,user_id = ?,title = ?,content = ?,first_picture = ?,flag = ?,description = ?,views = ?,appreciation = ?,share_statement = ?,comment = ?,publish = ?,recommend = ?,create_time = ?,update_time = ? WHERE blog_id = ? 
2021-07-28 10:43:55.862 DEBUG 8656 --- [http-nio-8080-exec-7] b.l.b.m.B.updateByPrimaryKeySelective    : ==> Parameters: 6(Integer), 1(Integer), 好好学习，天天向上(String), ## 666

```java(String), https://img0.baidu.com/it/u=2970102104,2596451141&fm=26&fmt=auto&gp=0.jpg(String), 原创(String), (String), 1(Integer), false(Boolean), false(Boolean), false(Boolean), false(Boolean), false(Boolean), 2021-07-28 10:43:45.0(Timestamp), 2021-07-28 10:43:45.429(Timestamp), 27(Integer)
2021-07-28 10:43:55.866 DEBUG 8656 --- [http-nio-8080-exec-7] b.l.b.m.B.updateByPrimaryKeySelective    : <==    Updates: 1
2021-07-28 10:43:55.867  INFO 8656 --- [http-nio-8080-exec-7] black.lyg.blog.service.BlogService       : 更新redis中AllBlog的博客标题为：好好学习，天天向上的views为：1
2021-07-28 10:43:55.905 DEBUG 8656 --- [http-nio-8080-exec-7] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 10:43:55.905 DEBUG 8656 --- [http-nio-8080-exec-7] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 27(Integer)
2021-07-28 10:43:55.906 DEBUG 8656 --- [http-nio-8080-exec-7] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 3
2021-07-28 10:43:55.907 DEBUG 8656 --- [http-nio-8080-exec-7] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 10:43:55.908 DEBUG 8656 --- [http-nio-8080-exec-7] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 24(Integer)
2021-07-28 10:43:55.908 DEBUG 8656 --- [http-nio-8080-exec-7] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 10:43:55.909 DEBUG 8656 --- [http-nio-8080-exec-7] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 10:43:55.909 DEBUG 8656 --- [http-nio-8080-exec-7] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 20(Integer)
2021-07-28 10:43:55.910 DEBUG 8656 --- [http-nio-8080-exec-7] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 10:43:55.910 DEBUG 8656 --- [http-nio-8080-exec-7] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 10:43:55.910 DEBUG 8656 --- [http-nio-8080-exec-7] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 21(Integer)
2021-07-28 10:43:55.911 DEBUG 8656 --- [http-nio-8080-exec-7] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 10:43:56.177  INFO 8656 --- [http-nio-8080-exec-8] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:44:05.282  INFO 8656 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/types', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.TypeController.findAllTypes', args=[{}, 1]}
2021-07-28 10:44:05.286 DEBUG 8656 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectAll_COUNT  : ==>  Preparing: SELECT count(0) FROM type 
2021-07-28 10:44:05.286 DEBUG 8656 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectAll_COUNT  : ==> Parameters: 
2021-07-28 10:44:05.288 DEBUG 8656 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectAll_COUNT  : <==      Total: 1
2021-07-28 10:44:05.289 DEBUG 8656 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type LIMIT ? 
2021-07-28 10:44:05.289 DEBUG 8656 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 10(Integer)
2021-07-28 10:44:05.290 DEBUG 8656 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 10:44:05.291  INFO 8656 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:44:05.291  INFO 8656 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : result : admin/types 
2021-07-28 10:44:05.567  INFO 8656 --- [http-nio-8080-exec-10] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:44:06.520  INFO 8656 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 10:44:06.521 DEBUG 8656 --- [http-nio-8080-exec-3] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 10:44:06.521 DEBUG 8656 --- [http-nio-8080-exec-3] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 10:44:06.522 DEBUG 8656 --- [http-nio-8080-exec-3] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 10:44:06.522 DEBUG 8656 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 10:44:06.522 DEBUG 8656 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 10:44:06.524 DEBUG 8656 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 10:44:06.524 DEBUG 8656 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 10:44:06.524 DEBUG 8656 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 10:44:06.526 DEBUG 8656 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:44:06.526 DEBUG 8656 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:44:06.527 DEBUG 8656 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:44:06.528 DEBUG 8656 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:44:06.528 DEBUG 8656 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:44:06.528 DEBUG 8656 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:44:06.529 DEBUG 8656 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:44:06.529 DEBUG 8656 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:44:06.530 DEBUG 8656 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:44:06.530 DEBUG 8656 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 8
2021-07-28 10:44:06.531 DEBUG 8656 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 10:44:06.531 DEBUG 8656 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 10:44:06.532 DEBUG 8656 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 10:44:06.532  INFO 8656 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:44:06.532  INFO 8656 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 10:44:06.779  INFO 8656 --- [http-nio-8080-exec-4] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:44:09.474  INFO 8656 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/27/delete', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.deleteBlog', args=[27, {}]}
2021-07-28 10:44:09.475 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectBlogByBlogId    : ==>  Preparing: select * from blog where blog_id = ? 
2021-07-28 10:44:09.475 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectBlogByBlogId    : ==> Parameters: 27(String)
2021-07-28 10:44:09.477 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:44:09.477 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:44:09.479 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:44:09.479 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:44:09.480 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:44:09.480 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:44:09.481 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectBlogByBlogId    : <==      Total: 1
2021-07-28 10:44:09.481 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ==>  Preparing: select * from user where user_id = ? 
2021-07-28 10:44:09.481 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ==> Parameters: null(String)
2021-07-28 10:44:09.482 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : <==      Total: 0
2021-07-28 10:44:09.483 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectByPrimaryKey    : ==>  Preparing: SELECT blog_id,type_id,user_id,title,content,first_picture,flag,description,views,appreciation,share_statement,comment,publish,recommend,create_time,update_time FROM blog WHERE blog_id = ? 
2021-07-28 10:44:09.483 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectByPrimaryKey    : ==> Parameters: 27(Integer)
2021-07-28 10:44:09.484 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectByPrimaryKey    : <==      Total: 1
2021-07-28 10:44:09.486 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.BlogTagMapper.deleteByExample    : ==>  Preparing: DELETE FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 10:44:09.486 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.BlogTagMapper.deleteByExample    : ==> Parameters: 27(Integer)
2021-07-28 10:44:09.487 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.BlogTagMapper.deleteByExample    : <==    Updates: 3
2021-07-28 10:44:09.488 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.CommentMapper.deleteByExample    : ==>  Preparing: DELETE FROM comment WHERE ( ( blog_id = ? ) ) 
2021-07-28 10:44:09.488 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.CommentMapper.deleteByExample    : ==> Parameters: 27(Integer)
2021-07-28 10:44:09.489 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.CommentMapper.deleteByExample    : <==    Updates: 0
2021-07-28 10:44:09.489 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.deleteByPrimaryKey    : ==>  Preparing: DELETE FROM blog WHERE blog_id = ? 
2021-07-28 10:44:09.489 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.deleteByPrimaryKey    : ==> Parameters: 27(Integer)
2021-07-28 10:44:09.490 DEBUG 8656 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.deleteByPrimaryKey    : <==    Updates: 1
2021-07-28 10:44:09.491  INFO 8656 --- [http-nio-8080-exec-2] black.lyg.blog.service.BlogService       : 更新redis中BlogCount的数值,变化为：-1
2021-07-28 10:44:09.495  INFO 8656 --- [http-nio-8080-exec-2] black.lyg.blog.service.BlogService       : 从redis中获取到typeTops的数据：TypeTops(typeId=6, name=学习日志, blogNumber=6)
2021-07-28 10:44:09.496  INFO 8656 --- [http-nio-8080-exec-2] black.lyg.blog.service.BlogService       : 更新redis中BlogTypes中相关的数据TypeTops(typeId=6, name=学习日志, blogNumber=5)
2021-07-28 10:44:09.496  INFO 8656 --- [http-nio-8080-exec-2] black.lyg.blog.service.BlogService       : 删除redis中key为blogtags的hash数据类型
2021-07-28 10:44:09.498  INFO 8656 --- [http-nio-8080-exec-2] black.lyg.blog.service.BlogService       : 删除redis中TheLatestBlog中有关该博客的数据，标题为好好学习，天天向上
2021-07-28 10:44:09.498  INFO 8656 --- [http-nio-8080-exec-2] black.lyg.blog.service.BlogService       : 删除redis中AllBlog中有关该博客的数据，标题为好好学习，天天向上
2021-07-28 10:44:09.501  INFO 8656 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:44:09.502 ERROR 8656 --- [http-nio-8080-exec-2] b.l.b.h.ControllerExceptionHandler       : Request URL : http://localhost:8080/admin/blogs/27/delete, Exception : null
2021-07-28 10:44:09.502  WARN 8656 --- [http-nio-8080-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.NullPointerException]
2021-07-28 10:45:37.747  INFO 10776 --- [restartedMain] black.lyg.blog.BlogApplication           : Starting BlogApplication on Administraror with PID 10776 (D:\Desktop\blog\blog-master\target\classes started by Administrator in D:\Desktop\blog\blog-master)
2021-07-28 10:45:37.749 DEBUG 10776 --- [restartedMain] black.lyg.blog.BlogApplication           : Running with Spring Boot v2.2.6.RELEASE, Spring v5.2.5.RELEASE
2021-07-28 10:45:37.749  INFO 10776 --- [restartedMain] black.lyg.blog.BlogApplication           : The following profiles are active: dev
2021-07-28 10:45:37.783  INFO 10776 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-07-28 10:45:37.784  INFO 10776 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-07-28 10:45:38.297  INFO 10776 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-28 10:45:38.299  INFO 10776 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-28 10:45:38.324  INFO 10776 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14ms. Found 0 Redis repository interfaces.
2021-07-28 10:45:38.409  WARN 10776 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[black.lyg.blog]' package. Please check your configuration.
2021-07-28 10:45:38.880  INFO 10776 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-07-28 10:45:38.886  INFO 10776 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-28 10:45:38.886  INFO 10776 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-28 10:45:38.887  INFO 10776 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : An older version [1.2.14] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.23]
2021-07-28 10:45:38.887  INFO 10776 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.14] using APR version [1.6.2].
2021-07-28 10:45:38.887  INFO 10776 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-07-28 10:45:38.887  INFO 10776 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-07-28 10:45:39.903  INFO 10776 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.0.2l  25 May 2017]
2021-07-28 10:45:40.000  INFO 10776 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-28 10:45:40.000  INFO 10776 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2216 ms
2021-07-28 10:45:40.035  INFO 10776 --- [restartedMain] o.s.boot.web.servlet.RegistrationBean    : Filter webStatFilter was not registered (possibly already registered?)
2021-07-28 10:45:40.909  INFO 10776 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-28 10:45:40.976  INFO 10776 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-07-28 10:45:41.400  INFO 10776 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-07-28 10:45:41.437  INFO 10776 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-07-28 10:45:41.438  INFO 10776 --- [restartedMain] black.lyg.blog.BlogApplication           : Started BlogApplication in 3.998 seconds (JVM running for 5.318)
2021-07-28 10:45:41.469  INFO 10776 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-28 10:45:42.406 DEBUG 10776 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc 
2021-07-28 10:45:42.422 DEBUG 10776 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 
2021-07-28 10:45:42.445 DEBUG 10776 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:45:42.446 DEBUG 10776 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:45:42.447 DEBUG 10776 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:45:42.449 DEBUG 10776 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:45:42.449 DEBUG 10776 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:45:42.450 DEBUG 10776 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:45:42.451 DEBUG 10776 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:45:42.451 DEBUG 10776 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:45:42.452 DEBUG 10776 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:45:42.453 DEBUG 10776 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:45:42.453 DEBUG 10776 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 10:45:42.454 DEBUG 10776 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:45:42.455 DEBUG 10776 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:45:42.455 DEBUG 10776 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 10:45:42.456 DEBUG 10776 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:45:42.456 DEBUG 10776 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:45:42.456 DEBUG 10776 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 10:45:42.458 DEBUG 10776 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:45:42.460 DEBUG 10776 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 9
2021-07-28 10:45:42.548  INFO 10776 --- [restartedMain] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2021-07-28 10:45:42.549  INFO 10776 --- [restartedMain] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2021-07-28 10:45:44.185  INFO 10776 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：条件注解@Conditional
2021-07-28 10:45:44.186  INFO 10776 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：随笔
2021-07-28 10:45:44.187  INFO 10776 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java常见关键字final、static、super、abstract、this
2021-07-28 10:45:44.188  INFO 10776 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：挖掘机技术哪家强
2021-07-28 10:45:44.190  INFO 10776 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：欢迎使用 Markdown在线编辑器 MdEditor
2021-07-28 10:45:44.191  INFO 10776 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java中 equals() 和 hashCode()的关系
2021-07-28 10:45:44.192  INFO 10776 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（二）：Hash
2021-07-28 10:45:44.193  INFO 10776 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（一）：String
2021-07-28 10:45:44.194  INFO 10776 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java合并两个int数组
2021-07-28 10:45:44.196  INFO 10776 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 初始化redis中blogCount的数量为：9
2021-07-28 10:45:53.901  INFO 10776 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-28 10:45:53.901  INFO 10776 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-28 10:45:53.909  INFO 10776 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 8 ms
2021-07-28 10:45:53.933  INFO 10776 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.loginPage', args=[]}
2021-07-28 10:45:53.936  INFO 10776 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:45:53.936  INFO 10776 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : admin/login 
2021-07-28 10:45:54.320 ERROR 10776 --- [http-nio-8080-exec-1] b.l.b.h.ControllerExceptionHandler       : Request URL : http://localhost:8080/admin/blogs/27/delete, Exception : Missing URI template variable 'id' for method parameter of type String
2021-07-28 10:45:54.321  WARN 10776 --- [http-nio-8080-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.bind.MissingPathVariableException: Missing URI template variable 'id' for method parameter of type String]
2021-07-28 10:45:59.544  INFO 10776 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.login', args=[admin, lyg0918, org.apache.catalina.session.StandardSessionFacade@c6e7ca4, {}]}
2021-07-28 10:45:59.545 DEBUG 10776 --- [http-nio-8080-exec-2] .l.b.m.U.selectUserNameByNameAndPassWord : ==>  Preparing: select * from user where username = ? and password = ? 
2021-07-28 10:45:59.546 DEBUG 10776 --- [http-nio-8080-exec-2] .l.b.m.U.selectUserNameByNameAndPassWord : ==> Parameters: admin(String), 89446CF944BBA2485A8562075A0E0BB7(String)
2021-07-28 10:45:59.548 DEBUG 10776 --- [http-nio-8080-exec-2] .l.b.m.U.selectUserNameByNameAndPassWord : <==      Total: 1
2021-07-28 10:45:59.548  INFO 10776 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:45:59.549  INFO 10776 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : result : admin/index 
2021-07-28 10:45:59.855  INFO 10776 --- [http-nio-8080-exec-3] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:46:01.295  INFO 10776 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 10:46:01.317 DEBUG 10776 --- [http-nio-8080-exec-4] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 10:46:01.317 DEBUG 10776 --- [http-nio-8080-exec-4] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 10:46:01.318 DEBUG 10776 --- [http-nio-8080-exec-4] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 10:46:01.318 DEBUG 10776 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 10:46:01.319 DEBUG 10776 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 10:46:01.320 DEBUG 10776 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 10:46:01.321 DEBUG 10776 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 10:46:01.321 DEBUG 10776 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 10:46:01.323 DEBUG 10776 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:46:01.323 DEBUG 10776 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:46:01.324 DEBUG 10776 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:46:01.324 DEBUG 10776 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:46:01.325 DEBUG 10776 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:46:01.325 DEBUG 10776 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:46:01.326 DEBUG 10776 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:46:01.327 DEBUG 10776 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:46:01.328 DEBUG 10776 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:46:01.328 DEBUG 10776 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 10:46:01.342 DEBUG 10776 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 10:46:01.342 DEBUG 10776 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 10:46:01.344 DEBUG 10776 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 10:46:01.344  INFO 10776 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:46:01.344  INFO 10776 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 10:46:01.617  INFO 10776 --- [http-nio-8080-exec-5] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:46:04.488  INFO 10776 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/addPage', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.addPage', args=[{}]}
2021-07-28 10:46:04.489 DEBUG 10776 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 10:46:04.490 DEBUG 10776 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 10:46:04.492 DEBUG 10776 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 10:46:04.493 DEBUG 10776 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TagMapper.selectAll    : ==>  Preparing: SELECT tag_id,name FROM tag 
2021-07-28 10:46:04.493 DEBUG 10776 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TagMapper.selectAll    : ==> Parameters: 
2021-07-28 10:46:04.494 DEBUG 10776 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TagMapper.selectAll    : <==      Total: 7
2021-07-28 10:46:04.494  INFO 10776 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:46:04.494  INFO 10776 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : result : admin/blogs-input 
2021-07-28 10:46:04.745  INFO 10776 --- [http-nio-8080-exec-8] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:46:31.997  INFO 10776 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/add', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogAdd', args=[Blog(blogId=null, typeId=6, userId=null, title=好好学习，天天向上, content=###### 666, firstPicture=http://b-ssl.duitang.com/uploads/item/201807/27/20180727062342_45mCi.jpeg, flag=, description=666777999, views=null, appreciation=null, shareStatement=null, comment=null, publish=true, recommend=null, createTime=null, updateTime=null, type=null, user=null, tags=null), org.apache.catalina.session.StandardSessionFacade@c6e7ca4, {}, 20,21]}
2021-07-28 10:46:31.999 DEBUG 10776 --- [http-nio-8080-exec-10] b.l.b.m.TypeMapper.selectByPrimaryKey    : ==>  Preparing: SELECT type_id,name FROM type WHERE type_id = ? 
2021-07-28 10:46:31.999 DEBUG 10776 --- [http-nio-8080-exec-10] b.l.b.m.TypeMapper.selectByPrimaryKey    : ==> Parameters: 6(Integer)
2021-07-28 10:46:32.000 DEBUG 10776 --- [http-nio-8080-exec-10] b.l.b.m.TypeMapper.selectByPrimaryKey    : <==      Total: 1
2021-07-28 10:46:32.002 DEBUG 10776 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 10:46:32.002 DEBUG 10776 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 20(String)
2021-07-28 10:46:32.002 DEBUG 10776 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 10:46:32.002 DEBUG 10776 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 10:46:32.003 DEBUG 10776 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 21(String)
2021-07-28 10:46:32.003 DEBUG 10776 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 10:46:32.022 DEBUG 10776 --- [http-nio-8080-exec-10] black.lyg.blog.mapper.BlogMapper.insert  : ==>  Preparing: INSERT INTO blog ( blog_id,type_id,user_id,title,content,first_picture,flag,description,views,appreciation,share_statement,comment,publish,recommend,create_time,update_time ) VALUES( ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,? ) 
2021-07-28 10:46:32.025 DEBUG 10776 --- [http-nio-8080-exec-10] black.lyg.blog.mapper.BlogMapper.insert  : ==> Parameters: null, 6(Integer), 1(Integer), 好好学习，天天向上(String), ###### 666(String), http://b-ssl.duitang.com/uploads/item/201807/27/20180727062342_45mCi.jpeg(String), (String), 666777999(String), 0(Integer), false(Boolean), false(Boolean), false(Boolean), true(Boolean), false(Boolean), 2021-07-28 10:46:32.008(Timestamp), 2021-07-28 10:46:32.008(Timestamp)
2021-07-28 10:46:32.026 DEBUG 10776 --- [http-nio-8080-exec-10] black.lyg.blog.mapper.BlogMapper.insert  : <==    Updates: 1
2021-07-28 10:46:32.028 DEBUG 10776 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.insert!selectKey      : ==>  Executing: SELECT LAST_INSERT_ID() 
2021-07-28 10:46:32.029 DEBUG 10776 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.insert!selectKey      : <==      Total: 1
2021-07-28 10:46:32.031  INFO 10776 --- [http-nio-8080-exec-10] black.lyg.blog.service.BlogService       : 更新redis中BlogCount的数值,变化为：+1
2021-07-28 10:46:32.033  INFO 10776 --- [http-nio-8080-exec-10] black.lyg.blog.service.BlogService       : 更新redis中BlogTypes中相关的数据:TypeTops(typeId=6, name=学习日志, blogNumber=5)
2021-07-28 10:46:32.035  INFO 10776 --- [http-nio-8080-exec-10] black.lyg.blog.service.BlogService       : 更新redis中BlogTypes中相关的数据TypeTops(typeId=6, name=学习日志, blogNumber=6)
2021-07-28 10:46:32.036 DEBUG 10776 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.BlogTagMapper.insert   : ==>  Preparing: INSERT INTO blog_tag ( blog_tag_id,blog_id,tag_id ) VALUES( ?,?,? ) 
2021-07-28 10:46:32.036 DEBUG 10776 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.BlogTagMapper.insert   : ==> Parameters: null, 28(Integer), 20(Integer)
2021-07-28 10:46:32.038 DEBUG 10776 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.BlogTagMapper.insert   : <==    Updates: 1
2021-07-28 10:46:32.038 DEBUG 10776 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.BlogTagMapper.insert   : ==>  Preparing: INSERT INTO blog_tag ( blog_tag_id,blog_id,tag_id ) VALUES( ?,?,? ) 
2021-07-28 10:46:32.039 DEBUG 10776 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.BlogTagMapper.insert   : ==> Parameters: null, 28(Integer), 21(Integer)
2021-07-28 10:46:32.039 DEBUG 10776 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.BlogTagMapper.insert   : <==    Updates: 1
2021-07-28 10:46:32.041  INFO 10776 --- [http-nio-8080-exec-10] black.lyg.blog.service.BlogService       : 删除redis中key为blogtags的hash数据类型
2021-07-28 10:46:32.042 DEBUG 10776 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.selectByPrimaryKey    : ==>  Preparing: SELECT blog_id,type_id,user_id,title,content,first_picture,flag,description,views,appreciation,share_statement,comment,publish,recommend,create_time,update_time FROM blog WHERE blog_id = ? 
2021-07-28 10:46:32.042 DEBUG 10776 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.selectByPrimaryKey    : ==> Parameters: 28(Integer)
2021-07-28 10:46:32.043 DEBUG 10776 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.selectByPrimaryKey    : <==      Total: 1
2021-07-28 10:46:32.047  INFO 10776 --- [http-nio-8080-exec-10] black.lyg.blog.service.BlogService       : 更新redis中TheLatestBlog的数据，标题为好好学习，天天向上
2021-07-28 10:46:32.047  INFO 10776 --- [http-nio-8080-exec-10] black.lyg.blog.service.BlogService       : 更新redis中AllBlog的数据，标题为好好学习，天天向上
2021-07-28 10:46:32.051  INFO 10776 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:46:32.051  INFO 10776 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : result : redirect:/admin/blogs/admin 
2021-07-28 10:46:32.069  INFO 10776 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{message=操作成功}, admin, 1]}
2021-07-28 10:46:32.069 DEBUG 10776 --- [http-nio-8080-exec-1] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 10:46:32.070 DEBUG 10776 --- [http-nio-8080-exec-1] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 10:46:32.070 DEBUG 10776 --- [http-nio-8080-exec-1] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 10:46:32.071 DEBUG 10776 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 10:46:32.071 DEBUG 10776 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 10:46:32.073 DEBUG 10776 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 10:46:32.073 DEBUG 10776 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 10:46:32.073 DEBUG 10776 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 10:46:32.075 DEBUG 10776 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:46:32.076 DEBUG 10776 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:46:32.076 DEBUG 10776 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:46:32.076 DEBUG 10776 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:46:32.076 DEBUG 10776 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:46:32.077 DEBUG 10776 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:46:32.078 DEBUG 10776 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:46:32.078 DEBUG 10776 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:46:32.079 DEBUG 10776 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:46:32.080 DEBUG 10776 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 8
2021-07-28 10:46:32.080 DEBUG 10776 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 10:46:32.080 DEBUG 10776 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 10:46:32.081 DEBUG 10776 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 10:46:32.081  INFO 10776 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:46:32.081  INFO 10776 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 10:46:32.357  INFO 10776 --- [http-nio-8080-exec-2] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:46:37.107 DEBUG 10776 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==>  Preparing: SELECT count(0) FROM blog 
2021-07-28 10:46:37.107 DEBUG 10776 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==> Parameters: 
2021-07-28 10:46:37.109 DEBUG 10776 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.findBlogAll_COUNT     : <==      Total: 1
2021-07-28 10:46:37.109 DEBUG 10776 --- [http-nio-8080-exec-3] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc LIMIT ? 
2021-07-28 10:46:37.110 DEBUG 10776 --- [http-nio-8080-exec-3] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 5(Integer)
2021-07-28 10:46:37.111 DEBUG 10776 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:46:37.111 DEBUG 10776 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:46:37.112 DEBUG 10776 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:46:37.112 DEBUG 10776 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:46:37.112 DEBUG 10776 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:46:37.113 DEBUG 10776 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:46:37.113 DEBUG 10776 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:46:37.114 DEBUG 10776 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:46:37.114 DEBUG 10776 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:46:37.115 DEBUG 10776 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:46:37.115 DEBUG 10776 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 10:46:37.116 DEBUG 10776 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:46:37.116 DEBUG 10776 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:46:37.117 DEBUG 10776 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 10:46:37.118 DEBUG 10776 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:46:37.118 DEBUG 10776 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:46:37.118 DEBUG 10776 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 10:46:37.119 DEBUG 10776 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:46:37.120 DEBUG 10776 --- [http-nio-8080-exec-3] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 5
2021-07-28 10:46:37.122  INFO 10776 --- [http-nio-8080-exec-3] black.lyg.blog.service.TagService        : 从redis中获取数据：[]
2021-07-28 10:46:37.122 DEBUG 10776 --- [http-nio-8080-exec-3] b.l.b.m.TagMapper.findSeveralTopTags     : ==>  Preparing: select distinct t.tag_id,t.name ,count(*) as number from tag t ,blog_tag bt where t.tag_id = bt.tag_id group by t.tag_id, t.name order by number desc limit ? 
2021-07-28 10:46:37.123 DEBUG 10776 --- [http-nio-8080-exec-3] b.l.b.m.TagMapper.findSeveralTopTags     : ==> Parameters: 10(Integer)
2021-07-28 10:46:37.124 DEBUG 10776 --- [http-nio-8080-exec-3] b.l.b.m.TagMapper.findSeveralTopTags     : <==      Total: 7
2021-07-28 10:46:37.126  INFO 10776 --- [http-nio-8080-exec-3] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=21, name=Redis, BlogNumber=5)
2021-07-28 10:46:37.127  INFO 10776 --- [http-nio-8080-exec-3] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=22, name=Java, BlogNumber=4)
2021-07-28 10:46:37.128  INFO 10776 --- [http-nio-8080-exec-3] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=20, name=设计模式, BlogNumber=3)
2021-07-28 10:46:37.128  INFO 10776 --- [http-nio-8080-exec-3] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=1, name=Spring, BlogNumber=2)
2021-07-28 10:46:37.129  INFO 10776 --- [http-nio-8080-exec-3] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=24, name=测试, BlogNumber=2)
2021-07-28 10:46:37.129  INFO 10776 --- [http-nio-8080-exec-3] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=2, name=Mybatis, BlogNumber=1)
2021-07-28 10:46:37.131  INFO 10776 --- [http-nio-8080-exec-3] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=23, name=MySQL, BlogNumber=1)
2021-07-28 10:46:37.131  INFO 10776 --- [http-nio-8080-exec-3] black.lyg.blog.service.TagService        : 从Mysql中查找到由标签显示博客的数据：[TagTops(tagId=21, name=Redis, BlogNumber=5), TagTops(tagId=22, name=Java, BlogNumber=4), TagTops(tagId=20, name=设计模式, BlogNumber=3), TagTops(tagId=1, name=Spring, BlogNumber=2), TagTops(tagId=24, name=测试, BlogNumber=2), TagTops(tagId=2, name=Mybatis, BlogNumber=1), TagTops(tagId=23, name=MySQL, BlogNumber=1)]
2021-07-28 10:46:37.133  INFO 10776 --- [http-nio-8080-exec-3] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:46:37.409  INFO 10776 --- [http-nio-8080-exec-4] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:46:39.611  INFO 10776 --- [http-nio-8080-exec-5] black.lyg.blog.service.BlogService       : 从redis中获取Blog的数据，标题为好好学习，天天向上
2021-07-28 10:46:39.612 DEBUG 10776 --- [http-nio-8080-exec-5] b.l.b.m.B.updateByPrimaryKeySelective    : ==>  Preparing: UPDATE blog SET type_id = ?,user_id = ?,title = ?,content = ?,first_picture = ?,flag = ?,description = ?,views = ?,appreciation = ?,share_statement = ?,comment = ?,publish = ?,recommend = ?,create_time = ?,update_time = ? WHERE blog_id = ? 
2021-07-28 10:46:39.614 DEBUG 10776 --- [http-nio-8080-exec-5] b.l.b.m.B.updateByPrimaryKeySelective    : ==> Parameters: 6(Integer), 1(Integer), 好好学习，天天向上(String), ###### 666(String), http://b-ssl.duitang.com/uploads/item/201807/27/20180727062342_45mCi.jpeg(String), (String), 666777999(String), 1(Integer), false(Boolean), false(Boolean), false(Boolean), true(Boolean), false(Boolean), 2021-07-28 10:46:32.0(Timestamp), 2021-07-28 10:46:32.008(Timestamp), 28(Integer)
2021-07-28 10:46:39.617 DEBUG 10776 --- [http-nio-8080-exec-5] b.l.b.m.B.updateByPrimaryKeySelective    : <==    Updates: 1
2021-07-28 10:46:39.619  INFO 10776 --- [http-nio-8080-exec-5] black.lyg.blog.service.BlogService       : 更新redis中AllBlog的博客标题为：好好学习，天天向上的views为：1
2021-07-28 10:46:39.653 DEBUG 10776 --- [http-nio-8080-exec-5] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 10:46:39.653 DEBUG 10776 --- [http-nio-8080-exec-5] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 28(Integer)
2021-07-28 10:46:39.655 DEBUG 10776 --- [http-nio-8080-exec-5] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 2
2021-07-28 10:46:39.655 DEBUG 10776 --- [http-nio-8080-exec-5] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 10:46:39.655 DEBUG 10776 --- [http-nio-8080-exec-5] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 20(Integer)
2021-07-28 10:46:39.656 DEBUG 10776 --- [http-nio-8080-exec-5] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 10:46:39.657 DEBUG 10776 --- [http-nio-8080-exec-5] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 10:46:39.657 DEBUG 10776 --- [http-nio-8080-exec-5] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 21(Integer)
2021-07-28 10:46:39.658 DEBUG 10776 --- [http-nio-8080-exec-5] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 10:46:39.912  INFO 10776 --- [http-nio-8080-exec-6] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:46:58.395  INFO 10776 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 10:46:58.396 DEBUG 10776 --- [http-nio-8080-exec-8] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 10:46:58.396 DEBUG 10776 --- [http-nio-8080-exec-8] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 10:46:58.398 DEBUG 10776 --- [http-nio-8080-exec-8] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 10:46:58.398 DEBUG 10776 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 10:46:58.398 DEBUG 10776 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 10:46:58.399 DEBUG 10776 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 10:46:58.400 DEBUG 10776 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 10:46:58.401 DEBUG 10776 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 10:46:58.403 DEBUG 10776 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:46:58.403 DEBUG 10776 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:46:58.404 DEBUG 10776 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:46:58.404 DEBUG 10776 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:46:58.405 DEBUG 10776 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:46:58.405 DEBUG 10776 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:46:58.406 DEBUG 10776 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:46:58.406 DEBUG 10776 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:46:58.407 DEBUG 10776 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:46:58.408 DEBUG 10776 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 8
2021-07-28 10:46:58.408 DEBUG 10776 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 10:46:58.408 DEBUG 10776 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 10:46:58.409 DEBUG 10776 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 10:46:58.409  INFO 10776 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:46:58.409  INFO 10776 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 10:46:58.681  INFO 10776 --- [http-nio-8080-exec-9] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:47:05.093  INFO 10776 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/28/delete', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.deleteBlog', args=[28, {}]}
2021-07-28 10:47:05.094 DEBUG 10776 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.selectBlogByBlogId    : ==>  Preparing: select * from blog where blog_id = ? 
2021-07-28 10:47:05.094 DEBUG 10776 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.selectBlogByBlogId    : ==> Parameters: 28(String)
2021-07-28 10:47:05.096 DEBUG 10776 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:47:05.096 DEBUG 10776 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:47:05.096 DEBUG 10776 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:47:05.097 DEBUG 10776 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:47:05.097 DEBUG 10776 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:47:05.098 DEBUG 10776 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:47:05.098 DEBUG 10776 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.selectBlogByBlogId    : <==      Total: 1
2021-07-28 10:47:05.098 DEBUG 10776 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ==>  Preparing: select * from user where user_id = ? 
2021-07-28 10:47:05.099 DEBUG 10776 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ==> Parameters: null(String)
2021-07-28 10:47:05.100 DEBUG 10776 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : <==      Total: 0
2021-07-28 10:47:05.100  INFO 10776 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:47:05.101 ERROR 10776 --- [http-nio-8080-exec-10] b.l.b.h.ControllerExceptionHandler       : Request URL : http://localhost:8080/admin/blogs/28/delete, Exception : null
2021-07-28 10:47:05.101  WARN 10776 --- [http-nio-8080-exec-10] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.NullPointerException]
2021-07-28 10:48:07.910  INFO 4252 --- [restartedMain] black.lyg.blog.BlogApplication           : Starting BlogApplication on Administraror with PID 4252 (D:\Desktop\blog\blog-master\target\classes started by Administrator in D:\Desktop\blog\blog-master)
2021-07-28 10:48:07.912 DEBUG 4252 --- [restartedMain] black.lyg.blog.BlogApplication           : Running with Spring Boot v2.2.6.RELEASE, Spring v5.2.5.RELEASE
2021-07-28 10:48:07.913  INFO 4252 --- [restartedMain] black.lyg.blog.BlogApplication           : The following profiles are active: dev
2021-07-28 10:48:07.953  INFO 4252 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-07-28 10:48:07.953  INFO 4252 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-07-28 10:48:08.520  INFO 4252 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-28 10:48:08.522  INFO 4252 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-28 10:48:08.548  INFO 4252 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16ms. Found 0 Redis repository interfaces.
2021-07-28 10:48:08.652  WARN 4252 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[black.lyg.blog]' package. Please check your configuration.
2021-07-28 10:48:09.288  INFO 4252 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-07-28 10:48:09.334  INFO 4252 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-28 10:48:09.334  INFO 4252 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-28 10:48:09.336  INFO 4252 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : An older version [1.2.14] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.23]
2021-07-28 10:48:09.336  INFO 4252 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.14] using APR version [1.6.2].
2021-07-28 10:48:09.336  INFO 4252 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-07-28 10:48:09.336  INFO 4252 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-07-28 10:48:10.356  INFO 4252 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.0.2l  25 May 2017]
2021-07-28 10:48:10.434  INFO 4252 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-28 10:48:10.434  INFO 4252 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2481 ms
2021-07-28 10:48:10.477  INFO 4252 --- [restartedMain] o.s.boot.web.servlet.RegistrationBean    : Filter webStatFilter was not registered (possibly already registered?)
2021-07-28 10:48:11.539  INFO 4252 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-28 10:48:11.617  INFO 4252 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-07-28 10:48:12.117  INFO 4252 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-07-28 10:48:12.162  INFO 4252 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-07-28 10:48:12.165  INFO 4252 --- [restartedMain] black.lyg.blog.BlogApplication           : Started BlogApplication in 4.575 seconds (JVM running for 6.48)
2021-07-28 10:48:12.203  INFO 4252 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-28 10:48:13.175 DEBUG 4252 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc 
2021-07-28 10:48:13.192 DEBUG 4252 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 
2021-07-28 10:48:13.218 DEBUG 4252 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:48:13.219 DEBUG 4252 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:48:13.220 DEBUG 4252 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:48:13.222 DEBUG 4252 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:48:13.222 DEBUG 4252 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:48:13.223 DEBUG 4252 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:48:13.225 DEBUG 4252 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:48:13.225 DEBUG 4252 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:48:13.226 DEBUG 4252 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:48:13.227 DEBUG 4252 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:48:13.227 DEBUG 4252 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 10:48:13.228 DEBUG 4252 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:48:13.229 DEBUG 4252 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:48:13.229 DEBUG 4252 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 10:48:13.230 DEBUG 4252 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:48:13.230 DEBUG 4252 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:48:13.230 DEBUG 4252 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 10:48:13.232 DEBUG 4252 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:48:13.233 DEBUG 4252 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 10
2021-07-28 10:48:13.339  INFO 4252 --- [restartedMain] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2021-07-28 10:48:13.340  INFO 4252 --- [restartedMain] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2021-07-28 10:48:15.016  INFO 4252 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：好好学习，天天向上
2021-07-28 10:48:15.018  INFO 4252 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：条件注解@Conditional
2021-07-28 10:48:15.019  INFO 4252 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：随笔
2021-07-28 10:48:15.021  INFO 4252 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java常见关键字final、static、super、abstract、this
2021-07-28 10:48:15.022  INFO 4252 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：挖掘机技术哪家强
2021-07-28 10:48:15.023  INFO 4252 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：欢迎使用 Markdown在线编辑器 MdEditor
2021-07-28 10:48:15.024  INFO 4252 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java中 equals() 和 hashCode()的关系
2021-07-28 10:48:15.026  INFO 4252 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（二）：Hash
2021-07-28 10:48:15.027  INFO 4252 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（一）：String
2021-07-28 10:48:15.028  INFO 4252 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java合并两个int数组
2021-07-28 10:48:15.031  INFO 4252 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 初始化redis中blogCount的数量为：10
2021-07-28 10:48:23.750  INFO 4252 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-28 10:48:23.750  INFO 4252 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-28 10:48:23.760  INFO 4252 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 10 ms
2021-07-28 10:48:23.929 DEBUG 4252 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==>  Preparing: SELECT count(0) FROM blog 
2021-07-28 10:48:23.930 DEBUG 4252 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==> Parameters: 
2021-07-28 10:48:23.932 DEBUG 4252 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.findBlogAll_COUNT     : <==      Total: 1
2021-07-28 10:48:23.933 DEBUG 4252 --- [http-nio-8080-exec-1] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc LIMIT ? 
2021-07-28 10:48:23.934 DEBUG 4252 --- [http-nio-8080-exec-1] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 5(Integer)
2021-07-28 10:48:23.937 DEBUG 4252 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:48:23.937 DEBUG 4252 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:48:23.938 DEBUG 4252 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:48:23.938 DEBUG 4252 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:48:23.938 DEBUG 4252 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:48:23.939 DEBUG 4252 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:48:23.940 DEBUG 4252 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:48:23.940 DEBUG 4252 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:48:23.941 DEBUG 4252 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:48:23.941 DEBUG 4252 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:48:23.942 DEBUG 4252 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 10:48:23.943 DEBUG 4252 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:48:23.943 DEBUG 4252 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:48:23.943 DEBUG 4252 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 10:48:23.944 DEBUG 4252 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:48:23.945 DEBUG 4252 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:48:23.945 DEBUG 4252 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 10:48:23.946 DEBUG 4252 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:48:23.946 DEBUG 4252 --- [http-nio-8080-exec-1] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 5
2021-07-28 10:48:23.981  INFO 4252 --- [http-nio-8080-exec-1] black.lyg.blog.service.TagService        : 从redis中获取数据：[TagTops(tagId=20, name=设计模式, BlogNumber=3), TagTops(tagId=21, name=Redis, BlogNumber=5), TagTops(tagId=22, name=Java, BlogNumber=4), TagTops(tagId=2, name=Mybatis, BlogNumber=1), TagTops(tagId=1, name=Spring, BlogNumber=2), TagTops(tagId=24, name=测试, BlogNumber=2), TagTops(tagId=23, name=MySQL, BlogNumber=1)]
2021-07-28 10:48:23.981  INFO 4252 --- [http-nio-8080-exec-1] black.lyg.blog.service.TagService        : 从redis中查找到由标签显示博客的数据：[TagTops(tagId=21, name=Redis, BlogNumber=5), TagTops(tagId=22, name=Java, BlogNumber=4), TagTops(tagId=20, name=设计模式, BlogNumber=3), TagTops(tagId=1, name=Spring, BlogNumber=2), TagTops(tagId=24, name=测试, BlogNumber=2), TagTops(tagId=2, name=Mybatis, BlogNumber=1), TagTops(tagId=23, name=MySQL, BlogNumber=1)]
2021-07-28 10:48:23.994  INFO 4252 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:48:24.554  INFO 4252 --- [http-nio-8080-exec-2] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:48:27.926  INFO 4252 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.loginPage', args=[]}
2021-07-28 10:48:27.928  INFO 4252 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:48:27.928  INFO 4252 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : result : admin/login 
2021-07-28 10:48:32.125  INFO 4252 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.login', args=[admin, lyg0918, org.apache.catalina.session.StandardSessionFacade@4c88053f, {}]}
2021-07-28 10:48:32.126 DEBUG 4252 --- [http-nio-8080-exec-5] .l.b.m.U.selectUserNameByNameAndPassWord : ==>  Preparing: select * from user where username = ? and password = ? 
2021-07-28 10:48:32.127 DEBUG 4252 --- [http-nio-8080-exec-5] .l.b.m.U.selectUserNameByNameAndPassWord : ==> Parameters: admin(String), 89446CF944BBA2485A8562075A0E0BB7(String)
2021-07-28 10:48:32.129 DEBUG 4252 --- [http-nio-8080-exec-5] .l.b.m.U.selectUserNameByNameAndPassWord : <==      Total: 1
2021-07-28 10:48:32.131  INFO 4252 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:48:32.131  INFO 4252 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : result : admin/index 
2021-07-28 10:48:32.399  INFO 4252 --- [http-nio-8080-exec-6] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:48:34.229  INFO 4252 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 10:48:34.235 DEBUG 4252 --- [http-nio-8080-exec-4] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 10:48:34.235 DEBUG 4252 --- [http-nio-8080-exec-4] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 10:48:34.236 DEBUG 4252 --- [http-nio-8080-exec-4] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 10:48:34.236 DEBUG 4252 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 10:48:34.237 DEBUG 4252 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 10:48:34.239 DEBUG 4252 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 10:48:34.239 DEBUG 4252 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 10:48:34.239 DEBUG 4252 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 10:48:34.242 DEBUG 4252 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:48:34.242 DEBUG 4252 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:48:34.243 DEBUG 4252 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:48:34.243 DEBUG 4252 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:48:34.243 DEBUG 4252 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:48:34.244 DEBUG 4252 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:48:34.245 DEBUG 4252 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:48:34.246 DEBUG 4252 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:48:34.246 DEBUG 4252 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:48:34.247 DEBUG 4252 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 8
2021-07-28 10:48:34.261 DEBUG 4252 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 10:48:34.261 DEBUG 4252 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 10:48:34.263 DEBUG 4252 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 10:48:34.263  INFO 4252 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:48:34.263  INFO 4252 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 10:48:34.522  INFO 4252 --- [http-nio-8080-exec-8] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:48:48.423  INFO 4252 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/28/delete', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.deleteBlog', args=[28, {}]}
2021-07-28 10:49:24.940 DEBUG 4252 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.selectBlogByBlogId    : ==>  Preparing: select * from blog where blog_id = ? 
2021-07-28 10:49:24.941 DEBUG 4252 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.selectBlogByBlogId    : ==> Parameters: 28(String)
2021-07-28 10:49:24.954 DEBUG 4252 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:49:24.955 DEBUG 4252 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:49:24.962 DEBUG 4252 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:49:24.964 DEBUG 4252 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:49:24.965 DEBUG 4252 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:49:24.976 DEBUG 4252 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:49:24.977 DEBUG 4252 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.selectBlogByBlogId    : <==      Total: 1
2021-07-28 10:53:25.035 DEBUG 4252 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ==>  Preparing: select * from user where user_id = ? 
2021-07-28 10:53:25.035 DEBUG 4252 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ==> Parameters: null(String)
2021-07-28 10:53:25.036 DEBUG 4252 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : <==      Total: 0
2021-07-28 10:53:25.037  INFO 4252 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:53:25.039 ERROR 4252 --- [http-nio-8080-exec-10] b.l.b.h.ControllerExceptionHandler       : Request URL : http://localhost:8080/admin/blogs/28/delete, Exception : null
2021-07-28 10:53:25.039  WARN 4252 --- [http-nio-8080-exec-10] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.NullPointerException]
2021-07-28 10:53:25.163  INFO 4252 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2021-07-28 10:53:25.278  INFO 4252 --- [SpringContextShutdownHook] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closing ...
2021-07-28 10:53:25.281  INFO 4252 --- [SpringContextShutdownHook] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2021-07-28 10:56:06.388  INFO 7984 --- [restartedMain] black.lyg.blog.BlogApplication           : Starting BlogApplication on Administraror with PID 7984 (D:\Desktop\blog\blog-master\target\classes started by Administrator in D:\Desktop\blog\blog-master)
2021-07-28 10:56:06.391 DEBUG 7984 --- [restartedMain] black.lyg.blog.BlogApplication           : Running with Spring Boot v2.2.6.RELEASE, Spring v5.2.5.RELEASE
2021-07-28 10:56:06.392  INFO 7984 --- [restartedMain] black.lyg.blog.BlogApplication           : The following profiles are active: dev
2021-07-28 10:56:06.433  INFO 7984 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-07-28 10:56:06.433  INFO 7984 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-07-28 10:56:06.973  INFO 7984 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-28 10:56:06.974  INFO 7984 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-28 10:56:06.998  INFO 7984 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15ms. Found 0 Redis repository interfaces.
2021-07-28 10:56:07.088  WARN 7984 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[black.lyg.blog]' package. Please check your configuration.
2021-07-28 10:56:07.606  INFO 7984 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-07-28 10:56:07.612  INFO 7984 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-28 10:56:07.612  INFO 7984 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-28 10:56:07.614  INFO 7984 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : An older version [1.2.14] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.23]
2021-07-28 10:56:07.614  INFO 7984 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.14] using APR version [1.6.2].
2021-07-28 10:56:07.614  INFO 7984 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-07-28 10:56:07.614  INFO 7984 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-07-28 10:56:08.637  INFO 7984 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.0.2l  25 May 2017]
2021-07-28 10:56:08.744  INFO 7984 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-28 10:56:08.744  INFO 7984 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2311 ms
2021-07-28 10:56:08.782  INFO 7984 --- [restartedMain] o.s.boot.web.servlet.RegistrationBean    : Filter webStatFilter was not registered (possibly already registered?)
2021-07-28 10:56:09.750  INFO 7984 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-28 10:56:09.827  INFO 7984 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-07-28 10:56:10.280  INFO 7984 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-07-28 10:56:10.320  INFO 7984 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-07-28 10:56:10.322  INFO 7984 --- [restartedMain] black.lyg.blog.BlogApplication           : Started BlogApplication in 4.27 seconds (JVM running for 5.633)
2021-07-28 10:56:10.356  INFO 7984 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-28 10:56:11.350 DEBUG 7984 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc 
2021-07-28 10:56:11.366 DEBUG 7984 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 
2021-07-28 10:56:11.389 DEBUG 7984 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:56:11.390 DEBUG 7984 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:56:11.391 DEBUG 7984 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:56:11.393 DEBUG 7984 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:56:11.393 DEBUG 7984 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:56:11.395 DEBUG 7984 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:56:11.396 DEBUG 7984 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:56:11.397 DEBUG 7984 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:56:11.398 DEBUG 7984 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:56:11.399 DEBUG 7984 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:56:11.399 DEBUG 7984 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 10:56:11.400 DEBUG 7984 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:56:11.401 DEBUG 7984 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:56:11.401 DEBUG 7984 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 10:56:11.402 DEBUG 7984 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:56:11.403 DEBUG 7984 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:56:11.403 DEBUG 7984 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 10:56:11.405 DEBUG 7984 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:56:11.407 DEBUG 7984 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 10
2021-07-28 10:56:11.512  INFO 7984 --- [restartedMain] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2021-07-28 10:56:11.512  INFO 7984 --- [restartedMain] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2021-07-28 10:56:13.236  INFO 7984 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：好好学习，天天向上
2021-07-28 10:56:13.237  INFO 7984 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：条件注解@Conditional
2021-07-28 10:56:13.239  INFO 7984 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：随笔
2021-07-28 10:56:13.241  INFO 7984 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java常见关键字final、static、super、abstract、this
2021-07-28 10:56:13.242  INFO 7984 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：挖掘机技术哪家强
2021-07-28 10:56:13.243  INFO 7984 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：欢迎使用 Markdown在线编辑器 MdEditor
2021-07-28 10:56:13.245  INFO 7984 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java中 equals() 和 hashCode()的关系
2021-07-28 10:56:13.246  INFO 7984 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（二）：Hash
2021-07-28 10:56:13.247  INFO 7984 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（一）：String
2021-07-28 10:56:13.248  INFO 7984 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java合并两个int数组
2021-07-28 10:56:13.251  INFO 7984 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 初始化redis中blogCount的数量为：10
2021-07-28 10:56:16.821  INFO 7984 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-28 10:56:16.821  INFO 7984 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-28 10:56:16.832  INFO 7984 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 11 ms
2021-07-28 10:56:16.859  INFO 7984 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.loginPage', args=[]}
2021-07-28 10:56:16.862  INFO 7984 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:56:16.863  INFO 7984 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : admin/login 
2021-07-28 10:56:17.238 ERROR 7984 --- [http-nio-8080-exec-1] b.l.b.h.ControllerExceptionHandler       : Request URL : http://localhost:8080/admin/blogs/28/delete, Exception : Missing URI template variable 'id' for method parameter of type String
2021-07-28 10:56:17.238  WARN 7984 --- [http-nio-8080-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.bind.MissingPathVariableException: Missing URI template variable 'id' for method parameter of type String]
2021-07-28 10:56:24.804  INFO 7984 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.login', args=[admin, lyg0918, org.apache.catalina.session.StandardSessionFacade@7118d4db, {}]}
2021-07-28 10:56:24.805 DEBUG 7984 --- [http-nio-8080-exec-2] .l.b.m.U.selectUserNameByNameAndPassWord : ==>  Preparing: select * from user where username = ? and password = ? 
2021-07-28 10:56:24.806 DEBUG 7984 --- [http-nio-8080-exec-2] .l.b.m.U.selectUserNameByNameAndPassWord : ==> Parameters: admin(String), 89446CF944BBA2485A8562075A0E0BB7(String)
2021-07-28 10:56:24.807 DEBUG 7984 --- [http-nio-8080-exec-2] .l.b.m.U.selectUserNameByNameAndPassWord : <==      Total: 1
2021-07-28 10:56:24.808  INFO 7984 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:56:24.809  INFO 7984 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : result : admin/index 
2021-07-28 10:56:25.120  INFO 7984 --- [http-nio-8080-exec-3] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:56:28.007  INFO 7984 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 10:56:28.030 DEBUG 7984 --- [http-nio-8080-exec-6] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 10:56:28.031 DEBUG 7984 --- [http-nio-8080-exec-6] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 10:56:28.032 DEBUG 7984 --- [http-nio-8080-exec-6] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 10:56:28.033 DEBUG 7984 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 10:56:28.034 DEBUG 7984 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 10:56:28.036 DEBUG 7984 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 10:56:28.036 DEBUG 7984 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 10:56:28.037 DEBUG 7984 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 10:56:28.041 DEBUG 7984 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:56:28.041 DEBUG 7984 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:56:28.042 DEBUG 7984 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:56:28.043 DEBUG 7984 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:56:28.043 DEBUG 7984 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:56:28.045 DEBUG 7984 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:56:28.046 DEBUG 7984 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:56:28.047 DEBUG 7984 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:56:28.048 DEBUG 7984 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:56:28.049 DEBUG 7984 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 8
2021-07-28 10:56:28.064 DEBUG 7984 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 10:56:28.065 DEBUG 7984 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 10:56:28.067 DEBUG 7984 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 10:56:28.067  INFO 7984 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:56:28.067  INFO 7984 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 10:56:28.335  INFO 7984 --- [http-nio-8080-exec-5] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:56:30.461  INFO 7984 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/28/delete', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.deleteBlog', args=[28, {}]}
2021-07-28 10:56:30.462 DEBUG 7984 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.selectBlogByBlogId    : ==>  Preparing: select * from blog where blog_id = ? 
2021-07-28 10:56:30.462 DEBUG 7984 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.selectBlogByBlogId    : ==> Parameters: 28(String)
2021-07-28 10:56:30.464 DEBUG 7984 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:56:30.465 DEBUG 7984 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:56:30.465 DEBUG 7984 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:56:30.466 DEBUG 7984 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:56:30.466 DEBUG 7984 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:56:30.468 DEBUG 7984 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:56:30.468 DEBUG 7984 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.selectBlogByBlogId    : <==      Total: 1
2021-07-28 10:56:30.468  INFO 7984 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:56:30.468  INFO 7984 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : result : redirect:/admin/blogs/admin 
2021-07-28 10:56:30.486  INFO 7984 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{message=删除失败}, admin, 1]}
2021-07-28 10:56:30.488 DEBUG 7984 --- [http-nio-8080-exec-8] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 10:56:30.488 DEBUG 7984 --- [http-nio-8080-exec-8] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 10:56:30.489 DEBUG 7984 --- [http-nio-8080-exec-8] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 10:56:30.489 DEBUG 7984 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 10:56:30.489 DEBUG 7984 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 10:56:30.491 DEBUG 7984 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 10:56:30.493 DEBUG 7984 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 10:56:30.493 DEBUG 7984 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 10:56:30.495 DEBUG 7984 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:56:30.496 DEBUG 7984 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:56:30.497 DEBUG 7984 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:56:30.497 DEBUG 7984 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:56:30.497 DEBUG 7984 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:56:30.498 DEBUG 7984 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:56:30.499 DEBUG 7984 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:56:30.499 DEBUG 7984 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:56:30.500 DEBUG 7984 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:56:30.501 DEBUG 7984 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 8
2021-07-28 10:56:30.501 DEBUG 7984 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 10:56:30.501 DEBUG 7984 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 10:56:30.502 DEBUG 7984 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 10:56:30.502  INFO 7984 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:56:30.502  INFO 7984 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 10:56:30.751  INFO 7984 --- [http-nio-8080-exec-4] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:58:55.200  INFO 7984 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 10:58:55.205 DEBUG 7984 --- [http-nio-8080-exec-2] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 10:58:55.206 DEBUG 7984 --- [http-nio-8080-exec-2] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 10:58:55.207 DEBUG 7984 --- [http-nio-8080-exec-2] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 10:58:55.207 DEBUG 7984 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 10:58:55.207 DEBUG 7984 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 10:58:55.208 DEBUG 7984 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 10:58:55.208 DEBUG 7984 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 10:58:55.209 DEBUG 7984 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 10:58:55.211 DEBUG 7984 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:58:55.211 DEBUG 7984 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:58:55.212 DEBUG 7984 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:58:55.212 DEBUG 7984 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:58:55.212 DEBUG 7984 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:58:55.213 DEBUG 7984 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:58:55.214 DEBUG 7984 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:58:55.215 DEBUG 7984 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:58:55.216 DEBUG 7984 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:58:55.217 DEBUG 7984 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 8
2021-07-28 10:58:55.217 DEBUG 7984 --- [http-nio-8080-exec-2] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 10:58:55.217 DEBUG 7984 --- [http-nio-8080-exec-2] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 10:58:55.218 DEBUG 7984 --- [http-nio-8080-exec-2] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 10:58:55.219  INFO 7984 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:58:55.219  INFO 7984 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 10:58:55.486  INFO 7984 --- [http-nio-8080-exec-3] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 10:58:57.186  INFO 7984 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , false, admin]}
2021-07-28 10:58:57.187 DEBUG 7984 --- [http-nio-8080-exec-9] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 10:58:57.187 DEBUG 7984 --- [http-nio-8080-exec-9] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 10:58:57.188 DEBUG 7984 --- [http-nio-8080-exec-9] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 10:58:57.188 DEBUG 7984 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 10:58:57.189 DEBUG 7984 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 10:58:57.189 DEBUG 7984 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 10:58:57.199 DEBUG 7984 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 order by update_time desc 
2021-07-28 10:58:57.199 DEBUG 7984 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 
2021-07-28 10:58:57.202 DEBUG 7984 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:58:57.203 DEBUG 7984 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 10:58:57.203 DEBUG 7984 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:58:57.204 DEBUG 7984 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:58:57.204 DEBUG 7984 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 10:58:57.204 DEBUG 7984 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:58:57.205 DEBUG 7984 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:58:57.205 DEBUG 7984 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 10:58:57.205 DEBUG 7984 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:58:57.206 DEBUG 7984 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:58:57.207 DEBUG 7984 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 10:58:57.207 DEBUG 7984 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:58:57.207 DEBUG 7984 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 10:58:57.208 DEBUG 7984 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 10:58:57.208 DEBUG 7984 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 10:58:57.209 DEBUG 7984 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 10:58:57.209 DEBUG 7984 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 10:58:57.209 DEBUG 7984 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 10:58:57.209 DEBUG 7984 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 10
2021-07-28 10:58:57.210  INFO 7984 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 10:58:57.211 ERROR 7984 --- [http-nio-8080-exec-9] b.l.b.h.ControllerExceptionHandler       : Request URL : http://localhost:8080/admin/blogs/search, Exception : java.util.ArrayList cannot be cast to com.github.pagehelper.Page
2021-07-28 10:58:57.211  WARN 7984 --- [http-nio-8080-exec-9] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page]
2021-07-28 11:00:20.147  INFO 6868 --- [restartedMain] black.lyg.blog.BlogApplication           : Starting BlogApplication on Administraror with PID 6868 (D:\Desktop\blog\blog-master\target\classes started by Administrator in D:\Desktop\blog\blog-master)
2021-07-28 11:00:20.149 DEBUG 6868 --- [restartedMain] black.lyg.blog.BlogApplication           : Running with Spring Boot v2.2.6.RELEASE, Spring v5.2.5.RELEASE
2021-07-28 11:00:20.149  INFO 6868 --- [restartedMain] black.lyg.blog.BlogApplication           : The following profiles are active: dev
2021-07-28 11:00:20.188  INFO 6868 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-07-28 11:00:20.188  INFO 6868 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-07-28 11:00:20.692  INFO 6868 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-28 11:00:20.693  INFO 6868 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-28 11:00:20.716  INFO 6868 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14ms. Found 0 Redis repository interfaces.
2021-07-28 11:00:20.799  WARN 6868 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[black.lyg.blog]' package. Please check your configuration.
2021-07-28 11:00:21.270  INFO 6868 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-07-28 11:00:21.276  INFO 6868 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-28 11:00:21.276  INFO 6868 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-28 11:00:21.277  INFO 6868 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : An older version [1.2.14] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.23]
2021-07-28 11:00:21.278  INFO 6868 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.14] using APR version [1.6.2].
2021-07-28 11:00:21.278  INFO 6868 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-07-28 11:00:21.278  INFO 6868 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-07-28 11:00:22.299  INFO 6868 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.0.2l  25 May 2017]
2021-07-28 11:00:22.399  INFO 6868 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-28 11:00:22.399  INFO 6868 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2211 ms
2021-07-28 11:00:22.433  INFO 6868 --- [restartedMain] o.s.boot.web.servlet.RegistrationBean    : Filter webStatFilter was not registered (possibly already registered?)
2021-07-28 11:00:23.315  INFO 6868 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-28 11:00:23.382  INFO 6868 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-07-28 11:00:23.809  INFO 6868 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-07-28 11:00:23.845  INFO 6868 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-07-28 11:00:23.847  INFO 6868 --- [restartedMain] black.lyg.blog.BlogApplication           : Started BlogApplication in 4.019 seconds (JVM running for 5.314)
2021-07-28 11:00:23.877  INFO 6868 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-28 11:00:24.812 DEBUG 6868 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc 
2021-07-28 11:00:24.828 DEBUG 6868 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 
2021-07-28 11:00:24.851 DEBUG 6868 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:00:24.852 DEBUG 6868 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:00:24.852 DEBUG 6868 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:00:24.854 DEBUG 6868 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:00:24.854 DEBUG 6868 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:00:24.855 DEBUG 6868 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:00:24.857 DEBUG 6868 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:00:24.857 DEBUG 6868 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:00:24.858 DEBUG 6868 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:00:24.859 DEBUG 6868 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:00:24.859 DEBUG 6868 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 11:00:24.860 DEBUG 6868 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:00:24.861 DEBUG 6868 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:00:24.861 DEBUG 6868 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 11:00:24.862 DEBUG 6868 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:00:24.862 DEBUG 6868 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:00:24.862 DEBUG 6868 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 11:00:24.863 DEBUG 6868 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:00:24.865 DEBUG 6868 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 10
2021-07-28 11:00:24.955  INFO 6868 --- [restartedMain] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2021-07-28 11:00:24.956  INFO 6868 --- [restartedMain] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2021-07-28 11:00:26.615  INFO 6868 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：好好学习，天天向上
2021-07-28 11:00:26.616  INFO 6868 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：条件注解@Conditional
2021-07-28 11:00:26.618  INFO 6868 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：随笔
2021-07-28 11:00:26.619  INFO 6868 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java常见关键字final、static、super、abstract、this
2021-07-28 11:00:26.620  INFO 6868 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：挖掘机技术哪家强
2021-07-28 11:00:26.621  INFO 6868 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：欢迎使用 Markdown在线编辑器 MdEditor
2021-07-28 11:00:26.622  INFO 6868 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java中 equals() 和 hashCode()的关系
2021-07-28 11:00:26.623  INFO 6868 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（二）：Hash
2021-07-28 11:00:26.624  INFO 6868 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（一）：String
2021-07-28 11:00:26.625  INFO 6868 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java合并两个int数组
2021-07-28 11:00:26.627  INFO 6868 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 初始化redis中blogCount的数量为：10
2021-07-28 11:00:36.507  INFO 6868 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-28 11:00:36.507  INFO 6868 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-28 11:00:36.515  INFO 6868 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 8 ms
2021-07-28 11:00:36.532  INFO 6868 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.loginPage', args=[]}
2021-07-28 11:00:36.535  INFO 6868 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:00:36.535  INFO 6868 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : admin/login 
2021-07-28 11:00:41.846  INFO 6868 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.login', args=[admin, lyg0918, org.apache.catalina.session.StandardSessionFacade@2b30f151, {}]}
2021-07-28 11:00:41.847 DEBUG 6868 --- [http-nio-8080-exec-2] .l.b.m.U.selectUserNameByNameAndPassWord : ==>  Preparing: select * from user where username = ? and password = ? 
2021-07-28 11:00:41.847 DEBUG 6868 --- [http-nio-8080-exec-2] .l.b.m.U.selectUserNameByNameAndPassWord : ==> Parameters: admin(String), 89446CF944BBA2485A8562075A0E0BB7(String)
2021-07-28 11:00:41.848 DEBUG 6868 --- [http-nio-8080-exec-2] .l.b.m.U.selectUserNameByNameAndPassWord : <==      Total: 1
2021-07-28 11:00:41.849  INFO 6868 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:00:41.849  INFO 6868 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : result : admin/index 
2021-07-28 11:00:42.173  INFO 6868 --- [http-nio-8080-exec-3] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:00:43.221  INFO 6868 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 11:00:43.240 DEBUG 6868 --- [http-nio-8080-exec-4] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 11:00:43.240 DEBUG 6868 --- [http-nio-8080-exec-4] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 11:00:43.241 DEBUG 6868 --- [http-nio-8080-exec-4] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 11:00:43.241 DEBUG 6868 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 11:00:43.242 DEBUG 6868 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 11:00:43.243 DEBUG 6868 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 11:00:43.244 DEBUG 6868 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 11:00:43.244 DEBUG 6868 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 11:00:43.247 DEBUG 6868 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:00:43.247 DEBUG 6868 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:00:43.248 DEBUG 6868 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:00:43.248 DEBUG 6868 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:00:43.248 DEBUG 6868 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:00:43.249 DEBUG 6868 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:00:43.250 DEBUG 6868 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:00:43.250 DEBUG 6868 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:00:43.251 DEBUG 6868 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:00:43.253 DEBUG 6868 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 8
2021-07-28 11:00:43.267 DEBUG 6868 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 11:00:43.267 DEBUG 6868 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 11:00:43.268 DEBUG 6868 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 11:00:43.269  INFO 6868 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:00:43.269  INFO 6868 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 11:00:43.536  INFO 6868 --- [http-nio-8080-exec-7] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:00:45.005  INFO 6868 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/addPage', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.addPage', args=[{}]}
2021-07-28 11:00:45.006 DEBUG 6868 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 11:00:45.007 DEBUG 6868 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 11:00:45.009 DEBUG 6868 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 11:00:45.010 DEBUG 6868 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TagMapper.selectAll    : ==>  Preparing: SELECT tag_id,name FROM tag 
2021-07-28 11:00:45.011 DEBUG 6868 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TagMapper.selectAll    : ==> Parameters: 
2021-07-28 11:00:45.013 DEBUG 6868 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TagMapper.selectAll    : <==      Total: 7
2021-07-28 11:00:45.013  INFO 6868 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:00:45.013  INFO 6868 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : result : admin/blogs-input 
2021-07-28 11:00:45.271  INFO 6868 --- [http-nio-8080-exec-6] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:00:46.280  INFO 6868 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 11:00:46.281 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 11:00:46.281 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 11:00:46.282 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 11:00:46.283 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 11:00:46.283 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 11:00:46.284 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 11:00:46.285 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 11:00:46.285 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 11:00:46.287 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:00:46.288 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:00:46.289 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:00:46.290 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:00:46.290 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:00:46.291 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:00:46.292 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:00:46.292 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:00:46.293 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:00:46.294 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 8
2021-07-28 11:00:46.294 DEBUG 6868 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 11:00:46.294 DEBUG 6868 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 11:00:46.295 DEBUG 6868 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 11:00:46.296  INFO 6868 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:00:46.296  INFO 6868 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 11:00:46.546  INFO 6868 --- [http-nio-8080-exec-10] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:00:48.939  INFO 6868 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 11:00:48.940 DEBUG 6868 --- [http-nio-8080-exec-1] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 11:00:48.940 DEBUG 6868 --- [http-nio-8080-exec-1] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 11:00:48.941 DEBUG 6868 --- [http-nio-8080-exec-1] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 11:00:48.942 DEBUG 6868 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 11:00:48.942 DEBUG 6868 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 11:00:48.943 DEBUG 6868 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 11:00:48.943 DEBUG 6868 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 11:00:48.943 DEBUG 6868 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 11:00:48.945 DEBUG 6868 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:00:48.946 DEBUG 6868 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:00:48.946 DEBUG 6868 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:00:48.947 DEBUG 6868 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:00:48.947 DEBUG 6868 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:00:48.948 DEBUG 6868 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:00:48.949 DEBUG 6868 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:00:48.949 DEBUG 6868 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:00:48.949 DEBUG 6868 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:00:48.950 DEBUG 6868 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 8
2021-07-28 11:00:48.950 DEBUG 6868 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 11:00:48.950 DEBUG 6868 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 11:00:48.951 DEBUG 6868 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 11:00:48.951  INFO 6868 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:00:48.952  INFO 6868 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 11:00:49.199  INFO 6868 --- [http-nio-8080-exec-2] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:00:50.699  INFO 6868 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/8/edit', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.editPage', args=[{}, 8]}
2021-07-28 11:00:50.701  INFO 6868 --- [http-nio-8080-exec-3] black.lyg.blog.service.BlogService       : 从redis中获取Blog的数据，标题为条件注解@Conditional
2021-07-28 11:00:50.724 DEBUG 6868 --- [http-nio-8080-exec-3] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 11:00:50.725 DEBUG 6868 --- [http-nio-8080-exec-3] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 8(Integer)
2021-07-28 11:00:50.726 DEBUG 6868 --- [http-nio-8080-exec-3] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 11:00:50.726 DEBUG 6868 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 11:00:50.726 DEBUG 6868 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 11:00:50.728 DEBUG 6868 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 11:00:50.728 DEBUG 6868 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TagMapper.selectAll    : ==>  Preparing: SELECT tag_id,name FROM tag 
2021-07-28 11:00:50.728 DEBUG 6868 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TagMapper.selectAll    : ==> Parameters: 
2021-07-28 11:00:50.729 DEBUG 6868 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TagMapper.selectAll    : <==      Total: 7
2021-07-28 11:00:50.729  INFO 6868 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:00:50.729  INFO 6868 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : result : admin/blogs-input 
2021-07-28 11:00:50.978  INFO 6868 --- [http-nio-8080-exec-4] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:00:57.846  INFO 6868 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/28/edit', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.editPage', args=[{}, 28]}
2021-07-28 11:00:57.848  INFO 6868 --- [http-nio-8080-exec-7] black.lyg.blog.service.BlogService       : 从redis中获取Blog的数据，标题为好好学习，天天向上
2021-07-28 11:00:57.851 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 11:00:57.851 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 28(Integer)
2021-07-28 11:00:57.852 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 2
2021-07-28 11:00:57.853 DEBUG 6868 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 11:00:57.854 DEBUG 6868 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 11:00:57.855 DEBUG 6868 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 11:00:57.855 DEBUG 6868 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TagMapper.selectAll    : ==>  Preparing: SELECT tag_id,name FROM tag 
2021-07-28 11:00:57.856 DEBUG 6868 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TagMapper.selectAll    : ==> Parameters: 
2021-07-28 11:00:57.857 DEBUG 6868 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TagMapper.selectAll    : <==      Total: 7
2021-07-28 11:00:57.857  INFO 6868 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:00:57.857  INFO 6868 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : result : admin/blogs-input 
2021-07-28 11:00:58.098  INFO 6868 --- [http-nio-8080-exec-5] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:01:00.651  INFO 6868 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/add', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogAdd', args=[Blog(blogId=28, typeId=6, userId=null, title=好好学习，天天向上, content=###### 666, firstPicture=http://b-ssl.duitang.com/uploads/item/201807/27/20180727062342_45mCi.jpeg, flag=, description=666777999, views=null, appreciation=null, shareStatement=null, comment=null, publish=false, recommend=null, createTime=null, updateTime=null, type=null, user=null, tags=null), org.apache.catalina.session.StandardSessionFacade@2b30f151, {}, 20,21]}
2021-07-28 11:01:00.651 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.TypeMapper.selectByPrimaryKey    : ==>  Preparing: SELECT type_id,name FROM type WHERE type_id = ? 
2021-07-28 11:01:00.651 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.TypeMapper.selectByPrimaryKey    : ==> Parameters: 6(Integer)
2021-07-28 11:01:00.652 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.TypeMapper.selectByPrimaryKey    : <==      Total: 1
2021-07-28 11:01:00.653 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 11:01:00.653 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 20(String)
2021-07-28 11:01:00.655 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 11:01:00.656 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 11:01:00.657 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 21(String)
2021-07-28 11:01:00.657 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 11:01:00.664 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.B.updateByPrimaryKeySelective    : ==>  Preparing: UPDATE blog SET type_id = ?,user_id = ?,title = ?,content = ?,first_picture = ?,flag = ?,description = ?,appreciation = ?,share_statement = ?,comment = ?,publish = ?,recommend = ?,update_time = ? WHERE blog_id = ? 
2021-07-28 11:01:00.665 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.B.updateByPrimaryKeySelective    : ==> Parameters: 6(Integer), 1(Integer), 好好学习，天天向上(String), ###### 666(String), http://b-ssl.duitang.com/uploads/item/201807/27/20180727062342_45mCi.jpeg(String), (String), 666777999(String), false(Boolean), false(Boolean), false(Boolean), false(Boolean), false(Boolean), 2021-07-28 11:01:00.661(Timestamp), 28(Integer)
2021-07-28 11:01:00.667 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.B.updateByPrimaryKeySelective    : <==    Updates: 1
2021-07-28 11:01:00.667 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.BlogTagMapper.deleteByExample    : ==>  Preparing: DELETE FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 11:01:00.667 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.BlogTagMapper.deleteByExample    : ==> Parameters: 28(Integer)
2021-07-28 11:01:00.669 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.BlogTagMapper.deleteByExample    : <==    Updates: 2
2021-07-28 11:01:00.671 DEBUG 6868 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.BlogTagMapper.insert   : ==>  Preparing: INSERT INTO blog_tag ( blog_tag_id,blog_id,tag_id ) VALUES( ?,?,? ) 
2021-07-28 11:01:00.672 DEBUG 6868 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.BlogTagMapper.insert   : ==> Parameters: null, 28(Integer), 20(Integer)
2021-07-28 11:01:00.673 DEBUG 6868 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.BlogTagMapper.insert   : <==    Updates: 1
2021-07-28 11:01:00.673 DEBUG 6868 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.BlogTagMapper.insert   : ==>  Preparing: INSERT INTO blog_tag ( blog_tag_id,blog_id,tag_id ) VALUES( ?,?,? ) 
2021-07-28 11:01:00.674 DEBUG 6868 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.BlogTagMapper.insert   : ==> Parameters: null, 28(Integer), 21(Integer)
2021-07-28 11:01:00.675 DEBUG 6868 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.BlogTagMapper.insert   : <==    Updates: 1
2021-07-28 11:01:00.676  INFO 6868 --- [http-nio-8080-exec-8] black.lyg.blog.service.BlogService       : 删除redis中key为blogtags的hash数据类型
2021-07-28 11:01:00.677 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.selectByPrimaryKey    : ==>  Preparing: SELECT blog_id,type_id,user_id,title,content,first_picture,flag,description,views,appreciation,share_statement,comment,publish,recommend,create_time,update_time FROM blog WHERE blog_id = ? 
2021-07-28 11:01:00.677 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.selectByPrimaryKey    : ==> Parameters: 28(Integer)
2021-07-28 11:01:00.678 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.selectByPrimaryKey    : <==      Total: 1
2021-07-28 11:01:00.682  INFO 6868 --- [http-nio-8080-exec-8] black.lyg.blog.service.BlogService       : 更新redis中TheLatestBlog的数据，标题为好好学习，天天向上
2021-07-28 11:01:00.683  INFO 6868 --- [http-nio-8080-exec-8] black.lyg.blog.service.BlogService       : 更新redis中AllBlog的数据，标题为好好学习，天天向上
2021-07-28 11:01:00.687  INFO 6868 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:01:00.687  INFO 6868 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : result : redirect:/admin/blogs/admin 
2021-07-28 11:01:00.704  INFO 6868 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{message=操作成功}, admin, 1]}
2021-07-28 11:01:00.704 DEBUG 6868 --- [http-nio-8080-exec-9] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 11:01:00.704 DEBUG 6868 --- [http-nio-8080-exec-9] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 11:01:00.705 DEBUG 6868 --- [http-nio-8080-exec-9] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 11:01:00.706 DEBUG 6868 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 11:01:00.706 DEBUG 6868 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 11:01:00.706 DEBUG 6868 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 11:01:00.706 DEBUG 6868 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 11:01:00.707 DEBUG 6868 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 11:01:00.709 DEBUG 6868 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:01:00.710 DEBUG 6868 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:01:00.710 DEBUG 6868 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:01:00.710 DEBUG 6868 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:01:00.710 DEBUG 6868 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:01:00.711 DEBUG 6868 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:01:00.712 DEBUG 6868 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:01:00.712 DEBUG 6868 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:01:00.713 DEBUG 6868 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:01:00.713 DEBUG 6868 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 8
2021-07-28 11:01:00.713 DEBUG 6868 --- [http-nio-8080-exec-9] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 11:01:00.714 DEBUG 6868 --- [http-nio-8080-exec-9] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 11:01:00.714 DEBUG 6868 --- [http-nio-8080-exec-9] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 11:01:00.714  INFO 6868 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:01:00.714  INFO 6868 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 11:01:00.961  INFO 6868 --- [http-nio-8080-exec-10] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:01:10.114  INFO 6868 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/28/edit', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.editPage', args=[{}, 28]}
2021-07-28 11:01:10.117  INFO 6868 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 从redis中获取Blog的数据，标题为好好学习，天天向上
2021-07-28 11:01:10.118 DEBUG 6868 --- [http-nio-8080-exec-1] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 11:01:10.118 DEBUG 6868 --- [http-nio-8080-exec-1] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 28(Integer)
2021-07-28 11:01:10.120 DEBUG 6868 --- [http-nio-8080-exec-1] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 2
2021-07-28 11:01:10.120 DEBUG 6868 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 11:01:10.120 DEBUG 6868 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 11:01:10.122 DEBUG 6868 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 11:01:10.122 DEBUG 6868 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TagMapper.selectAll    : ==>  Preparing: SELECT tag_id,name FROM tag 
2021-07-28 11:01:10.123 DEBUG 6868 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TagMapper.selectAll    : ==> Parameters: 
2021-07-28 11:01:10.124 DEBUG 6868 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TagMapper.selectAll    : <==      Total: 7
2021-07-28 11:01:10.124  INFO 6868 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:01:10.124  INFO 6868 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : admin/blogs-input 
2021-07-28 11:01:10.372  INFO 6868 --- [http-nio-8080-exec-2] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:01:11.959  INFO 6868 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/add', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogAdd', args=[Blog(blogId=28, typeId=6, userId=null, title=好好学习，天天向上, content=###### 666, firstPicture=http://b-ssl.duitang.com/uploads/item/201807/27/20180727062342_45mCi.jpeg, flag=, description=666777999, views=null, appreciation=null, shareStatement=null, comment=null, publish=true, recommend=null, createTime=null, updateTime=null, type=null, user=null, tags=null), org.apache.catalina.session.StandardSessionFacade@2b30f151, {}, 20,21]}
2021-07-28 11:01:11.960 DEBUG 6868 --- [http-nio-8080-exec-4] b.l.b.m.TypeMapper.selectByPrimaryKey    : ==>  Preparing: SELECT type_id,name FROM type WHERE type_id = ? 
2021-07-28 11:01:11.960 DEBUG 6868 --- [http-nio-8080-exec-4] b.l.b.m.TypeMapper.selectByPrimaryKey    : ==> Parameters: 6(Integer)
2021-07-28 11:01:11.961 DEBUG 6868 --- [http-nio-8080-exec-4] b.l.b.m.TypeMapper.selectByPrimaryKey    : <==      Total: 1
2021-07-28 11:01:11.961 DEBUG 6868 --- [http-nio-8080-exec-4] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 11:01:11.961 DEBUG 6868 --- [http-nio-8080-exec-4] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 20(String)
2021-07-28 11:01:11.962 DEBUG 6868 --- [http-nio-8080-exec-4] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 11:01:11.963 DEBUG 6868 --- [http-nio-8080-exec-4] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 11:01:11.963 DEBUG 6868 --- [http-nio-8080-exec-4] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 21(String)
2021-07-28 11:01:11.963 DEBUG 6868 --- [http-nio-8080-exec-4] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 11:01:11.964 DEBUG 6868 --- [http-nio-8080-exec-4] b.l.b.m.B.updateByPrimaryKeySelective    : ==>  Preparing: UPDATE blog SET type_id = ?,user_id = ?,title = ?,content = ?,first_picture = ?,flag = ?,description = ?,appreciation = ?,share_statement = ?,comment = ?,publish = ?,recommend = ?,update_time = ? WHERE blog_id = ? 
2021-07-28 11:01:11.966 DEBUG 6868 --- [http-nio-8080-exec-4] b.l.b.m.B.updateByPrimaryKeySelective    : ==> Parameters: 6(Integer), 1(Integer), 好好学习，天天向上(String), ###### 666(String), http://b-ssl.duitang.com/uploads/item/201807/27/20180727062342_45mCi.jpeg(String), (String), 666777999(String), false(Boolean), false(Boolean), false(Boolean), true(Boolean), false(Boolean), 2021-07-28 11:01:11.964(Timestamp), 28(Integer)
2021-07-28 11:01:11.966 DEBUG 6868 --- [http-nio-8080-exec-4] b.l.b.m.B.updateByPrimaryKeySelective    : <==    Updates: 1
2021-07-28 11:01:11.966 DEBUG 6868 --- [http-nio-8080-exec-4] b.l.b.m.BlogTagMapper.deleteByExample    : ==>  Preparing: DELETE FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 11:01:11.966 DEBUG 6868 --- [http-nio-8080-exec-4] b.l.b.m.BlogTagMapper.deleteByExample    : ==> Parameters: 28(Integer)
2021-07-28 11:01:11.968 DEBUG 6868 --- [http-nio-8080-exec-4] b.l.b.m.BlogTagMapper.deleteByExample    : <==    Updates: 2
2021-07-28 11:01:11.968 DEBUG 6868 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.BlogTagMapper.insert   : ==>  Preparing: INSERT INTO blog_tag ( blog_tag_id,blog_id,tag_id ) VALUES( ?,?,? ) 
2021-07-28 11:01:11.968 DEBUG 6868 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.BlogTagMapper.insert   : ==> Parameters: null, 28(Integer), 20(Integer)
2021-07-28 11:01:11.969 DEBUG 6868 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.BlogTagMapper.insert   : <==    Updates: 1
2021-07-28 11:01:11.970 DEBUG 6868 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.BlogTagMapper.insert   : ==>  Preparing: INSERT INTO blog_tag ( blog_tag_id,blog_id,tag_id ) VALUES( ?,?,? ) 
2021-07-28 11:01:11.970 DEBUG 6868 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.BlogTagMapper.insert   : ==> Parameters: null, 28(Integer), 21(Integer)
2021-07-28 11:01:11.972 DEBUG 6868 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.BlogTagMapper.insert   : <==    Updates: 1
2021-07-28 11:01:11.972  INFO 6868 --- [http-nio-8080-exec-4] black.lyg.blog.service.BlogService       : 删除redis中key为blogtags的hash数据类型
2021-07-28 11:01:11.973 DEBUG 6868 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectByPrimaryKey    : ==>  Preparing: SELECT blog_id,type_id,user_id,title,content,first_picture,flag,description,views,appreciation,share_statement,comment,publish,recommend,create_time,update_time FROM blog WHERE blog_id = ? 
2021-07-28 11:01:11.973 DEBUG 6868 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectByPrimaryKey    : ==> Parameters: 28(Integer)
2021-07-28 11:01:11.974 DEBUG 6868 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectByPrimaryKey    : <==      Total: 1
2021-07-28 11:01:11.976  INFO 6868 --- [http-nio-8080-exec-4] black.lyg.blog.service.BlogService       : 更新redis中TheLatestBlog的数据，标题为好好学习，天天向上
2021-07-28 11:01:11.977  INFO 6868 --- [http-nio-8080-exec-4] black.lyg.blog.service.BlogService       : 更新redis中AllBlog的数据，标题为好好学习，天天向上
2021-07-28 11:01:11.980  INFO 6868 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:01:11.980  INFO 6868 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : result : redirect:/admin/blogs/admin 
2021-07-28 11:01:11.985  INFO 6868 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{message=操作成功}, admin, 1]}
2021-07-28 11:01:11.985 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 11:01:11.985 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 11:01:11.986 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 11:01:11.986 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 11:01:11.987 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 11:01:11.988 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 11:01:11.989 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 11:01:11.989 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 11:01:11.991 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:01:11.992 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:01:11.992 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:01:11.992 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:01:11.993 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:01:11.993 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:01:11.993 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:01:11.994 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:01:11.994 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:01:11.995 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 8
2021-07-28 11:01:11.995 DEBUG 6868 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 11:01:11.995 DEBUG 6868 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 11:01:11.996 DEBUG 6868 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 11:01:11.996  INFO 6868 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:01:11.996  INFO 6868 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 11:01:12.243  INFO 6868 --- [http-nio-8080-exec-5] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:01:17.397 DEBUG 6868 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==>  Preparing: SELECT count(0) FROM blog 
2021-07-28 11:01:17.397 DEBUG 6868 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==> Parameters: 
2021-07-28 11:01:17.399 DEBUG 6868 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.findBlogAll_COUNT     : <==      Total: 1
2021-07-28 11:01:17.399 DEBUG 6868 --- [http-nio-8080-exec-6] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc LIMIT ? 
2021-07-28 11:01:17.400 DEBUG 6868 --- [http-nio-8080-exec-6] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 5(Integer)
2021-07-28 11:01:17.401 DEBUG 6868 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:01:17.402 DEBUG 6868 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:01:17.403 DEBUG 6868 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:01:17.403 DEBUG 6868 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:01:17.403 DEBUG 6868 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:01:17.403 DEBUG 6868 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:01:17.404 DEBUG 6868 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:01:17.404 DEBUG 6868 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:01:17.406 DEBUG 6868 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:01:17.406 DEBUG 6868 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:01:17.406 DEBUG 6868 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 11:01:17.407 DEBUG 6868 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:01:17.408 DEBUG 6868 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:01:17.409 DEBUG 6868 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 11:01:17.409 DEBUG 6868 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:01:17.409 DEBUG 6868 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:01:17.409 DEBUG 6868 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 11:01:17.410 DEBUG 6868 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:01:17.410 DEBUG 6868 --- [http-nio-8080-exec-6] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 5
2021-07-28 11:01:17.413  INFO 6868 --- [http-nio-8080-exec-6] black.lyg.blog.service.TagService        : 从redis中获取数据：[]
2021-07-28 11:01:17.413 DEBUG 6868 --- [http-nio-8080-exec-6] b.l.b.m.TagMapper.findSeveralTopTags     : ==>  Preparing: select distinct t.tag_id,t.name ,count(*) as number from tag t ,blog_tag bt where t.tag_id = bt.tag_id group by t.tag_id, t.name order by number desc limit ? 
2021-07-28 11:01:17.413 DEBUG 6868 --- [http-nio-8080-exec-6] b.l.b.m.TagMapper.findSeveralTopTags     : ==> Parameters: 10(Integer)
2021-07-28 11:01:17.414 DEBUG 6868 --- [http-nio-8080-exec-6] b.l.b.m.TagMapper.findSeveralTopTags     : <==      Total: 7
2021-07-28 11:01:17.416  INFO 6868 --- [http-nio-8080-exec-6] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=21, name=Redis, BlogNumber=5)
2021-07-28 11:01:17.417  INFO 6868 --- [http-nio-8080-exec-6] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=22, name=Java, BlogNumber=4)
2021-07-28 11:01:17.418  INFO 6868 --- [http-nio-8080-exec-6] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=20, name=设计模式, BlogNumber=3)
2021-07-28 11:01:17.419  INFO 6868 --- [http-nio-8080-exec-6] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=1, name=Spring, BlogNumber=2)
2021-07-28 11:01:17.420  INFO 6868 --- [http-nio-8080-exec-6] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=24, name=测试, BlogNumber=2)
2021-07-28 11:01:17.421  INFO 6868 --- [http-nio-8080-exec-6] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=2, name=Mybatis, BlogNumber=1)
2021-07-28 11:01:17.423  INFO 6868 --- [http-nio-8080-exec-6] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=23, name=MySQL, BlogNumber=1)
2021-07-28 11:01:17.423  INFO 6868 --- [http-nio-8080-exec-6] black.lyg.blog.service.TagService        : 从Mysql中查找到由标签显示博客的数据：[TagTops(tagId=21, name=Redis, BlogNumber=5), TagTops(tagId=22, name=Java, BlogNumber=4), TagTops(tagId=20, name=设计模式, BlogNumber=3), TagTops(tagId=1, name=Spring, BlogNumber=2), TagTops(tagId=24, name=测试, BlogNumber=2), TagTops(tagId=2, name=Mybatis, BlogNumber=1), TagTops(tagId=23, name=MySQL, BlogNumber=1)]
2021-07-28 11:01:17.424  INFO 6868 --- [http-nio-8080-exec-6] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:01:17.728  INFO 6868 --- [http-nio-8080-exec-8] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:01:21.952  INFO 6868 --- [http-nio-8080-exec-9] black.lyg.blog.service.BlogService       : 从redis中获取Blog的数据，标题为好好学习，天天向上
2021-07-28 11:01:21.953 DEBUG 6868 --- [http-nio-8080-exec-9] b.l.b.m.B.updateByPrimaryKeySelective    : ==>  Preparing: UPDATE blog SET type_id = ?,user_id = ?,title = ?,content = ?,first_picture = ?,flag = ?,description = ?,views = ?,appreciation = ?,share_statement = ?,comment = ?,publish = ?,recommend = ?,create_time = ?,update_time = ? WHERE blog_id = ? 
2021-07-28 11:01:21.954 DEBUG 6868 --- [http-nio-8080-exec-9] b.l.b.m.B.updateByPrimaryKeySelective    : ==> Parameters: 6(Integer), 1(Integer), 好好学习，天天向上(String), ###### 666(String), http://b-ssl.duitang.com/uploads/item/201807/27/20180727062342_45mCi.jpeg(String), (String), 666777999(String), 2(Integer), false(Boolean), false(Boolean), false(Boolean), true(Boolean), false(Boolean), 2021-07-28 10:46:32.0(Timestamp), 2021-07-28 11:01:11.964(Timestamp), 28(Integer)
2021-07-28 11:01:21.957 DEBUG 6868 --- [http-nio-8080-exec-9] b.l.b.m.B.updateByPrimaryKeySelective    : <==    Updates: 1
2021-07-28 11:01:21.958  INFO 6868 --- [http-nio-8080-exec-9] black.lyg.blog.service.BlogService       : 更新redis中AllBlog的博客标题为：好好学习，天天向上的views为：2
2021-07-28 11:01:21.985 DEBUG 6868 --- [http-nio-8080-exec-9] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 11:01:21.985 DEBUG 6868 --- [http-nio-8080-exec-9] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 28(Integer)
2021-07-28 11:01:21.986 DEBUG 6868 --- [http-nio-8080-exec-9] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 2
2021-07-28 11:01:21.986 DEBUG 6868 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 11:01:21.986 DEBUG 6868 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 20(Integer)
2021-07-28 11:01:21.987 DEBUG 6868 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 11:01:21.988 DEBUG 6868 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 11:01:21.988 DEBUG 6868 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 21(Integer)
2021-07-28 11:01:21.988 DEBUG 6868 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 11:01:22.247  INFO 6868 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:01:30.986 DEBUG 6868 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==>  Preparing: SELECT count(0) FROM blog 
2021-07-28 11:01:30.987 DEBUG 6868 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==> Parameters: 
2021-07-28 11:01:30.988 DEBUG 6868 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.findBlogAll_COUNT     : <==      Total: 1
2021-07-28 11:01:30.989 DEBUG 6868 --- [http-nio-8080-exec-2] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc LIMIT ? 
2021-07-28 11:01:30.989 DEBUG 6868 --- [http-nio-8080-exec-2] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 5(Integer)
2021-07-28 11:01:30.991 DEBUG 6868 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:01:30.991 DEBUG 6868 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:01:30.992 DEBUG 6868 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:01:30.992 DEBUG 6868 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:01:30.992 DEBUG 6868 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:01:30.993 DEBUG 6868 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:01:30.993 DEBUG 6868 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:01:30.994 DEBUG 6868 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:01:30.994 DEBUG 6868 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:01:30.994 DEBUG 6868 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:01:30.994 DEBUG 6868 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 11:01:30.995 DEBUG 6868 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:01:30.995 DEBUG 6868 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:01:30.995 DEBUG 6868 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 11:01:30.996 DEBUG 6868 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:01:30.996 DEBUG 6868 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:01:30.996 DEBUG 6868 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 11:01:30.997 DEBUG 6868 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:01:30.997 DEBUG 6868 --- [http-nio-8080-exec-2] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 5
2021-07-28 11:01:30.999  INFO 6868 --- [http-nio-8080-exec-2] black.lyg.blog.service.TagService        : 从redis中获取数据：[TagTops(tagId=20, name=设计模式, BlogNumber=3), TagTops(tagId=21, name=Redis, BlogNumber=5), TagTops(tagId=22, name=Java, BlogNumber=4), TagTops(tagId=2, name=Mybatis, BlogNumber=1), TagTops(tagId=1, name=Spring, BlogNumber=2), TagTops(tagId=24, name=测试, BlogNumber=2), TagTops(tagId=23, name=MySQL, BlogNumber=1)]
2021-07-28 11:01:30.999  INFO 6868 --- [http-nio-8080-exec-2] black.lyg.blog.service.TagService        : 从redis中查找到由标签显示博客的数据：[TagTops(tagId=21, name=Redis, BlogNumber=5), TagTops(tagId=22, name=Java, BlogNumber=4), TagTops(tagId=20, name=设计模式, BlogNumber=3), TagTops(tagId=1, name=Spring, BlogNumber=2), TagTops(tagId=24, name=测试, BlogNumber=2), TagTops(tagId=2, name=Mybatis, BlogNumber=1), TagTops(tagId=23, name=MySQL, BlogNumber=1)]
2021-07-28 11:01:31.001  INFO 6868 --- [http-nio-8080-exec-2] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:01:31.252  INFO 6868 --- [http-nio-8080-exec-3] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:02:11.678  INFO 6868 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/28/delete', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.deleteBlog', args=[28, {}]}
2021-07-28 11:02:11.679 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.selectBlogByBlogId    : ==>  Preparing: select * from blog where blog_id = ? 
2021-07-28 11:02:11.679 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.selectBlogByBlogId    : ==> Parameters: 28(String)
2021-07-28 11:02:11.680 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:02:11.680 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:02:11.681 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:02:11.681 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:02:11.682 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:02:11.683 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:02:11.683 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.selectBlogByBlogId    : <==      Total: 1
2021-07-28 11:02:11.683 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.selectByPrimaryKey    : ==>  Preparing: SELECT blog_id,type_id,user_id,title,content,first_picture,flag,description,views,appreciation,share_statement,comment,publish,recommend,create_time,update_time FROM blog WHERE blog_id = ? 
2021-07-28 11:02:11.684 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.selectByPrimaryKey    : ==> Parameters: 28(Integer)
2021-07-28 11:02:11.685 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.selectByPrimaryKey    : <==      Total: 1
2021-07-28 11:02:11.685 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.m.BlogTagMapper.deleteByExample    : ==>  Preparing: DELETE FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 11:02:11.685 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.m.BlogTagMapper.deleteByExample    : ==> Parameters: 28(Integer)
2021-07-28 11:02:11.688 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.m.BlogTagMapper.deleteByExample    : <==    Updates: 2
2021-07-28 11:02:11.689 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.m.CommentMapper.deleteByExample    : ==>  Preparing: DELETE FROM comment WHERE ( ( blog_id = ? ) ) 
2021-07-28 11:02:11.690 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.m.CommentMapper.deleteByExample    : ==> Parameters: 28(Integer)
2021-07-28 11:02:11.691 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.m.CommentMapper.deleteByExample    : <==    Updates: 0
2021-07-28 11:02:11.691 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.deleteByPrimaryKey    : ==>  Preparing: DELETE FROM blog WHERE blog_id = ? 
2021-07-28 11:02:11.691 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.deleteByPrimaryKey    : ==> Parameters: 28(Integer)
2021-07-28 11:02:11.693 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.deleteByPrimaryKey    : <==    Updates: 1
2021-07-28 11:02:11.694  INFO 6868 --- [http-nio-8080-exec-7] black.lyg.blog.service.BlogService       : 更新redis中BlogCount的数值,变化为：-1
2021-07-28 11:02:11.695  INFO 6868 --- [http-nio-8080-exec-7] black.lyg.blog.service.BlogService       : 从redis中获取到typeTops的数据：TypeTops(typeId=6, name=学习日志, blogNumber=6)
2021-07-28 11:02:11.696  INFO 6868 --- [http-nio-8080-exec-7] black.lyg.blog.service.BlogService       : 更新redis中BlogTypes中相关的数据TypeTops(typeId=6, name=学习日志, blogNumber=5)
2021-07-28 11:02:11.697  INFO 6868 --- [http-nio-8080-exec-7] black.lyg.blog.service.BlogService       : 删除redis中key为blogtags的hash数据类型
2021-07-28 11:02:11.697  INFO 6868 --- [http-nio-8080-exec-7] black.lyg.blog.service.BlogService       : 删除redis中TheLatestBlog中有关该博客的数据，标题为好好学习，天天向上
2021-07-28 11:02:11.698  INFO 6868 --- [http-nio-8080-exec-7] black.lyg.blog.service.BlogService       : 删除redis中AllBlog中有关该博客的数据，标题为好好学习，天天向上
2021-07-28 11:02:11.700  INFO 6868 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:02:11.700  INFO 6868 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : result : redirect:/admin/blogs/admin 
2021-07-28 11:02:11.705  INFO 6868 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{message=删除成功}, admin, 1]}
2021-07-28 11:02:11.706 DEBUG 6868 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 11:02:11.706 DEBUG 6868 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 11:02:11.707 DEBUG 6868 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 11:02:11.708 DEBUG 6868 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 11:02:11.708 DEBUG 6868 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 11:02:11.709 DEBUG 6868 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 11:02:11.709 DEBUG 6868 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 11:02:11.709 DEBUG 6868 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 11:02:11.711 DEBUG 6868 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:02:11.712 DEBUG 6868 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:02:11.712 DEBUG 6868 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:02:11.712 DEBUG 6868 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:02:11.712 DEBUG 6868 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:02:11.713 DEBUG 6868 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:02:11.714 DEBUG 6868 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:02:11.714 DEBUG 6868 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:02:11.714 DEBUG 6868 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:02:11.715 DEBUG 6868 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 11:02:11.715 DEBUG 6868 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 11:02:11.715 DEBUG 6868 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 11:02:11.716 DEBUG 6868 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 11:02:11.716  INFO 6868 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:02:11.716  INFO 6868 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 11:02:11.995  INFO 6868 --- [http-nio-8080-exec-6] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:02:17.007 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==>  Preparing: SELECT count(0) FROM blog 
2021-07-28 11:02:17.008 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==> Parameters: 
2021-07-28 11:02:17.009 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.findBlogAll_COUNT     : <==      Total: 1
2021-07-28 11:02:17.009 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc LIMIT ? 
2021-07-28 11:02:17.009 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 5(Integer)
2021-07-28 11:02:17.011 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:02:17.011 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:02:17.012 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:02:17.012 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:02:17.012 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:02:17.013 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:02:17.013 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:02:17.013 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:02:17.013 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:02:17.014 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:02:17.014 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 11:02:17.014 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:02:17.014 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:02:17.015 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 11:02:17.015 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:02:17.015 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:02:17.015 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 11:02:17.016 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:02:17.016 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 5
2021-07-28 11:02:17.018  INFO 6868 --- [http-nio-8080-exec-8] black.lyg.blog.service.TagService        : 从redis中获取数据：[]
2021-07-28 11:02:17.018 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.TagMapper.findSeveralTopTags     : ==>  Preparing: select distinct t.tag_id,t.name ,count(*) as number from tag t ,blog_tag bt where t.tag_id = bt.tag_id group by t.tag_id, t.name order by number desc limit ? 
2021-07-28 11:02:17.018 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.TagMapper.findSeveralTopTags     : ==> Parameters: 10(Integer)
2021-07-28 11:02:17.020 DEBUG 6868 --- [http-nio-8080-exec-8] b.l.b.m.TagMapper.findSeveralTopTags     : <==      Total: 7
2021-07-28 11:02:17.020  INFO 6868 --- [http-nio-8080-exec-8] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=21, name=Redis, BlogNumber=4)
2021-07-28 11:02:17.021  INFO 6868 --- [http-nio-8080-exec-8] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=22, name=Java, BlogNumber=4)
2021-07-28 11:02:17.021  INFO 6868 --- [http-nio-8080-exec-8] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=1, name=Spring, BlogNumber=2)
2021-07-28 11:02:17.021  INFO 6868 --- [http-nio-8080-exec-8] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=20, name=设计模式, BlogNumber=2)
2021-07-28 11:02:17.023  INFO 6868 --- [http-nio-8080-exec-8] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=24, name=测试, BlogNumber=2)
2021-07-28 11:02:17.023  INFO 6868 --- [http-nio-8080-exec-8] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=2, name=Mybatis, BlogNumber=1)
2021-07-28 11:02:17.024  INFO 6868 --- [http-nio-8080-exec-8] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=23, name=MySQL, BlogNumber=1)
2021-07-28 11:02:17.024  INFO 6868 --- [http-nio-8080-exec-8] black.lyg.blog.service.TagService        : 从Mysql中查找到由标签显示博客的数据：[TagTops(tagId=21, name=Redis, BlogNumber=4), TagTops(tagId=22, name=Java, BlogNumber=4), TagTops(tagId=1, name=Spring, BlogNumber=2), TagTops(tagId=20, name=设计模式, BlogNumber=2), TagTops(tagId=24, name=测试, BlogNumber=2), TagTops(tagId=2, name=Mybatis, BlogNumber=1), TagTops(tagId=23, name=MySQL, BlogNumber=1)]
2021-07-28 11:02:17.024  INFO 6868 --- [http-nio-8080-exec-8] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:02:17.293  INFO 6868 --- [http-nio-8080-exec-9] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:02:21.756  INFO 6868 --- [http-nio-8080-exec-2] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:03:04.296  INFO 6868 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/personal/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.PersonalController.blogs', args=[{}, admin, 1]}
2021-07-28 11:03:04.299 DEBUG 6868 --- [http-nio-8080-exec-3] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 11:03:04.299 DEBUG 6868 --- [http-nio-8080-exec-3] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 11:03:04.300 DEBUG 6868 --- [http-nio-8080-exec-3] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 11:03:04.301 DEBUG 6868 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 11:03:04.301 DEBUG 6868 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 11:03:04.301 DEBUG 6868 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 11:03:04.301  INFO 6868 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:03:04.302  INFO 6868 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : result : admin/personal 
2021-07-28 11:03:07.033  INFO 6868 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/personal/update', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.PersonalController.userInfoUadate', args=[org.apache.catalina.session.StandardSessionFacade@2b30f151, 玩泥, lyg0918@qq.com, ]}
2021-07-28 11:03:07.033 DEBUG 6868 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? 
2021-07-28 11:03:07.034 DEBUG 6868 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String)
2021-07-28 11:03:07.035 DEBUG 6868 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 11:03:07.035 DEBUG 6868 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.updateByPrimaryKey    : ==>  Preparing: UPDATE user SET nick_name = ?,username = ?,password = ?,email = ?,avatar = ?,type = ?,create_time = ?,update_time = ? WHERE user_id = ? 
2021-07-28 11:03:07.037 DEBUG 6868 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.updateByPrimaryKey    : ==> Parameters: 玩泥(String), admin(String), 89446CF944BBA2485A8562075A0E0BB7(String), lyg0918@qq.com(String), https://cdn.glitch.com/bcca76bf-b6da-4c18-9b77-b7d3e3601f26%2Fuser.png?v=1627092421035(String), null, 2021-07-24 19:53:23.0(Timestamp), 2021-07-28 11:03:07.035(Timestamp), 1(Integer)
2021-07-28 11:03:07.041 DEBUG 6868 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.updateByPrimaryKey    : <==    Updates: 1
2021-07-28 11:03:07.041  INFO 6868 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:03:07.041  INFO 6868 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : result : redirect:/admin/personal/admin 
2021-07-28 11:03:07.047  INFO 6868 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/personal/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.PersonalController.blogs', args=[{}, admin, 1]}
2021-07-28 11:03:07.048 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 11:03:07.048 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 11:03:07.049 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 11:03:07.049 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 11:03:07.049 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 11:03:07.050 DEBUG 6868 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 11:03:07.050  INFO 6868 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:03:07.050  INFO 6868 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : result : admin/personal 
2021-07-28 11:10:59.222  INFO 8500 --- [restartedMain] black.lyg.blog.BlogApplication           : Starting BlogApplication on Administraror with PID 8500 (D:\Desktop\blog\blog-master\target\classes started by Administrator in D:\Desktop\blog\blog-master)
2021-07-28 11:10:59.224 DEBUG 8500 --- [restartedMain] black.lyg.blog.BlogApplication           : Running with Spring Boot v2.2.6.RELEASE, Spring v5.2.5.RELEASE
2021-07-28 11:10:59.225  INFO 8500 --- [restartedMain] black.lyg.blog.BlogApplication           : The following profiles are active: dev
2021-07-28 11:10:59.271  INFO 8500 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-07-28 11:10:59.271  INFO 8500 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-07-28 11:10:59.880  INFO 8500 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-28 11:10:59.882  INFO 8500 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-28 11:10:59.907  INFO 8500 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16ms. Found 0 Redis repository interfaces.
2021-07-28 11:11:00.003  WARN 8500 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[black.lyg.blog]' package. Please check your configuration.
2021-07-28 11:11:00.545  INFO 8500 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-07-28 11:11:00.553  INFO 8500 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-28 11:11:00.553  INFO 8500 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-28 11:11:00.554  INFO 8500 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : An older version [1.2.14] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.23]
2021-07-28 11:11:00.555  INFO 8500 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.14] using APR version [1.6.2].
2021-07-28 11:11:00.555  INFO 8500 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-07-28 11:11:00.555  INFO 8500 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-07-28 11:11:01.581  INFO 8500 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.0.2l  25 May 2017]
2021-07-28 11:11:01.696  INFO 8500 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-28 11:11:01.696  INFO 8500 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2425 ms
2021-07-28 11:11:01.737  INFO 8500 --- [restartedMain] o.s.boot.web.servlet.RegistrationBean    : Filter webStatFilter was not registered (possibly already registered?)
2021-07-28 11:11:02.736  INFO 8500 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-28 11:11:02.823  INFO 8500 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-07-28 11:11:03.301  INFO 8500 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-07-28 11:11:03.342  INFO 8500 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-07-28 11:11:03.344  INFO 8500 --- [restartedMain] black.lyg.blog.BlogApplication           : Started BlogApplication in 4.491 seconds (JVM running for 5.898)
2021-07-28 11:11:03.379  INFO 8500 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-28 11:11:04.397 DEBUG 8500 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc 
2021-07-28 11:11:04.416 DEBUG 8500 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 
2021-07-28 11:11:04.442 DEBUG 8500 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:11:04.443 DEBUG 8500 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:11:04.444 DEBUG 8500 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:11:04.446 DEBUG 8500 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:11:04.447 DEBUG 8500 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:11:04.449 DEBUG 8500 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:11:04.450 DEBUG 8500 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:11:04.450 DEBUG 8500 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:11:04.451 DEBUG 8500 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:11:04.453 DEBUG 8500 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:11:04.453 DEBUG 8500 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 11:11:04.454 DEBUG 8500 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:11:04.455 DEBUG 8500 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:11:04.455 DEBUG 8500 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 11:11:04.456 DEBUG 8500 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:11:04.457 DEBUG 8500 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:11:04.457 DEBUG 8500 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 11:11:04.458 DEBUG 8500 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:11:04.461 DEBUG 8500 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 9
2021-07-28 11:11:04.566  INFO 8500 --- [restartedMain] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2021-07-28 11:11:04.567  INFO 8500 --- [restartedMain] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2021-07-28 11:11:06.342  INFO 8500 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：条件注解@Conditional
2021-07-28 11:11:06.343  INFO 8500 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：随笔
2021-07-28 11:11:06.345  INFO 8500 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java常见关键字final、static、super、abstract、this
2021-07-28 11:11:06.346  INFO 8500 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：挖掘机技术哪家强
2021-07-28 11:11:06.347  INFO 8500 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：欢迎使用 Markdown在线编辑器 MdEditor
2021-07-28 11:11:06.350  INFO 8500 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java中 equals() 和 hashCode()的关系
2021-07-28 11:11:06.350  INFO 8500 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（二）：Hash
2021-07-28 11:11:06.351  INFO 8500 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（一）：String
2021-07-28 11:11:06.353  INFO 8500 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java合并两个int数组
2021-07-28 11:11:06.356  INFO 8500 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 初始化redis中blogCount的数量为：9
2021-07-28 11:11:14.208  INFO 8500 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-28 11:11:14.209  INFO 8500 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-28 11:11:14.217  INFO 8500 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 8 ms
2021-07-28 11:11:14.934  INFO 8500 --- [http-nio-8080-exec-2] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:11:23.334  INFO 8500 --- [http-nio-8080-exec-4] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:12:34.899  INFO 3808 --- [restartedMain] black.lyg.blog.BlogApplication           : Starting BlogApplication on Administraror with PID 3808 (D:\Desktop\blog\blog-master\target\classes started by Administrator in D:\Desktop\blog\blog-master)
2021-07-28 11:12:34.903 DEBUG 3808 --- [restartedMain] black.lyg.blog.BlogApplication           : Running with Spring Boot v2.2.6.RELEASE, Spring v5.2.5.RELEASE
2021-07-28 11:12:34.904  INFO 3808 --- [restartedMain] black.lyg.blog.BlogApplication           : The following profiles are active: dev
2021-07-28 11:12:34.955  INFO 3808 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-07-28 11:12:34.955  INFO 3808 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-07-28 11:12:35.569  INFO 3808 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-28 11:12:35.571  INFO 3808 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-28 11:12:35.597  INFO 3808 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16ms. Found 0 Redis repository interfaces.
2021-07-28 11:12:35.703  WARN 3808 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[black.lyg.blog]' package. Please check your configuration.
2021-07-28 11:12:36.299  INFO 3808 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-07-28 11:12:36.349  INFO 3808 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-28 11:12:36.350  INFO 3808 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-28 11:12:36.352  INFO 3808 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : An older version [1.2.14] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.23]
2021-07-28 11:12:36.352  INFO 3808 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.14] using APR version [1.6.2].
2021-07-28 11:12:36.352  INFO 3808 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-07-28 11:12:36.352  INFO 3808 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-07-28 11:12:37.398  INFO 3808 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.0.2l  25 May 2017]
2021-07-28 11:12:37.464  INFO 3808 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-28 11:12:37.464  INFO 3808 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2509 ms
2021-07-28 11:12:37.496  INFO 3808 --- [restartedMain] o.s.boot.web.servlet.RegistrationBean    : Filter webStatFilter was not registered (possibly already registered?)
2021-07-28 11:12:38.564  INFO 3808 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-28 11:12:38.658  INFO 3808 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-07-28 11:12:39.144  INFO 3808 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-07-28 11:12:39.191  INFO 3808 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-07-28 11:12:39.191  INFO 3808 --- [restartedMain] black.lyg.blog.BlogApplication           : Started BlogApplication in 4.731 seconds (JVM running for 6.718)
2021-07-28 11:12:39.222  INFO 3808 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-28 11:12:40.215 DEBUG 3808 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc 
2021-07-28 11:12:40.231 DEBUG 3808 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 
2021-07-28 11:12:40.247 DEBUG 3808 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:12:40.247 DEBUG 3808 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:12:40.262 DEBUG 3808 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:12:40.262 DEBUG 3808 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:12:40.262 DEBUG 3808 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:12:40.262 DEBUG 3808 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:12:40.262 DEBUG 3808 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:12:40.262 DEBUG 3808 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:12:40.262 DEBUG 3808 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:12:40.262 DEBUG 3808 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:12:40.262 DEBUG 3808 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 11:12:40.262 DEBUG 3808 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:12:40.262 DEBUG 3808 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:12:40.262 DEBUG 3808 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 11:12:40.262 DEBUG 3808 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:12:40.262 DEBUG 3808 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:12:40.262 DEBUG 3808 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 11:12:40.262 DEBUG 3808 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:12:40.262 DEBUG 3808 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 9
2021-07-28 11:12:40.375  INFO 3808 --- [restartedMain] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2021-07-28 11:12:40.375  INFO 3808 --- [restartedMain] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2021-07-28 11:12:42.040  INFO 3808 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：条件注解@Conditional
2021-07-28 11:12:42.040  INFO 3808 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：随笔
2021-07-28 11:12:42.040  INFO 3808 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java常见关键字final、static、super、abstract、this
2021-07-28 11:12:42.056  INFO 3808 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：挖掘机技术哪家强
2021-07-28 11:12:42.056  INFO 3808 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：欢迎使用 Markdown在线编辑器 MdEditor
2021-07-28 11:12:42.056  INFO 3808 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java中 equals() 和 hashCode()的关系
2021-07-28 11:12:42.056  INFO 3808 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（二）：Hash
2021-07-28 11:12:42.056  INFO 3808 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（一）：String
2021-07-28 11:12:42.056  INFO 3808 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java合并两个int数组
2021-07-28 11:12:42.056  INFO 3808 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 初始化redis中blogCount的数量为：9
2021-07-28 11:12:57.105  INFO 3808 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-28 11:12:57.105  INFO 3808 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-28 11:12:57.114  INFO 3808 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 9 ms
2021-07-28 11:12:57.273  INFO 3808 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.loginPage', args=[]}
2021-07-28 11:12:57.277  INFO 3808 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:12:57.277  INFO 3808 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : result : admin/login 
2021-07-28 11:13:07.051  INFO 3808 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.login', args=[admin, lyg0918, org.apache.catalina.session.StandardSessionFacade@273f6f7e, {}]}
2021-07-28 11:13:07.053 DEBUG 3808 --- [http-nio-8080-exec-3] .l.b.m.U.selectUserNameByNameAndPassWord : ==>  Preparing: select * from user where username = ? and password = ? 
2021-07-28 11:13:07.053 DEBUG 3808 --- [http-nio-8080-exec-3] .l.b.m.U.selectUserNameByNameAndPassWord : ==> Parameters: admin(String), 89446CF944BBA2485A8562075A0E0BB7(String)
2021-07-28 11:13:07.055 DEBUG 3808 --- [http-nio-8080-exec-3] .l.b.m.U.selectUserNameByNameAndPassWord : <==      Total: 1
2021-07-28 11:13:07.055  INFO 3808 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:13:07.055  INFO 3808 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : result : admin/index 
2021-07-28 11:13:07.394  INFO 3808 --- [http-nio-8080-exec-4] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:13:14.219  INFO 3808 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/personal/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.PersonalController.blogs', args=[{}, admin, 1]}
2021-07-28 11:13:14.243 DEBUG 3808 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 11:13:14.244 DEBUG 3808 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 11:13:14.245 DEBUG 3808 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 11:13:14.246 DEBUG 3808 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 11:13:14.247 DEBUG 3808 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 11:13:14.248 DEBUG 3808 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 11:13:14.248  INFO 3808 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:13:14.248  INFO 3808 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : result : admin/personal 
2021-07-28 11:13:24.688  INFO 3808 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 11:13:24.691 DEBUG 3808 --- [http-nio-8080-exec-7] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 11:13:24.692 DEBUG 3808 --- [http-nio-8080-exec-7] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 11:13:24.692 DEBUG 3808 --- [http-nio-8080-exec-7] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 11:13:24.693 DEBUG 3808 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 11:13:24.693 DEBUG 3808 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 11:13:24.695 DEBUG 3808 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 11:13:24.695 DEBUG 3808 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 11:13:24.695 DEBUG 3808 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 11:13:24.698 DEBUG 3808 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:13:24.698 DEBUG 3808 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:13:24.699 DEBUG 3808 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:13:24.700 DEBUG 3808 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:13:24.700 DEBUG 3808 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:13:24.701 DEBUG 3808 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:13:24.702 DEBUG 3808 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:13:24.703 DEBUG 3808 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:13:24.705 DEBUG 3808 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:13:24.705 DEBUG 3808 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 11:13:24.723 DEBUG 3808 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 11:13:24.724 DEBUG 3808 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 11:13:24.724 DEBUG 3808 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 11:13:24.724  INFO 3808 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:13:24.724  INFO 3808 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 11:13:24.995  INFO 3808 --- [http-nio-8080-exec-8] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:13:28.860  INFO 3808 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , false, admin]}
2021-07-28 11:13:42.439 DEBUG 3808 --- [http-nio-8080-exec-9] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 11:13:42.439 DEBUG 3808 --- [http-nio-8080-exec-9] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 11:13:42.439 DEBUG 3808 --- [http-nio-8080-exec-9] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 11:13:42.439 DEBUG 3808 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 11:13:42.439 DEBUG 3808 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 11:13:42.455 DEBUG 3808 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 11:16:07.350 DEBUG 3808 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 order by update_time desc 
2021-07-28 11:16:07.350 DEBUG 3808 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 
2021-07-28 11:16:07.350 DEBUG 3808 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:16:07.350 DEBUG 3808 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:16:07.350 DEBUG 3808 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:16:07.350 DEBUG 3808 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:16:07.350 DEBUG 3808 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:16:07.350 DEBUG 3808 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:16:07.350 DEBUG 3808 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:16:07.350 DEBUG 3808 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:16:07.350 DEBUG 3808 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:16:07.350 DEBUG 3808 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:16:07.350 DEBUG 3808 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 11:16:07.350 DEBUG 3808 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:16:07.350 DEBUG 3808 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:16:07.350 DEBUG 3808 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 11:16:07.366 DEBUG 3808 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:16:07.366 DEBUG 3808 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:16:07.366 DEBUG 3808 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 11:16:07.366 DEBUG 3808 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:16:07.366 DEBUG 3808 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 9
2021-07-28 11:16:07.366  INFO 3808 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:16:07.366 ERROR 3808 --- [http-nio-8080-exec-9] b.l.b.h.ControllerExceptionHandler       : Request URL : http://localhost:8080/admin/blogs/search, Exception : java.util.ArrayList cannot be cast to com.github.pagehelper.Page
2021-07-28 11:16:07.366  WARN 3808 --- [http-nio-8080-exec-9] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page]
2021-07-28 11:18:05.268  INFO 3808 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2021-07-28 11:18:05.487  INFO 3808 --- [SpringContextShutdownHook] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closing ...
2021-07-28 11:18:05.487  INFO 3808 --- [SpringContextShutdownHook] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2021-07-28 11:18:11.455  INFO 3948 --- [restartedMain] black.lyg.blog.BlogApplication           : Starting BlogApplication on Administraror with PID 3948 (D:\Desktop\blog\blog-master\target\classes started by Administrator in D:\Desktop\blog\blog-master)
2021-07-28 11:18:11.455 DEBUG 3948 --- [restartedMain] black.lyg.blog.BlogApplication           : Running with Spring Boot v2.2.6.RELEASE, Spring v5.2.5.RELEASE
2021-07-28 11:18:11.455  INFO 3948 --- [restartedMain] black.lyg.blog.BlogApplication           : The following profiles are active: dev
2021-07-28 11:18:11.489  INFO 3948 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-07-28 11:18:11.489  INFO 3948 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-07-28 11:18:11.991  INFO 3948 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-28 11:18:11.991  INFO 3948 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-28 11:18:12.022  INFO 3948 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14ms. Found 0 Redis repository interfaces.
2021-07-28 11:18:12.100  WARN 3948 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[black.lyg.blog]' package. Please check your configuration.
2021-07-28 11:18:12.570  INFO 3948 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-07-28 11:18:12.586  INFO 3948 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-28 11:18:12.586  INFO 3948 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-28 11:18:12.586  INFO 3948 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : An older version [1.2.14] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.23]
2021-07-28 11:18:12.586  INFO 3948 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.14] using APR version [1.6.2].
2021-07-28 11:18:12.586  INFO 3948 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-07-28 11:18:12.586  INFO 3948 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-07-28 11:18:13.605  INFO 3948 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.0.2l  25 May 2017]
2021-07-28 11:18:13.701  INFO 3948 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-28 11:18:13.701  INFO 3948 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2212 ms
2021-07-28 11:18:13.733  INFO 3948 --- [restartedMain] o.s.boot.web.servlet.RegistrationBean    : Filter webStatFilter was not registered (possibly already registered?)
2021-07-28 11:18:14.612  INFO 3948 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-28 11:18:14.675  INFO 3948 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-07-28 11:18:15.098  INFO 3948 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-07-28 11:18:15.145  INFO 3948 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-07-28 11:18:15.145  INFO 3948 --- [restartedMain] black.lyg.blog.BlogApplication           : Started BlogApplication in 3.99 seconds (JVM running for 5.31)
2021-07-28 11:18:15.176  INFO 3948 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-28 11:18:16.115 DEBUG 3948 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc 
2021-07-28 11:18:16.131 DEBUG 3948 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 
2021-07-28 11:18:16.162 DEBUG 3948 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:18:16.162 DEBUG 3948 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:18:16.162 DEBUG 3948 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:18:16.162 DEBUG 3948 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:18:16.162 DEBUG 3948 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:18:16.162 DEBUG 3948 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:18:16.162 DEBUG 3948 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:18:16.162 DEBUG 3948 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:18:16.162 DEBUG 3948 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:18:16.162 DEBUG 3948 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:18:16.162 DEBUG 3948 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 11:18:16.162 DEBUG 3948 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:18:16.162 DEBUG 3948 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:18:16.162 DEBUG 3948 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 11:18:16.178 DEBUG 3948 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:18:16.178 DEBUG 3948 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:18:16.178 DEBUG 3948 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 11:18:16.178 DEBUG 3948 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:18:16.178 DEBUG 3948 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 9
2021-07-28 11:18:16.256  INFO 3948 --- [restartedMain] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2021-07-28 11:18:16.272  INFO 3948 --- [restartedMain] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2021-07-28 11:18:17.906  INFO 3948 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：条件注解@Conditional
2021-07-28 11:18:17.906  INFO 3948 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：随笔
2021-07-28 11:18:17.906  INFO 3948 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java常见关键字final、static、super、abstract、this
2021-07-28 11:18:17.921  INFO 3948 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：挖掘机技术哪家强
2021-07-28 11:18:17.921  INFO 3948 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：欢迎使用 Markdown在线编辑器 MdEditor
2021-07-28 11:18:17.921  INFO 3948 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java中 equals() 和 hashCode()的关系
2021-07-28 11:18:17.921  INFO 3948 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（二）：Hash
2021-07-28 11:18:17.921  INFO 3948 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（一）：String
2021-07-28 11:18:17.921  INFO 3948 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java合并两个int数组
2021-07-28 11:18:17.921  INFO 3948 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 初始化redis中blogCount的数量为：9
2021-07-28 11:18:30.190  INFO 3948 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-28 11:18:30.190  INFO 3948 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-28 11:18:30.199  INFO 3948 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 9 ms
2021-07-28 11:18:30.216  INFO 3948 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.loginPage', args=[]}
2021-07-28 11:18:30.216  INFO 3948 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:18:30.216  INFO 3948 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : admin/login 
2021-07-28 11:18:41.580  INFO 3948 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.login', args=[admin, lyg0918, org.apache.catalina.session.StandardSessionFacade@40fd0a26, {}]}
2021-07-28 11:18:41.581 DEBUG 3948 --- [http-nio-8080-exec-6] .l.b.m.U.selectUserNameByNameAndPassWord : ==>  Preparing: select * from user where username = ? and password = ? 
2021-07-28 11:18:41.582 DEBUG 3948 --- [http-nio-8080-exec-6] .l.b.m.U.selectUserNameByNameAndPassWord : ==> Parameters: admin(String), 89446CF944BBA2485A8562075A0E0BB7(String)
2021-07-28 11:18:41.583 DEBUG 3948 --- [http-nio-8080-exec-6] .l.b.m.U.selectUserNameByNameAndPassWord : <==      Total: 1
2021-07-28 11:18:41.584  INFO 3948 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:18:41.584  INFO 3948 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : result : admin/index 
2021-07-28 11:18:41.912  INFO 3948 --- [http-nio-8080-exec-2] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:18:43.086  INFO 3948 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 11:18:43.108 DEBUG 3948 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 11:18:43.108 DEBUG 3948 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 11:18:43.109 DEBUG 3948 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 11:18:43.110 DEBUG 3948 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 11:18:43.111 DEBUG 3948 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 11:18:43.112 DEBUG 3948 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 11:18:43.112 DEBUG 3948 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 11:18:43.112 DEBUG 3948 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 11:18:43.115 DEBUG 3948 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:18:43.115 DEBUG 3948 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:18:43.117 DEBUG 3948 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:18:43.117 DEBUG 3948 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:18:43.117 DEBUG 3948 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:18:43.118 DEBUG 3948 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:18:43.119 DEBUG 3948 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:18:43.120 DEBUG 3948 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:18:43.121 DEBUG 3948 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:18:43.122 DEBUG 3948 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 11:18:43.135 DEBUG 3948 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 11:18:43.135 DEBUG 3948 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 11:18:43.137 DEBUG 3948 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 11:18:43.137  INFO 3948 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:18:43.137  INFO 3948 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 11:18:43.404  INFO 3948 --- [http-nio-8080-exec-3] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:18:47.389  INFO 3948 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 11:18:47.390 DEBUG 3948 --- [http-nio-8080-exec-7] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 11:18:47.391 DEBUG 3948 --- [http-nio-8080-exec-7] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 11:18:47.392 DEBUG 3948 --- [http-nio-8080-exec-7] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 11:18:47.393 DEBUG 3948 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 11:18:47.393 DEBUG 3948 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 11:18:47.395 DEBUG 3948 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 11:18:47.395 DEBUG 3948 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 11:18:47.395 DEBUG 3948 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 11:18:47.397 DEBUG 3948 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:18:47.398 DEBUG 3948 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:18:47.399 DEBUG 3948 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:18:47.399 DEBUG 3948 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:18:47.399 DEBUG 3948 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:18:47.401 DEBUG 3948 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:18:47.402 DEBUG 3948 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:18:47.403 DEBUG 3948 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:18:47.404 DEBUG 3948 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:18:47.405 DEBUG 3948 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 11:18:47.406 DEBUG 3948 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 11:18:47.406 DEBUG 3948 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 11:18:47.407 DEBUG 3948 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 11:18:47.407  INFO 3948 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:18:47.407  INFO 3948 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 11:18:47.667  INFO 3948 --- [http-nio-8080-exec-8] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:18:49.120  INFO 3948 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , false, admin]}
2021-07-28 11:18:49.131 DEBUG 3948 --- [http-nio-8080-exec-9] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE 1 = 1 
2021-07-28 11:18:49.131 DEBUG 3948 --- [http-nio-8080-exec-9] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==> Parameters: 
2021-07-28 11:18:49.134 DEBUG 3948 --- [http-nio-8080-exec-9] b.l.b.m.B.findBlogByKeyWords_COUNT       : <==      Total: 1
2021-07-28 11:18:49.134 DEBUG 3948 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 order by update_time desc LIMIT ? 
2021-07-28 11:18:49.134 DEBUG 3948 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 8(Integer)
2021-07-28 11:18:49.137 DEBUG 3948 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:18:49.137 DEBUG 3948 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:18:49.139 DEBUG 3948 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:18:49.139 DEBUG 3948 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:18:49.139 DEBUG 3948 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:18:49.140 DEBUG 3948 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:18:49.141 DEBUG 3948 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:18:49.141 DEBUG 3948 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:18:49.141 DEBUG 3948 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:18:49.142 DEBUG 3948 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:18:49.142 DEBUG 3948 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 11:18:49.143 DEBUG 3948 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:18:49.143 DEBUG 3948 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:18:49.143 DEBUG 3948 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 11:18:49.144 DEBUG 3948 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:18:49.144 DEBUG 3948 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:18:49.144 DEBUG 3948 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 11:18:49.145 DEBUG 3948 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:18:49.146 DEBUG 3948 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 8
2021-07-28 11:18:49.146  INFO 3948 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:18:49.146  INFO 3948 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 11:18:49.345  INFO 3948 --- [http-nio-8080-exec-10] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:19:03.470  INFO 3948 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , false, admin]}
2021-07-28 11:19:03.470  INFO 3948 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , false, admin]}
2021-07-28 11:19:03.471 DEBUG 3948 --- [http-nio-8080-exec-4] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE 1 = 1 
2021-07-28 11:19:03.471 DEBUG 3948 --- [http-nio-8080-exec-4] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==> Parameters: 
2021-07-28 11:19:03.473 DEBUG 3948 --- [http-nio-8080-exec-4] b.l.b.m.B.findBlogByKeyWords_COUNT       : <==      Total: 1
2021-07-28 11:19:03.473 DEBUG 3948 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 order by update_time desc LIMIT ? 
2021-07-28 11:19:03.473 DEBUG 3948 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 8(Integer)
2021-07-28 11:19:03.476 DEBUG 3948 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:19:03.476 DEBUG 3948 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:19:03.477 DEBUG 3948 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:19:03.477 DEBUG 3948 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:19:03.477 DEBUG 3948 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:19:03.478 DEBUG 3948 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:19:03.479 DEBUG 3948 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:19:03.479 DEBUG 3948 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:19:03.480 DEBUG 3948 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:19:03.480 DEBUG 3948 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:19:03.480 DEBUG 3948 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 11:19:03.481 DEBUG 3948 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:19:03.482 DEBUG 3948 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:19:03.482 DEBUG 3948 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 11:19:03.483 DEBUG 3948 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:19:03.483 DEBUG 3948 --- [http-nio-8080-exec-6] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE 1 = 1 
2021-07-28 11:19:03.483 DEBUG 3948 --- [http-nio-8080-exec-6] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==> Parameters: 
2021-07-28 11:19:03.483 DEBUG 3948 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:19:03.484 DEBUG 3948 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 11:19:03.486 DEBUG 3948 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:19:03.486 DEBUG 3948 --- [http-nio-8080-exec-6] b.l.b.m.B.findBlogByKeyWords_COUNT       : <==      Total: 1
2021-07-28 11:19:03.487 DEBUG 3948 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 order by update_time desc LIMIT ? 
2021-07-28 11:19:03.487 DEBUG 3948 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 8
2021-07-28 11:19:03.487  INFO 3948 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:19:03.487 DEBUG 3948 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 8(Integer)
2021-07-28 11:19:03.487  INFO 3948 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 11:19:03.490 DEBUG 3948 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:19:03.490 DEBUG 3948 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:19:03.491 DEBUG 3948 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:19:03.491 DEBUG 3948 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:19:03.491 DEBUG 3948 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:19:03.493 DEBUG 3948 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:19:03.493 DEBUG 3948 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:19:03.494 DEBUG 3948 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:19:03.494 DEBUG 3948 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:19:03.495 DEBUG 3948 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:19:03.495 DEBUG 3948 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 11:19:03.497 DEBUG 3948 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:19:03.497 DEBUG 3948 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:19:03.497 DEBUG 3948 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 11:19:03.498 DEBUG 3948 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:19:03.498 DEBUG 3948 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:19:03.498 DEBUG 3948 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 11:19:03.499 DEBUG 3948 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:19:03.500 DEBUG 3948 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 8
2021-07-28 11:19:03.500  INFO 3948 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:19:03.500  INFO 3948 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 11:19:03.671  INFO 3948 --- [http-nio-8080-exec-2] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:19:03.833  INFO 3948 --- [http-nio-8080-exec-5] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:19:41.966  INFO 6004 --- [restartedMain] black.lyg.blog.BlogApplication           : Starting BlogApplication on Administraror with PID 6004 (D:\Desktop\blog\blog-master\target\classes started by Administrator in D:\Desktop\blog\blog-master)
2021-07-28 11:19:41.967 DEBUG 6004 --- [restartedMain] black.lyg.blog.BlogApplication           : Running with Spring Boot v2.2.6.RELEASE, Spring v5.2.5.RELEASE
2021-07-28 11:19:41.967  INFO 6004 --- [restartedMain] black.lyg.blog.BlogApplication           : The following profiles are active: dev
2021-07-28 11:19:41.993  INFO 6004 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-07-28 11:19:41.993  INFO 6004 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-07-28 11:19:42.541  INFO 6004 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-28 11:19:42.541  INFO 6004 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-28 11:19:42.572  INFO 6004 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16ms. Found 0 Redis repository interfaces.
2021-07-28 11:19:42.651  WARN 6004 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[black.lyg.blog]' package. Please check your configuration.
2021-07-28 11:19:43.186  INFO 6004 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-07-28 11:19:43.201  INFO 6004 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-28 11:19:43.201  INFO 6004 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-28 11:19:43.201  INFO 6004 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : An older version [1.2.14] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.23]
2021-07-28 11:19:43.201  INFO 6004 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.14] using APR version [1.6.2].
2021-07-28 11:19:43.201  INFO 6004 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-07-28 11:19:43.201  INFO 6004 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-07-28 11:19:44.213  INFO 6004 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.0.2l  25 May 2017]
2021-07-28 11:19:44.328  INFO 6004 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-28 11:19:44.328  INFO 6004 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2335 ms
2021-07-28 11:19:44.359  INFO 6004 --- [restartedMain] o.s.boot.web.servlet.RegistrationBean    : Filter webStatFilter was not registered (possibly already registered?)
2021-07-28 11:19:45.309  INFO 6004 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-28 11:19:45.372  INFO 6004 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-07-28 11:19:45.794  INFO 6004 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-07-28 11:19:45.825  INFO 6004 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-07-28 11:19:45.841  INFO 6004 --- [restartedMain] black.lyg.blog.BlogApplication           : Started BlogApplication in 4.221 seconds (JVM running for 5.565)
2021-07-28 11:19:45.872  INFO 6004 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-28 11:19:46.846 DEBUG 6004 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc 
2021-07-28 11:19:46.878 DEBUG 6004 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 
2021-07-28 11:19:46.893 DEBUG 6004 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:19:46.893 DEBUG 6004 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:19:46.893 DEBUG 6004 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:19:46.893 DEBUG 6004 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:19:46.893 DEBUG 6004 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:19:46.893 DEBUG 6004 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:19:46.909 DEBUG 6004 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:19:46.909 DEBUG 6004 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:19:46.909 DEBUG 6004 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:19:46.909 DEBUG 6004 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:19:46.909 DEBUG 6004 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 11:19:46.909 DEBUG 6004 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:19:46.909 DEBUG 6004 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:19:46.909 DEBUG 6004 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 11:19:46.909 DEBUG 6004 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:19:46.909 DEBUG 6004 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:19:46.909 DEBUG 6004 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 11:19:46.909 DEBUG 6004 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:19:46.909 DEBUG 6004 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 9
2021-07-28 11:19:47.003  INFO 6004 --- [restartedMain] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2021-07-28 11:19:47.003  INFO 6004 --- [restartedMain] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2021-07-28 11:19:48.755  INFO 6004 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：条件注解@Conditional
2021-07-28 11:19:48.756  INFO 6004 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：随笔
2021-07-28 11:19:48.757  INFO 6004 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java常见关键字final、static、super、abstract、this
2021-07-28 11:19:48.757  INFO 6004 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：挖掘机技术哪家强
2021-07-28 11:19:48.757  INFO 6004 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：欢迎使用 Markdown在线编辑器 MdEditor
2021-07-28 11:19:48.757  INFO 6004 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java中 equals() 和 hashCode()的关系
2021-07-28 11:19:48.757  INFO 6004 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（二）：Hash
2021-07-28 11:19:48.757  INFO 6004 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（一）：String
2021-07-28 11:19:48.757  INFO 6004 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java合并两个int数组
2021-07-28 11:19:48.757  INFO 6004 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 初始化redis中blogCount的数量为：9
2021-07-28 11:19:53.929  INFO 6004 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-28 11:19:53.929  INFO 6004 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-28 11:19:53.939  INFO 6004 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 10 ms
2021-07-28 11:19:53.964  INFO 6004 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/logout', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.logout', args=[org.apache.catalina.session.StandardSessionFacade@2b411f8c]}
2021-07-28 11:19:53.967  INFO 6004 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:19:53.967  INFO 6004 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : redirect:admin 
2021-07-28 11:19:53.995  INFO 6004 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.loginPage', args=[]}
2021-07-28 11:19:53.996  INFO 6004 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:19:53.996  INFO 6004 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : result : admin/login 
2021-07-28 11:19:54.374 ERROR 6004 --- [http-nio-8080-exec-5] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: Cannot call sendError() after the response has been committed] with root cause

java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:472) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at com.alibaba.druid.support.http.WebStatFilter$StatHttpServletResponseWrapper.sendError(WebStatFilter.java:343) ~[druid-1.1.16.jar:1.1.16]
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:488) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:53) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124) ~[druid-1.1.16.jar:1.1.16]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_221]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_221]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_221]

2021-07-28 11:19:54.380 ERROR 6004 --- [http-nio-8080-exec-5] s.e.ErrorMvcAutoConfiguration$StaticView : Cannot render error page for request [/admin/admin] and exception [Cannot call sendError() after the response has been committed] as the response has already been committed. As a result, the response may have the wrong status code.
2021-07-28 11:20:01.082  INFO 6004 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.login', args=[admin, lyg0918, org.apache.catalina.session.StandardSessionFacade@2b411f8c, {}]}
2021-07-28 11:20:01.083 DEBUG 6004 --- [http-nio-8080-exec-3] .l.b.m.U.selectUserNameByNameAndPassWord : ==>  Preparing: select * from user where username = ? and password = ? 
2021-07-28 11:20:01.083 DEBUG 6004 --- [http-nio-8080-exec-3] .l.b.m.U.selectUserNameByNameAndPassWord : ==> Parameters: admin(String), 89446CF944BBA2485A8562075A0E0BB7(String)
2021-07-28 11:20:01.085 DEBUG 6004 --- [http-nio-8080-exec-3] .l.b.m.U.selectUserNameByNameAndPassWord : <==      Total: 1
2021-07-28 11:20:01.085  INFO 6004 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:20:01.085  INFO 6004 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : result : admin/index 
2021-07-28 11:20:01.412  INFO 6004 --- [http-nio-8080-exec-9] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:20:02.628  INFO 6004 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 11:20:02.648 DEBUG 6004 --- [http-nio-8080-exec-2] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 11:20:02.648 DEBUG 6004 --- [http-nio-8080-exec-2] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 11:20:02.649 DEBUG 6004 --- [http-nio-8080-exec-2] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 11:20:02.650 DEBUG 6004 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 11:20:02.651 DEBUG 6004 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 11:20:02.652 DEBUG 6004 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 11:20:02.653 DEBUG 6004 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 11:20:02.653 DEBUG 6004 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 11:20:02.657 DEBUG 6004 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:20:02.657 DEBUG 6004 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:20:02.658 DEBUG 6004 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:20:02.659 DEBUG 6004 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:20:02.659 DEBUG 6004 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:20:02.659 DEBUG 6004 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:20:02.660 DEBUG 6004 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:20:02.660 DEBUG 6004 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:20:02.661 DEBUG 6004 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:20:02.662 DEBUG 6004 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 11:20:02.676 DEBUG 6004 --- [http-nio-8080-exec-2] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 11:20:02.676 DEBUG 6004 --- [http-nio-8080-exec-2] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 11:20:02.677 DEBUG 6004 --- [http-nio-8080-exec-2] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 11:20:02.678  INFO 6004 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:20:02.678  INFO 6004 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 11:20:02.927  INFO 6004 --- [http-nio-8080-exec-6] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:20:05.343  INFO 6004 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , false, admin]}
2021-07-28 11:20:05.354 DEBUG 6004 --- [http-nio-8080-exec-8] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE 1 = 1 
2021-07-28 11:20:05.355 DEBUG 6004 --- [http-nio-8080-exec-8] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==> Parameters: 
2021-07-28 11:20:05.358 DEBUG 6004 --- [http-nio-8080-exec-8] b.l.b.m.B.findBlogByKeyWords_COUNT       : <==      Total: 1
2021-07-28 11:20:05.359 DEBUG 6004 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 order by update_time desc LIMIT ? 
2021-07-28 11:20:05.359 DEBUG 6004 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 8(Integer)
2021-07-28 11:20:05.362 DEBUG 6004 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:20:05.362 DEBUG 6004 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:20:05.363 DEBUG 6004 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:20:05.364 DEBUG 6004 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:20:05.364 DEBUG 6004 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:20:05.365 DEBUG 6004 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:20:05.365 DEBUG 6004 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:20:05.366 DEBUG 6004 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:20:05.366 DEBUG 6004 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:20:05.367 DEBUG 6004 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:20:05.367 DEBUG 6004 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 11:20:05.368 DEBUG 6004 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:20:05.369 DEBUG 6004 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:20:05.369 DEBUG 6004 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 11:20:05.370 DEBUG 6004 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:20:05.371 DEBUG 6004 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:20:05.371 DEBUG 6004 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 11:20:05.372 DEBUG 6004 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:20:05.373 DEBUG 6004 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 8
2021-07-28 11:20:05.374  INFO 6004 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:20:05.374  INFO 6004 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : result : admin/blogs :: blogList 
2021-07-28 11:20:06.907  INFO 6004 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 11:20:06.908 DEBUG 6004 --- [http-nio-8080-exec-4] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 11:20:06.908 DEBUG 6004 --- [http-nio-8080-exec-4] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 11:20:06.909 DEBUG 6004 --- [http-nio-8080-exec-4] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 11:20:06.910 DEBUG 6004 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 11:20:06.910 DEBUG 6004 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 11:20:06.912 DEBUG 6004 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 11:20:06.913 DEBUG 6004 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 11:20:06.914 DEBUG 6004 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 11:20:06.916 DEBUG 6004 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:20:06.916 DEBUG 6004 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:20:06.917 DEBUG 6004 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:20:06.917 DEBUG 6004 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:20:06.917 DEBUG 6004 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:20:06.918 DEBUG 6004 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:20:06.920 DEBUG 6004 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:20:06.920 DEBUG 6004 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:20:06.921 DEBUG 6004 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:20:06.922 DEBUG 6004 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 11:20:06.923 DEBUG 6004 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 11:20:06.923 DEBUG 6004 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 11:20:06.924 DEBUG 6004 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 11:20:06.925  INFO 6004 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:20:06.925  INFO 6004 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 11:20:07.180  INFO 6004 --- [http-nio-8080-exec-10] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:20:08.456  INFO 6004 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , false, admin]}
2021-07-28 11:20:08.457 DEBUG 6004 --- [http-nio-8080-exec-1] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE 1 = 1 
2021-07-28 11:20:08.457 DEBUG 6004 --- [http-nio-8080-exec-1] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==> Parameters: 
2021-07-28 11:20:08.459 DEBUG 6004 --- [http-nio-8080-exec-1] b.l.b.m.B.findBlogByKeyWords_COUNT       : <==      Total: 1
2021-07-28 11:20:08.460 DEBUG 6004 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 order by update_time desc LIMIT ? 
2021-07-28 11:20:08.460 DEBUG 6004 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 8(Integer)
2021-07-28 11:20:08.463 DEBUG 6004 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:20:08.463 DEBUG 6004 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:20:08.464 DEBUG 6004 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:20:08.464 DEBUG 6004 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:20:08.464 DEBUG 6004 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:20:08.465 DEBUG 6004 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:20:08.465 DEBUG 6004 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:20:08.465 DEBUG 6004 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:20:08.466 DEBUG 6004 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:20:08.466 DEBUG 6004 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:20:08.467 DEBUG 6004 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 11:20:08.467 DEBUG 6004 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:20:08.467 DEBUG 6004 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:20:08.468 DEBUG 6004 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 11:20:08.468 DEBUG 6004 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:20:08.469 DEBUG 6004 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:20:08.469 DEBUG 6004 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 11:20:08.469 DEBUG 6004 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:20:08.470 DEBUG 6004 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 8
2021-07-28 11:20:08.471  INFO 6004 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:20:08.471  INFO 6004 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : admin/blogs :: blogList 
2021-07-28 11:23:32.871  INFO 4448 --- [restartedMain] black.lyg.blog.BlogApplication           : Starting BlogApplication on Administraror with PID 4448 (D:\Desktop\blog\blog-master\target\classes started by Administrator in D:\Desktop\blog\blog-master)
2021-07-28 11:23:32.871 DEBUG 4448 --- [restartedMain] black.lyg.blog.BlogApplication           : Running with Spring Boot v2.2.6.RELEASE, Spring v5.2.5.RELEASE
2021-07-28 11:23:32.871  INFO 4448 --- [restartedMain] black.lyg.blog.BlogApplication           : The following profiles are active: dev
2021-07-28 11:23:32.902  INFO 4448 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-07-28 11:23:32.902  INFO 4448 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-07-28 11:23:33.419  INFO 4448 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-28 11:23:33.419  INFO 4448 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-28 11:23:33.435  INFO 4448 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15ms. Found 0 Redis repository interfaces.
2021-07-28 11:23:33.529  WARN 4448 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[black.lyg.blog]' package. Please check your configuration.
2021-07-28 11:23:34.005  INFO 4448 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-07-28 11:23:34.021  INFO 4448 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-28 11:23:34.021  INFO 4448 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-28 11:23:34.021  INFO 4448 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : An older version [1.2.14] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.23]
2021-07-28 11:23:34.021  INFO 4448 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.14] using APR version [1.6.2].
2021-07-28 11:23:34.021  INFO 4448 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-07-28 11:23:34.021  INFO 4448 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-07-28 11:23:35.042  INFO 4448 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.0.2l  25 May 2017]
2021-07-28 11:23:35.137  INFO 4448 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-28 11:23:35.137  INFO 4448 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2235 ms
2021-07-28 11:23:35.168  INFO 4448 --- [restartedMain] o.s.boot.web.servlet.RegistrationBean    : Filter webStatFilter was not registered (possibly already registered?)
2021-07-28 11:23:36.055  INFO 4448 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-28 11:23:36.134  INFO 4448 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-07-28 11:23:36.564  INFO 4448 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-07-28 11:23:36.596  INFO 4448 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-07-28 11:23:36.612  INFO 4448 --- [restartedMain] black.lyg.blog.BlogApplication           : Started BlogApplication in 4.051 seconds (JVM running for 6.69)
2021-07-28 11:23:36.643  INFO 4448 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-28 11:23:37.589 DEBUG 4448 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc 
2021-07-28 11:23:37.605 DEBUG 4448 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 
2021-07-28 11:23:37.621 DEBUG 4448 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:23:37.621 DEBUG 4448 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:23:37.621 DEBUG 4448 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:23:37.621 DEBUG 4448 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:23:37.621 DEBUG 4448 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:23:37.621 DEBUG 4448 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:23:37.621 DEBUG 4448 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:23:37.621 DEBUG 4448 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:23:37.636 DEBUG 4448 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:23:37.636 DEBUG 4448 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:23:37.636 DEBUG 4448 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 11:23:37.636 DEBUG 4448 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:23:37.636 DEBUG 4448 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:23:37.636 DEBUG 4448 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 11:23:37.636 DEBUG 4448 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:23:37.636 DEBUG 4448 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:23:37.636 DEBUG 4448 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 11:23:37.636 DEBUG 4448 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:23:37.636 DEBUG 4448 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 9
2021-07-28 11:23:37.730  INFO 4448 --- [restartedMain] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2021-07-28 11:23:37.730  INFO 4448 --- [restartedMain] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2021-07-28 11:23:39.374  INFO 4448 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：条件注解@Conditional
2021-07-28 11:23:39.374  INFO 4448 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：随笔
2021-07-28 11:23:39.374  INFO 4448 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java常见关键字final、static、super、abstract、this
2021-07-28 11:23:39.374  INFO 4448 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：挖掘机技术哪家强
2021-07-28 11:23:39.374  INFO 4448 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：欢迎使用 Markdown在线编辑器 MdEditor
2021-07-28 11:23:39.374  INFO 4448 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java中 equals() 和 hashCode()的关系
2021-07-28 11:23:39.374  INFO 4448 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（二）：Hash
2021-07-28 11:23:39.374  INFO 4448 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（一）：String
2021-07-28 11:23:39.374  INFO 4448 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java合并两个int数组
2021-07-28 11:23:39.389  INFO 4448 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 初始化redis中blogCount的数量为：9
2021-07-28 11:23:53.701  INFO 4448 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-28 11:23:53.701  INFO 4448 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-28 11:23:53.709  INFO 4448 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 8 ms
2021-07-28 11:23:53.714  INFO 4448 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.loginPage', args=[]}
2021-07-28 11:23:53.730  INFO 4448 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:23:53.730  INFO 4448 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : admin/login 
2021-07-28 11:24:12.108  INFO 4448 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.login', args=[admin, lyg0918, org.apache.catalina.session.StandardSessionFacade@606c7d0b, {}]}
2021-07-28 11:24:12.109 DEBUG 4448 --- [http-nio-8080-exec-5] .l.b.m.U.selectUserNameByNameAndPassWord : ==>  Preparing: select * from user where username = ? and password = ? 
2021-07-28 11:24:12.110 DEBUG 4448 --- [http-nio-8080-exec-5] .l.b.m.U.selectUserNameByNameAndPassWord : ==> Parameters: admin(String), 89446CF944BBA2485A8562075A0E0BB7(String)
2021-07-28 11:24:12.111 DEBUG 4448 --- [http-nio-8080-exec-5] .l.b.m.U.selectUserNameByNameAndPassWord : <==      Total: 1
2021-07-28 11:24:12.111  INFO 4448 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:24:12.112  INFO 4448 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : result : admin/index 
2021-07-28 11:24:12.446  INFO 4448 --- [http-nio-8080-exec-2] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:24:16.164  INFO 4448 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 11:24:16.186 DEBUG 4448 --- [http-nio-8080-exec-6] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 11:24:16.187 DEBUG 4448 --- [http-nio-8080-exec-6] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 11:24:16.188 DEBUG 4448 --- [http-nio-8080-exec-6] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 11:24:16.189 DEBUG 4448 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 11:24:16.190 DEBUG 4448 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 11:24:16.191 DEBUG 4448 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 11:24:16.191 DEBUG 4448 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 11:24:16.192 DEBUG 4448 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 11:24:16.195 DEBUG 4448 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:24:16.195 DEBUG 4448 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:24:16.196 DEBUG 4448 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:24:16.196 DEBUG 4448 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:24:16.196 DEBUG 4448 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:24:16.198 DEBUG 4448 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:24:16.199 DEBUG 4448 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:24:16.199 DEBUG 4448 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:24:16.201 DEBUG 4448 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:24:16.202 DEBUG 4448 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 11:24:16.215 DEBUG 4448 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 11:24:16.216 DEBUG 4448 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 11:24:16.218 DEBUG 4448 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 11:24:16.218  INFO 4448 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:24:16.218  INFO 4448 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 11:24:16.501  INFO 4448 --- [http-nio-8080-exec-10] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:24:19.435  INFO 4448 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , false, admin]}
2021-07-28 11:24:19.436 DEBUG 4448 --- [http-nio-8080-exec-9] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 11:24:19.436 DEBUG 4448 --- [http-nio-8080-exec-9] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 11:24:19.438 DEBUG 4448 --- [http-nio-8080-exec-9] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 11:24:19.439 DEBUG 4448 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 11:24:19.441 DEBUG 4448 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 11:24:19.441 DEBUG 4448 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 11:24:19.452 DEBUG 4448 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 order by update_time desc 
2021-07-28 11:24:19.454 DEBUG 4448 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 
2021-07-28 11:24:19.455 DEBUG 4448 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:24:19.456 DEBUG 4448 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:24:19.457 DEBUG 4448 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:24:19.457 DEBUG 4448 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:24:19.457 DEBUG 4448 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:24:19.459 DEBUG 4448 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:24:19.459 DEBUG 4448 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:24:19.459 DEBUG 4448 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:24:19.461 DEBUG 4448 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:24:19.461 DEBUG 4448 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:24:19.461 DEBUG 4448 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 11:24:19.463 DEBUG 4448 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:24:19.463 DEBUG 4448 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:24:19.463 DEBUG 4448 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 11:24:19.464 DEBUG 4448 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:24:19.465 DEBUG 4448 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:24:19.465 DEBUG 4448 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 11:24:19.468 DEBUG 4448 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:24:19.469 DEBUG 4448 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 9
2021-07-28 11:24:19.470  INFO 4448 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:24:19.471 ERROR 4448 --- [http-nio-8080-exec-9] b.l.b.h.ControllerExceptionHandler       : Request URL : http://localhost:8080/admin/blogs/search, Exception : java.util.ArrayList cannot be cast to com.github.pagehelper.Page
2021-07-28 11:24:19.471  WARN 4448 --- [http-nio-8080-exec-9] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page]
2021-07-28 11:41:14.845  INFO 5204 --- [restartedMain] black.lyg.blog.BlogApplication           : Starting BlogApplication on Administraror with PID 5204 (D:\Desktop\blog\blog-master\target\classes started by Administrator in D:\Desktop\blog\blog-master)
2021-07-28 11:41:14.847 DEBUG 5204 --- [restartedMain] black.lyg.blog.BlogApplication           : Running with Spring Boot v2.2.6.RELEASE, Spring v5.2.5.RELEASE
2021-07-28 11:41:14.847  INFO 5204 --- [restartedMain] black.lyg.blog.BlogApplication           : The following profiles are active: dev
2021-07-28 11:41:14.876  INFO 5204 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-07-28 11:41:14.876  INFO 5204 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-07-28 11:41:15.402  INFO 5204 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-28 11:41:15.402  INFO 5204 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-28 11:41:15.424  INFO 5204 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16ms. Found 0 Redis repository interfaces.
2021-07-28 11:41:15.528  WARN 5204 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[black.lyg.blog]' package. Please check your configuration.
2021-07-28 11:41:16.065  INFO 5204 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-07-28 11:41:16.065  INFO 5204 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-28 11:41:16.065  INFO 5204 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-28 11:41:16.065  INFO 5204 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : An older version [1.2.14] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.23]
2021-07-28 11:41:16.065  INFO 5204 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.14] using APR version [1.6.2].
2021-07-28 11:41:16.065  INFO 5204 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-07-28 11:41:16.065  INFO 5204 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-07-28 11:41:17.078  INFO 5204 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.0.2l  25 May 2017]
2021-07-28 11:41:17.184  INFO 5204 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-28 11:41:17.184  INFO 5204 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2293 ms
2021-07-28 11:41:17.217  INFO 5204 --- [restartedMain] o.s.boot.web.servlet.RegistrationBean    : Filter webStatFilter was not registered (possibly already registered?)
2021-07-28 11:41:18.202  INFO 5204 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-28 11:41:18.260  INFO 5204 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-07-28 11:41:18.727  INFO 5204 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-07-28 11:41:18.760  INFO 5204 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-07-28 11:41:18.776  INFO 5204 --- [restartedMain] black.lyg.blog.BlogApplication           : Started BlogApplication in 4.288 seconds (JVM running for 5.749)
2021-07-28 11:41:18.794  INFO 5204 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-28 11:41:19.781 DEBUG 5204 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc 
2021-07-28 11:41:19.798 DEBUG 5204 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 
2021-07-28 11:41:19.824 DEBUG 5204 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:41:19.824 DEBUG 5204 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:41:19.826 DEBUG 5204 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:41:19.828 DEBUG 5204 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:41:19.828 DEBUG 5204 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:41:19.830 DEBUG 5204 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:41:19.830 DEBUG 5204 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:41:19.831 DEBUG 5204 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:41:19.832 DEBUG 5204 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:41:19.833 DEBUG 5204 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:41:19.833 DEBUG 5204 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 11:41:19.834 DEBUG 5204 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:41:19.835 DEBUG 5204 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:41:19.835 DEBUG 5204 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 11:41:19.836 DEBUG 5204 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:41:19.836 DEBUG 5204 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:41:19.837 DEBUG 5204 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 11:41:19.838 DEBUG 5204 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:41:19.840 DEBUG 5204 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 9
2021-07-28 11:41:19.941  INFO 5204 --- [restartedMain] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2021-07-28 11:41:19.942  INFO 5204 --- [restartedMain] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2021-07-28 11:41:21.668  INFO 5204 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：条件注解@Conditional
2021-07-28 11:41:21.669  INFO 5204 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：随笔
2021-07-28 11:41:21.671  INFO 5204 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java常见关键字final、static、super、abstract、this
2021-07-28 11:41:21.672  INFO 5204 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：挖掘机技术哪家强
2021-07-28 11:41:21.673  INFO 5204 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：欢迎使用 Markdown在线编辑器 MdEditor
2021-07-28 11:41:21.674  INFO 5204 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java中 equals() 和 hashCode()的关系
2021-07-28 11:41:21.676  INFO 5204 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（二）：Hash
2021-07-28 11:41:21.677  INFO 5204 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（一）：String
2021-07-28 11:41:21.678  INFO 5204 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java合并两个int数组
2021-07-28 11:41:21.680  INFO 5204 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 初始化redis中blogCount的数量为：9
2021-07-28 11:41:28.902  INFO 5204 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-28 11:41:28.902  INFO 5204 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-28 11:41:28.910  INFO 5204 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 8 ms
2021-07-28 11:41:28.926  INFO 5204 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.loginPage', args=[]}
2021-07-28 11:41:28.926  INFO 5204 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:41:28.926  INFO 5204 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : admin/login 
2021-07-28 11:41:36.205  INFO 5204 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.login', args=[admin, lyg0918, org.apache.catalina.session.StandardSessionFacade@6a2ce3e0, {}]}
2021-07-28 11:41:36.207 DEBUG 5204 --- [http-nio-8080-exec-8] .l.b.m.U.selectUserNameByNameAndPassWord : ==>  Preparing: select * from user where username = ? and password = ? 
2021-07-28 11:41:36.207 DEBUG 5204 --- [http-nio-8080-exec-8] .l.b.m.U.selectUserNameByNameAndPassWord : ==> Parameters: admin(String), 89446CF944BBA2485A8562075A0E0BB7(String)
2021-07-28 11:41:36.208 DEBUG 5204 --- [http-nio-8080-exec-8] .l.b.m.U.selectUserNameByNameAndPassWord : <==      Total: 1
2021-07-28 11:41:36.208  INFO 5204 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:41:36.208  INFO 5204 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : result : admin/index 
2021-07-28 11:41:36.543  INFO 5204 --- [http-nio-8080-exec-5] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:41:39.998  INFO 5204 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 11:41:40.018 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 11:41:40.019 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 11:41:40.020 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 11:41:40.021 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 11:41:40.021 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 11:41:40.023 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 11:41:40.023 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 11:41:40.024 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 11:41:40.027 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:41:40.027 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:41:40.028 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:41:40.029 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:41:40.029 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:41:40.030 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:41:40.031 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:41:40.032 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:41:40.033 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:41:40.034 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 11:41:40.047 DEBUG 5204 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 11:41:40.047 DEBUG 5204 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 11:41:40.048 DEBUG 5204 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 11:41:40.049  INFO 5204 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:41:40.049  INFO 5204 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 11:41:40.312  INFO 5204 --- [http-nio-8080-exec-3] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:41:42.247  INFO 5204 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , false, admin]}
2021-07-28 11:41:42.259 DEBUG 5204 --- [http-nio-8080-exec-9] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE 1 = 1 
2021-07-28 11:41:42.260 DEBUG 5204 --- [http-nio-8080-exec-9] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==> Parameters: 
2021-07-28 11:41:42.262 DEBUG 5204 --- [http-nio-8080-exec-9] b.l.b.m.B.findBlogByKeyWords_COUNT       : <==      Total: 1
2021-07-28 11:41:42.264 DEBUG 5204 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 order by update_time desc LIMIT ? 
2021-07-28 11:41:42.264 DEBUG 5204 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 8(Integer)
2021-07-28 11:41:42.266 DEBUG 5204 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:41:42.267 DEBUG 5204 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:41:42.268 DEBUG 5204 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:41:42.268 DEBUG 5204 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:41:42.268 DEBUG 5204 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:41:42.269 DEBUG 5204 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:41:42.269 DEBUG 5204 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:41:42.270 DEBUG 5204 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:41:42.270 DEBUG 5204 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:41:42.271 DEBUG 5204 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:41:42.271 DEBUG 5204 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 11:41:42.272 DEBUG 5204 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:41:42.273 DEBUG 5204 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:41:42.273 DEBUG 5204 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 11:41:42.274 DEBUG 5204 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:41:42.274 DEBUG 5204 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:41:42.274 DEBUG 5204 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 11:41:42.275 DEBUG 5204 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:41:42.276 DEBUG 5204 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 8
2021-07-28 11:41:42.276  INFO 5204 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:41:42.276  INFO 5204 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : result : admin/blogs :: blogList 
2021-07-28 11:42:07.625  INFO 5204 --- [Thread-13] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2021-07-28 11:42:07.755  INFO 5204 --- [Thread-13] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closing ...
2021-07-28 11:42:07.755  INFO 5204 --- [Thread-13] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2021-07-28 11:42:08.676  INFO 5204 --- [restartedMain] black.lyg.blog.BlogApplication           : Starting BlogApplication on Administraror with PID 5204 (D:\Desktop\blog\blog-master\target\classes started by Administrator in D:\Desktop\blog\blog-master)
2021-07-28 11:42:08.676 DEBUG 5204 --- [restartedMain] black.lyg.blog.BlogApplication           : Running with Spring Boot v2.2.6.RELEASE, Spring v5.2.5.RELEASE
2021-07-28 11:42:08.676  INFO 5204 --- [restartedMain] black.lyg.blog.BlogApplication           : The following profiles are active: dev
2021-07-28 11:42:08.818  INFO 5204 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-28 11:42:08.818  INFO 5204 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-28 11:42:08.834  INFO 5204 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9ms. Found 0 Redis repository interfaces.
2021-07-28 11:42:08.865  WARN 5204 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[black.lyg.blog]' package. Please check your configuration.
2021-07-28 11:42:08.977  INFO 5204 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-07-28 11:42:08.977  INFO 5204 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-28 11:42:08.977  INFO 5204 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-28 11:42:08.977  INFO 5204 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : An older version [1.2.14] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.23]
2021-07-28 11:42:08.977  INFO 5204 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.14] using APR version [1.6.2].
2021-07-28 11:42:08.977  INFO 5204 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-07-28 11:42:08.992  INFO 5204 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-07-28 11:42:08.992  INFO 5204 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.0.2l  25 May 2017]
2021-07-28 11:42:08.992  INFO 5204 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-28 11:42:08.992  INFO 5204 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 316 ms
2021-07-28 11:42:09.024  INFO 5204 --- [restartedMain] o.s.boot.web.servlet.RegistrationBean    : Filter webStatFilter was not registered (possibly already registered?)
2021-07-28 11:42:09.481  INFO 5204 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-28 11:42:09.513  INFO 5204 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-07-28 11:42:09.829  INFO 5204 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-07-28 11:42:09.850  INFO 5204 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-07-28 11:42:09.850  INFO 5204 --- [restartedMain] black.lyg.blog.BlogApplication           : Started BlogApplication in 1.186 seconds (JVM running for 56.824)
2021-07-28 11:42:09.850  INFO 5204 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2021-07-28 11:42:09.866 DEBUG 5204 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc 
2021-07-28 11:42:09.866 DEBUG 5204 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 
2021-07-28 11:42:09.866 DEBUG 5204 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:42:09.866 DEBUG 5204 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:42:09.866 DEBUG 5204 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:42:09.866 DEBUG 5204 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:42:09.866 DEBUG 5204 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:42:09.866 DEBUG 5204 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:42:09.866 DEBUG 5204 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:42:09.866 DEBUG 5204 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:42:09.866 DEBUG 5204 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:42:09.866 DEBUG 5204 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:42:09.866 DEBUG 5204 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 11:42:09.866 DEBUG 5204 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:42:09.866 DEBUG 5204 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:42:09.866 DEBUG 5204 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 11:42:09.866 DEBUG 5204 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:42:09.866 DEBUG 5204 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:42:09.866 DEBUG 5204 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 11:42:09.866 DEBUG 5204 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:42:09.866 DEBUG 5204 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 9
2021-07-28 11:42:09.881  INFO 5204 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：条件注解@Conditional
2021-07-28 11:42:09.881  INFO 5204 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：随笔
2021-07-28 11:42:09.881  INFO 5204 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java常见关键字final、static、super、abstract、this
2021-07-28 11:42:09.881  INFO 5204 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：挖掘机技术哪家强
2021-07-28 11:42:09.881  INFO 5204 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：欢迎使用 Markdown在线编辑器 MdEditor
2021-07-28 11:42:09.881  INFO 5204 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java中 equals() 和 hashCode()的关系
2021-07-28 11:42:09.897  INFO 5204 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（二）：Hash
2021-07-28 11:42:09.897  INFO 5204 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（一）：String
2021-07-28 11:42:09.897  INFO 5204 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java合并两个int数组
2021-07-28 11:42:09.897  INFO 5204 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 初始化redis中blogCount的数量为：9
2021-07-28 11:42:09.897  INFO 5204 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2021-07-28 11:42:24.535  INFO 5204 --- [http-nio-8080-exec-3] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-28 11:42:24.535  INFO 5204 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-28 11:42:24.541  INFO 5204 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed initialization in 6 ms
2021-07-28 11:42:24.545  INFO 5204 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.loginPage', args=[]}
2021-07-28 11:42:24.547  INFO 5204 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:42:24.548  INFO 5204 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : result : admin/login 
2021-07-28 11:42:35.808  INFO 5204 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.login', args=[admin, lyg0918, org.apache.catalina.session.StandardSessionFacade@49d8208c, {}]}
2021-07-28 11:42:35.809 DEBUG 5204 --- [http-nio-8080-exec-1] .l.b.m.U.selectUserNameByNameAndPassWord : ==>  Preparing: select * from user where username = ? and password = ? 
2021-07-28 11:42:35.810 DEBUG 5204 --- [http-nio-8080-exec-1] .l.b.m.U.selectUserNameByNameAndPassWord : ==> Parameters: admin(String), 89446CF944BBA2485A8562075A0E0BB7(String)
2021-07-28 11:42:35.811 DEBUG 5204 --- [http-nio-8080-exec-1] .l.b.m.U.selectUserNameByNameAndPassWord : <==      Total: 1
2021-07-28 11:42:35.812  INFO 5204 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:42:35.812  INFO 5204 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : admin/index 
2021-07-28 11:42:36.096  INFO 5204 --- [http-nio-8080-exec-4] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:42:40.629  INFO 5204 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 11:42:40.632 DEBUG 5204 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 11:42:40.632 DEBUG 5204 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 11:42:40.634 DEBUG 5204 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 11:42:40.634 DEBUG 5204 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 11:42:40.634 DEBUG 5204 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 11:42:40.635 DEBUG 5204 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 11:42:40.636 DEBUG 5204 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 11:42:40.636 DEBUG 5204 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 11:42:40.639 DEBUG 5204 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:42:40.639 DEBUG 5204 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:42:40.640 DEBUG 5204 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:42:40.640 DEBUG 5204 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:42:40.640 DEBUG 5204 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:42:40.641 DEBUG 5204 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:42:40.642 DEBUG 5204 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:42:40.642 DEBUG 5204 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:42:40.643 DEBUG 5204 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:42:40.643 DEBUG 5204 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 11:42:40.646 DEBUG 5204 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 11:42:40.647 DEBUG 5204 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 11:42:40.648 DEBUG 5204 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 11:42:40.649  INFO 5204 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:42:40.649  INFO 5204 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 11:42:40.909  INFO 5204 --- [http-nio-8080-exec-2] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:42:42.566  INFO 5204 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , false, admin]}
2021-07-28 11:42:42.567 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 11:42:42.567 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 11:42:42.568 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 11:42:42.569 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 11:42:42.569 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 11:42:42.570 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 11:42:42.571 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 order by update_time desc 
2021-07-28 11:42:42.571 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 
2021-07-28 11:42:42.574 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:42:42.575 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:42:42.575 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:42:42.576 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:42:42.576 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:42:42.577 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:42:42.577 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:42:42.578 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:42:42.578 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:42:42.580 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:42:42.580 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 11:42:42.581 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:42:42.582 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:42:42.582 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 11:42:42.583 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:42:42.583 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:42:42.584 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 11:42:42.586 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:42:42.587 DEBUG 5204 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 9
2021-07-28 11:42:42.588  INFO 5204 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:42:42.589 ERROR 5204 --- [http-nio-8080-exec-7] b.l.b.h.ControllerExceptionHandler       : Request URL : http://localhost:8080/admin/blogs/search, Exception : java.util.ArrayList cannot be cast to com.github.pagehelper.Page
2021-07-28 11:42:42.589  WARN 5204 --- [http-nio-8080-exec-7] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page]
2021-07-28 11:44:11.703  INFO 5204 --- [Thread-26] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2021-07-28 11:44:11.923  INFO 5204 --- [Thread-26] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} closing ...
2021-07-28 11:44:11.923  INFO 5204 --- [Thread-26] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} closed
2021-07-28 11:44:12.868  INFO 5204 --- [restartedMain] black.lyg.blog.BlogApplication           : Starting BlogApplication on Administraror with PID 5204 (D:\Desktop\blog\blog-master\target\classes started by Administrator in D:\Desktop\blog\blog-master)
2021-07-28 11:44:12.868 DEBUG 5204 --- [restartedMain] black.lyg.blog.BlogApplication           : Running with Spring Boot v2.2.6.RELEASE, Spring v5.2.5.RELEASE
2021-07-28 11:44:12.868  INFO 5204 --- [restartedMain] black.lyg.blog.BlogApplication           : The following profiles are active: dev
2021-07-28 11:44:13.009  INFO 5204 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-28 11:44:13.009  INFO 5204 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-28 11:44:13.024  INFO 5204 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9ms. Found 0 Redis repository interfaces.
2021-07-28 11:44:13.040  WARN 5204 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[black.lyg.blog]' package. Please check your configuration.
2021-07-28 11:44:13.165  INFO 5204 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-07-28 11:44:13.165  INFO 5204 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-28 11:44:13.165  INFO 5204 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-28 11:44:13.165  INFO 5204 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : An older version [1.2.14] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.23]
2021-07-28 11:44:13.165  INFO 5204 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.14] using APR version [1.6.2].
2021-07-28 11:44:13.165  INFO 5204 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-07-28 11:44:13.165  INFO 5204 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-07-28 11:44:13.165  INFO 5204 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.0.2l  25 May 2017]
2021-07-28 11:44:13.181  INFO 5204 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-28 11:44:13.181  INFO 5204 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 313 ms
2021-07-28 11:44:13.196  INFO 5204 --- [restartedMain] o.s.boot.web.servlet.RegistrationBean    : Filter webStatFilter was not registered (possibly already registered?)
2021-07-28 11:44:13.650  INFO 5204 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-28 11:44:13.682  INFO 5204 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-07-28 11:44:14.043  INFO 5204 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-07-28 11:44:14.058  INFO 5204 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-07-28 11:44:14.058  INFO 5204 --- [restartedMain] black.lyg.blog.BlogApplication           : Started BlogApplication in 1.205 seconds (JVM running for 181.035)
2021-07-28 11:44:14.058  INFO 5204 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-3} inited
2021-07-28 11:44:14.074 DEBUG 5204 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc 
2021-07-28 11:44:14.074 DEBUG 5204 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 
2021-07-28 11:44:14.074 DEBUG 5204 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:44:14.074 DEBUG 5204 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:44:14.074 DEBUG 5204 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:44:14.074 DEBUG 5204 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:44:14.074 DEBUG 5204 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:44:14.074 DEBUG 5204 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:44:14.074 DEBUG 5204 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:44:14.074 DEBUG 5204 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:44:14.074 DEBUG 5204 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:44:14.074 DEBUG 5204 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:44:14.074 DEBUG 5204 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 11:44:14.074 DEBUG 5204 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:44:14.074 DEBUG 5204 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:44:14.074 DEBUG 5204 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 11:44:14.074 DEBUG 5204 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:44:14.074 DEBUG 5204 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:44:14.074 DEBUG 5204 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 11:44:14.074 DEBUG 5204 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:44:14.074 DEBUG 5204 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 9
2021-07-28 11:44:14.090  INFO 5204 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：条件注解@Conditional
2021-07-28 11:44:14.090  INFO 5204 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：随笔
2021-07-28 11:44:14.090  INFO 5204 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java常见关键字final、static、super、abstract、this
2021-07-28 11:44:14.105  INFO 5204 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：挖掘机技术哪家强
2021-07-28 11:44:14.105  INFO 5204 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：欢迎使用 Markdown在线编辑器 MdEditor
2021-07-28 11:44:14.105  INFO 5204 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java中 equals() 和 hashCode()的关系
2021-07-28 11:44:14.105  INFO 5204 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（二）：Hash
2021-07-28 11:44:14.105  INFO 5204 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（一）：String
2021-07-28 11:44:14.105  INFO 5204 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java合并两个int数组
2021-07-28 11:44:14.105  INFO 5204 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 初始化redis中blogCount的数量为：9
2021-07-28 11:44:14.105  INFO 5204 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2021-07-28 11:44:27.025  INFO 5204 --- [http-nio-8080-exec-4] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-28 11:44:27.026  INFO 5204 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-28 11:44:27.034  INFO 5204 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed initialization in 8 ms
2021-07-28 11:44:27.036  INFO 5204 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.loginPage', args=[]}
2021-07-28 11:44:27.038  INFO 5204 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:44:27.039  INFO 5204 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : result : admin/login 
2021-07-28 11:44:34.564  INFO 5204 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.login', args=[admin, lyg0918, org.apache.catalina.session.StandardSessionFacade@7c7c67ab, {}]}
2021-07-28 11:44:34.565 DEBUG 5204 --- [http-nio-8080-exec-7] .l.b.m.U.selectUserNameByNameAndPassWord : ==>  Preparing: select * from user where username = ? and password = ? 
2021-07-28 11:44:34.565 DEBUG 5204 --- [http-nio-8080-exec-7] .l.b.m.U.selectUserNameByNameAndPassWord : ==> Parameters: admin(String), 89446CF944BBA2485A8562075A0E0BB7(String)
2021-07-28 11:44:34.566 DEBUG 5204 --- [http-nio-8080-exec-7] .l.b.m.U.selectUserNameByNameAndPassWord : <==      Total: 1
2021-07-28 11:44:34.567  INFO 5204 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:44:34.567  INFO 5204 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : result : admin/index 
2021-07-28 11:44:34.850  INFO 5204 --- [http-nio-8080-exec-3] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:44:36.450  INFO 5204 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 11:44:36.454 DEBUG 5204 --- [http-nio-8080-exec-10] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 11:44:36.454 DEBUG 5204 --- [http-nio-8080-exec-10] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 11:44:36.455 DEBUG 5204 --- [http-nio-8080-exec-10] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 11:44:36.455 DEBUG 5204 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 11:44:36.456 DEBUG 5204 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 11:44:36.457 DEBUG 5204 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 11:44:36.458 DEBUG 5204 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 11:44:36.458 DEBUG 5204 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 11:44:36.460 DEBUG 5204 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:44:36.460 DEBUG 5204 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:44:36.461 DEBUG 5204 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:44:36.461 DEBUG 5204 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:44:36.461 DEBUG 5204 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:44:36.463 DEBUG 5204 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:44:36.464 DEBUG 5204 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:44:36.464 DEBUG 5204 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:44:36.465 DEBUG 5204 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:44:36.465 DEBUG 5204 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 11:44:36.467 DEBUG 5204 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 11:44:36.467 DEBUG 5204 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 11:44:36.469 DEBUG 5204 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 11:44:36.470  INFO 5204 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:44:36.470  INFO 5204 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 11:44:36.724  INFO 5204 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:44:40.541  INFO 5204 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , false, admin]}
2021-07-28 11:44:40.543 DEBUG 5204 --- [http-nio-8080-exec-6] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 11:44:40.543 DEBUG 5204 --- [http-nio-8080-exec-6] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 11:44:40.544 DEBUG 5204 --- [http-nio-8080-exec-6] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 11:44:40.544 DEBUG 5204 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 11:44:40.545 DEBUG 5204 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 11:44:40.546 DEBUG 5204 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 11:44:40.546 DEBUG 5204 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 order by update_time desc 
2021-07-28 11:44:40.546 DEBUG 5204 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 
2021-07-28 11:44:40.549 DEBUG 5204 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:44:40.549 DEBUG 5204 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:44:40.550 DEBUG 5204 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:44:40.550 DEBUG 5204 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:44:40.551 DEBUG 5204 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:44:40.551 DEBUG 5204 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:44:40.552 DEBUG 5204 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:44:40.552 DEBUG 5204 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:44:40.553 DEBUG 5204 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:44:40.554 DEBUG 5204 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:44:40.554 DEBUG 5204 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 11:44:40.556 DEBUG 5204 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:44:40.556 DEBUG 5204 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:44:40.556 DEBUG 5204 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 11:44:40.557 DEBUG 5204 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:44:40.557 DEBUG 5204 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:44:40.557 DEBUG 5204 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 11:44:40.559 DEBUG 5204 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:44:40.560 DEBUG 5204 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 9
2021-07-28 11:44:40.561  INFO 5204 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:44:40.561 ERROR 5204 --- [http-nio-8080-exec-6] b.l.b.h.ControllerExceptionHandler       : Request URL : http://localhost:8080/admin/blogs/search, Exception : java.util.ArrayList cannot be cast to com.github.pagehelper.Page
2021-07-28 11:44:40.561  WARN 5204 --- [http-nio-8080-exec-6] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page]
2021-07-28 11:47:33.601  INFO 2616 --- [restartedMain] black.lyg.blog.BlogApplication           : Starting BlogApplication on Administraror with PID 2616 (D:\Desktop\blog\blog-master\target\classes started by Administrator in D:\Desktop\blog\blog-master)
2021-07-28 11:47:33.601 DEBUG 2616 --- [restartedMain] black.lyg.blog.BlogApplication           : Running with Spring Boot v2.2.6.RELEASE, Spring v5.2.5.RELEASE
2021-07-28 11:47:33.601  INFO 2616 --- [restartedMain] black.lyg.blog.BlogApplication           : The following profiles are active: dev
2021-07-28 11:47:33.636  INFO 2616 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-07-28 11:47:33.636  INFO 2616 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-07-28 11:47:34.123  INFO 2616 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-28 11:47:34.123  INFO 2616 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-28 11:47:34.154  INFO 2616 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14ms. Found 0 Redis repository interfaces.
2021-07-28 11:47:34.235  WARN 2616 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[black.lyg.blog]' package. Please check your configuration.
2021-07-28 11:47:34.705  INFO 2616 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-07-28 11:47:34.705  INFO 2616 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-28 11:47:34.705  INFO 2616 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-28 11:47:34.705  INFO 2616 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : An older version [1.2.14] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.23]
2021-07-28 11:47:34.705  INFO 2616 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.14] using APR version [1.6.2].
2021-07-28 11:47:34.705  INFO 2616 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-07-28 11:47:34.705  INFO 2616 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-07-28 11:47:35.745  INFO 2616 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.0.2l  25 May 2017]
2021-07-28 11:47:35.839  INFO 2616 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-28 11:47:35.839  INFO 2616 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2203 ms
2021-07-28 11:47:35.871  INFO 2616 --- [restartedMain] o.s.boot.web.servlet.RegistrationBean    : Filter webStatFilter was not registered (possibly already registered?)
2021-07-28 11:47:36.752  INFO 2616 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-28 11:47:36.815  INFO 2616 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-07-28 11:47:37.237  INFO 2616 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-07-28 11:47:37.284  INFO 2616 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-07-28 11:47:37.285  INFO 2616 --- [restartedMain] black.lyg.blog.BlogApplication           : Started BlogApplication in 3.991 seconds (JVM running for 5.269)
2021-07-28 11:47:37.316  INFO 2616 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-28 11:47:38.256 DEBUG 2616 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc 
2021-07-28 11:47:38.273 DEBUG 2616 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 
2021-07-28 11:47:38.289 DEBUG 2616 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:47:38.289 DEBUG 2616 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:47:38.289 DEBUG 2616 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:47:38.289 DEBUG 2616 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:47:38.289 DEBUG 2616 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:47:38.289 DEBUG 2616 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:47:38.304 DEBUG 2616 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:47:38.304 DEBUG 2616 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:47:38.304 DEBUG 2616 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:47:38.304 DEBUG 2616 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:47:38.304 DEBUG 2616 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 11:47:38.304 DEBUG 2616 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:47:38.304 DEBUG 2616 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:47:38.304 DEBUG 2616 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 11:47:38.304 DEBUG 2616 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:47:38.304 DEBUG 2616 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:47:38.304 DEBUG 2616 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 11:47:38.304 DEBUG 2616 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:47:38.304 DEBUG 2616 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 9
2021-07-28 11:47:38.398  INFO 2616 --- [restartedMain] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2021-07-28 11:47:38.398  INFO 2616 --- [restartedMain] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2021-07-28 11:47:40.043  INFO 2616 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：条件注解@Conditional
2021-07-28 11:47:40.043  INFO 2616 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：随笔
2021-07-28 11:47:40.043  INFO 2616 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java常见关键字final、static、super、abstract、this
2021-07-28 11:47:40.043  INFO 2616 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：挖掘机技术哪家强
2021-07-28 11:47:40.043  INFO 2616 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：欢迎使用 Markdown在线编辑器 MdEditor
2021-07-28 11:47:40.043  INFO 2616 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java中 equals() 和 hashCode()的关系
2021-07-28 11:47:40.043  INFO 2616 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（二）：Hash
2021-07-28 11:47:40.043  INFO 2616 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（一）：String
2021-07-28 11:47:40.043  INFO 2616 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java合并两个int数组
2021-07-28 11:47:40.043  INFO 2616 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 初始化redis中blogCount的数量为：9
2021-07-28 11:47:49.399  INFO 2616 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-28 11:47:49.400  INFO 2616 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-28 11:47:49.407  INFO 2616 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 7 ms
2021-07-28 11:47:49.430  INFO 2616 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/logout', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.logout', args=[org.apache.catalina.session.StandardSessionFacade@4399d415]}
2021-07-28 11:47:49.433  INFO 2616 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:47:49.433  INFO 2616 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : redirect:admin 
2021-07-28 11:47:49.458  INFO 2616 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.loginPage', args=[]}
2021-07-28 11:47:49.459  INFO 2616 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:47:49.460  INFO 2616 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : result : admin/login 
2021-07-28 11:47:49.852 ERROR 2616 --- [http-nio-8080-exec-4] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: Cannot call sendError() after the response has been committed] with root cause

java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:472) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at com.alibaba.druid.support.http.WebStatFilter$StatHttpServletResponseWrapper.sendError(WebStatFilter.java:343) ~[druid-1.1.16.jar:1.1.16]
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:488) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:53) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124) ~[druid-1.1.16.jar:1.1.16]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_221]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_221]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_221]

2021-07-28 11:47:49.859 ERROR 2616 --- [http-nio-8080-exec-4] s.e.ErrorMvcAutoConfiguration$StaticView : Cannot render error page for request [/admin/admin] and exception [Cannot call sendError() after the response has been committed] as the response has already been committed. As a result, the response may have the wrong status code.
2021-07-28 11:47:55.889  INFO 2616 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.login', args=[admin, lyg0918, org.apache.catalina.session.StandardSessionFacade@4399d415, {}]}
2021-07-28 11:47:55.890 DEBUG 2616 --- [http-nio-8080-exec-3] .l.b.m.U.selectUserNameByNameAndPassWord : ==>  Preparing: select * from user where username = ? and password = ? 
2021-07-28 11:47:55.890 DEBUG 2616 --- [http-nio-8080-exec-3] .l.b.m.U.selectUserNameByNameAndPassWord : ==> Parameters: admin(String), 89446CF944BBA2485A8562075A0E0BB7(String)
2021-07-28 11:47:55.892 DEBUG 2616 --- [http-nio-8080-exec-3] .l.b.m.U.selectUserNameByNameAndPassWord : <==      Total: 1
2021-07-28 11:47:55.893  INFO 2616 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:47:55.893  INFO 2616 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : result : admin/index 
2021-07-28 11:47:56.203  INFO 2616 --- [http-nio-8080-exec-2] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:47:57.980  INFO 2616 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 11:47:58.000 DEBUG 2616 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 11:47:58.000 DEBUG 2616 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 11:47:58.001 DEBUG 2616 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 11:47:58.002 DEBUG 2616 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 11:47:58.003 DEBUG 2616 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 11:47:58.004 DEBUG 2616 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 11:47:58.005 DEBUG 2616 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 11:47:58.005 DEBUG 2616 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 11:47:58.008 DEBUG 2616 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:47:58.008 DEBUG 2616 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:47:58.009 DEBUG 2616 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:47:58.009 DEBUG 2616 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:47:58.009 DEBUG 2616 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:47:58.011 DEBUG 2616 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:47:58.012 DEBUG 2616 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:47:58.012 DEBUG 2616 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:47:58.014 DEBUG 2616 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:47:58.015 DEBUG 2616 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 11:47:58.028 DEBUG 2616 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 11:47:58.028 DEBUG 2616 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 11:47:58.029 DEBUG 2616 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 11:47:58.030  INFO 2616 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:47:58.030  INFO 2616 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 11:47:58.299  INFO 2616 --- [http-nio-8080-exec-6] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:48:03.333  INFO 2616 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , false, admin]}
2021-07-28 11:48:03.346 DEBUG 2616 --- [http-nio-8080-exec-8] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE 1 = 1 
2021-07-28 11:48:03.346 DEBUG 2616 --- [http-nio-8080-exec-8] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==> Parameters: 
2021-07-28 11:48:03.349 DEBUG 2616 --- [http-nio-8080-exec-8] b.l.b.m.B.findBlogByKeyWords_COUNT       : <==      Total: 1
2021-07-28 11:48:03.349 DEBUG 2616 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 order by update_time desc LIMIT ? 
2021-07-28 11:48:03.350 DEBUG 2616 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 8(Integer)
2021-07-28 11:48:03.353 DEBUG 2616 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:48:03.353 DEBUG 2616 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:48:03.354 DEBUG 2616 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:48:03.354 DEBUG 2616 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:48:03.354 DEBUG 2616 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:48:03.355 DEBUG 2616 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:48:03.356 DEBUG 2616 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:48:03.356 DEBUG 2616 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:48:03.357 DEBUG 2616 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:48:03.357 DEBUG 2616 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:48:03.358 DEBUG 2616 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 11:48:03.359 DEBUG 2616 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:48:03.359 DEBUG 2616 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:48:03.360 DEBUG 2616 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 11:48:03.361 DEBUG 2616 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:48:03.361 DEBUG 2616 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:48:03.361 DEBUG 2616 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 11:48:03.362 DEBUG 2616 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:48:03.364 DEBUG 2616 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 8
2021-07-28 11:48:03.364  INFO 2616 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:48:03.364  INFO 2616 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : result : admin/blogs :: blogList 
2021-07-28 11:48:05.130  INFO 2616 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , false, admin]}
2021-07-28 11:48:05.131 DEBUG 2616 --- [http-nio-8080-exec-9] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE 1 = 1 
2021-07-28 11:48:05.131 DEBUG 2616 --- [http-nio-8080-exec-9] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==> Parameters: 
2021-07-28 11:48:05.133 DEBUG 2616 --- [http-nio-8080-exec-9] b.l.b.m.B.findBlogByKeyWords_COUNT       : <==      Total: 1
2021-07-28 11:48:05.133 DEBUG 2616 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 order by update_time desc LIMIT ? 
2021-07-28 11:48:05.134 DEBUG 2616 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 8(Integer)
2021-07-28 11:48:05.136 DEBUG 2616 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:48:05.136 DEBUG 2616 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:48:05.137 DEBUG 2616 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:48:05.138 DEBUG 2616 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:48:05.138 DEBUG 2616 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:48:05.140 DEBUG 2616 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:48:05.140 DEBUG 2616 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:48:05.140 DEBUG 2616 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:48:05.141 DEBUG 2616 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:48:05.142 DEBUG 2616 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:48:05.142 DEBUG 2616 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 11:48:05.143 DEBUG 2616 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:48:05.143 DEBUG 2616 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:48:05.144 DEBUG 2616 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 11:48:05.145 DEBUG 2616 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:48:05.145 DEBUG 2616 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:48:05.146 DEBUG 2616 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 11:48:05.147 DEBUG 2616 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:48:05.149 DEBUG 2616 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 8
2021-07-28 11:48:05.149  INFO 2616 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:48:05.149  INFO 2616 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : result : admin/blogs :: blogList 
2021-07-28 11:48:05.653  INFO 2616 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , false, admin]}
2021-07-28 11:48:05.654 DEBUG 2616 --- [http-nio-8080-exec-10] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE 1 = 1 
2021-07-28 11:48:05.654 DEBUG 2616 --- [http-nio-8080-exec-10] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==> Parameters: 
2021-07-28 11:48:05.656 DEBUG 2616 --- [http-nio-8080-exec-10] b.l.b.m.B.findBlogByKeyWords_COUNT       : <==      Total: 1
2021-07-28 11:48:05.656 DEBUG 2616 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 order by update_time desc LIMIT ? 
2021-07-28 11:48:05.657 DEBUG 2616 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 8(Integer)
2021-07-28 11:48:05.659 DEBUG 2616 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:48:05.659 DEBUG 2616 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:48:05.660 DEBUG 2616 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:48:05.660 DEBUG 2616 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:48:05.661 DEBUG 2616 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:48:05.662 DEBUG 2616 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:48:05.662 DEBUG 2616 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:48:05.662 DEBUG 2616 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:48:05.663 DEBUG 2616 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:48:05.663 DEBUG 2616 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:48:05.663 DEBUG 2616 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 11:48:05.664 DEBUG 2616 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:48:05.665 DEBUG 2616 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:48:05.665 DEBUG 2616 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 11:48:05.665 DEBUG 2616 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:48:05.666 DEBUG 2616 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:48:05.666 DEBUG 2616 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 11:48:05.667 DEBUG 2616 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:48:05.667 DEBUG 2616 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 8
2021-07-28 11:48:05.668  INFO 2616 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:48:05.668  INFO 2616 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : result : admin/blogs :: blogList 
2021-07-28 11:48:05.837  INFO 2616 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , false, admin]}
2021-07-28 11:48:05.837 DEBUG 2616 --- [http-nio-8080-exec-1] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE 1 = 1 
2021-07-28 11:48:05.837 DEBUG 2616 --- [http-nio-8080-exec-1] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==> Parameters: 
2021-07-28 11:48:05.839 DEBUG 2616 --- [http-nio-8080-exec-1] b.l.b.m.B.findBlogByKeyWords_COUNT       : <==      Total: 1
2021-07-28 11:48:05.840 DEBUG 2616 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 order by update_time desc LIMIT ? 
2021-07-28 11:48:05.840 DEBUG 2616 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 8(Integer)
2021-07-28 11:48:05.842 DEBUG 2616 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:48:05.842 DEBUG 2616 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:48:05.843 DEBUG 2616 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:48:05.844 DEBUG 2616 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:48:05.844 DEBUG 2616 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:48:05.845 DEBUG 2616 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:48:05.846 DEBUG 2616 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:48:05.846 DEBUG 2616 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:48:05.847 DEBUG 2616 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:48:05.847 DEBUG 2616 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:48:05.847 DEBUG 2616 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 11:48:05.847 DEBUG 2616 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:48:05.848 DEBUG 2616 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:48:05.848 DEBUG 2616 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 11:48:05.848 DEBUG 2616 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:48:05.848 DEBUG 2616 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:48:05.848 DEBUG 2616 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 11:48:05.849 DEBUG 2616 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:48:05.850 DEBUG 2616 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 8
2021-07-28 11:48:05.850  INFO 2616 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:48:05.850  INFO 2616 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : admin/blogs :: blogList 
2021-07-28 11:48:05.985  INFO 2616 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , false, admin]}
2021-07-28 11:48:05.986 DEBUG 2616 --- [http-nio-8080-exec-4] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE 1 = 1 
2021-07-28 11:48:05.986 DEBUG 2616 --- [http-nio-8080-exec-4] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==> Parameters: 
2021-07-28 11:48:05.988 DEBUG 2616 --- [http-nio-8080-exec-4] b.l.b.m.B.findBlogByKeyWords_COUNT       : <==      Total: 1
2021-07-28 11:48:05.988 DEBUG 2616 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 order by update_time desc LIMIT ? 
2021-07-28 11:48:05.988 DEBUG 2616 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 8(Integer)
2021-07-28 11:48:05.991 DEBUG 2616 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:48:05.991 DEBUG 2616 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:48:05.991 DEBUG 2616 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:48:05.991 DEBUG 2616 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:48:05.992 DEBUG 2616 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:48:05.992 DEBUG 2616 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:48:05.993 DEBUG 2616 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:48:05.993 DEBUG 2616 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:48:05.994 DEBUG 2616 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:48:05.995 DEBUG 2616 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:48:05.995 DEBUG 2616 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 11:48:05.996 DEBUG 2616 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:48:05.996 DEBUG 2616 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:48:05.996 DEBUG 2616 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 11:48:05.996 DEBUG 2616 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:48:05.996 DEBUG 2616 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:48:05.996 DEBUG 2616 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 11:48:05.997 DEBUG 2616 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:48:05.998 DEBUG 2616 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 8
2021-07-28 11:48:05.998  INFO 2616 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:48:05.998  INFO 2616 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : result : admin/blogs :: blogList 
2021-07-28 11:48:06.134  INFO 2616 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , false, admin]}
2021-07-28 11:48:06.135 DEBUG 2616 --- [http-nio-8080-exec-3] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE 1 = 1 
2021-07-28 11:48:06.135 DEBUG 2616 --- [http-nio-8080-exec-3] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==> Parameters: 
2021-07-28 11:48:06.136 DEBUG 2616 --- [http-nio-8080-exec-3] b.l.b.m.B.findBlogByKeyWords_COUNT       : <==      Total: 1
2021-07-28 11:48:06.136 DEBUG 2616 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 order by update_time desc LIMIT ? 
2021-07-28 11:48:06.136 DEBUG 2616 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 8(Integer)
2021-07-28 11:48:06.138 DEBUG 2616 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:48:06.139 DEBUG 2616 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:48:06.139 DEBUG 2616 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:48:06.139 DEBUG 2616 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:48:06.140 DEBUG 2616 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:48:06.140 DEBUG 2616 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:48:06.141 DEBUG 2616 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:48:06.141 DEBUG 2616 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:48:06.142 DEBUG 2616 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:48:06.142 DEBUG 2616 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:48:06.142 DEBUG 2616 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 11:48:06.143 DEBUG 2616 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:48:06.143 DEBUG 2616 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:48:06.144 DEBUG 2616 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 11:48:06.145 DEBUG 2616 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:48:06.145 DEBUG 2616 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:48:06.145 DEBUG 2616 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 11:48:06.145 DEBUG 2616 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:48:06.145 DEBUG 2616 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 8
2021-07-28 11:48:06.145  INFO 2616 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:48:06.145  INFO 2616 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : result : admin/blogs :: blogList 
2021-07-28 11:48:07.066  INFO 2616 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 11:48:07.067 DEBUG 2616 --- [http-nio-8080-exec-2] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 11:48:07.067 DEBUG 2616 --- [http-nio-8080-exec-2] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 11:48:07.068 DEBUG 2616 --- [http-nio-8080-exec-2] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 11:48:07.069 DEBUG 2616 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 11:48:07.069 DEBUG 2616 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 11:48:07.070 DEBUG 2616 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 11:48:07.070 DEBUG 2616 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 11:48:07.071 DEBUG 2616 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 11:48:07.073 DEBUG 2616 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:48:07.073 DEBUG 2616 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:48:07.074 DEBUG 2616 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:48:07.075 DEBUG 2616 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:48:07.075 DEBUG 2616 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:48:07.075 DEBUG 2616 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:48:07.075 DEBUG 2616 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:48:07.075 DEBUG 2616 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:48:07.076 DEBUG 2616 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:48:07.077 DEBUG 2616 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 11:48:07.077 DEBUG 2616 --- [http-nio-8080-exec-2] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 11:48:07.077 DEBUG 2616 --- [http-nio-8080-exec-2] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 11:48:07.078 DEBUG 2616 --- [http-nio-8080-exec-2] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 11:48:07.078  INFO 2616 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:48:07.078  INFO 2616 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 11:48:07.329  INFO 2616 --- [http-nio-8080-exec-5] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:48:08.399  INFO 2616 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , false, admin]}
2021-07-28 11:48:08.399 DEBUG 2616 --- [http-nio-8080-exec-6] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE 1 = 1 
2021-07-28 11:48:08.400 DEBUG 2616 --- [http-nio-8080-exec-6] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==> Parameters: 
2021-07-28 11:48:08.402 DEBUG 2616 --- [http-nio-8080-exec-6] b.l.b.m.B.findBlogByKeyWords_COUNT       : <==      Total: 1
2021-07-28 11:48:08.402 DEBUG 2616 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 order by update_time desc LIMIT ? 
2021-07-28 11:48:08.402 DEBUG 2616 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 8(Integer)
2021-07-28 11:48:08.406 DEBUG 2616 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:48:08.406 DEBUG 2616 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:48:08.407 DEBUG 2616 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:48:08.407 DEBUG 2616 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:48:08.407 DEBUG 2616 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:48:08.408 DEBUG 2616 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:48:08.408 DEBUG 2616 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:48:08.409 DEBUG 2616 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:48:08.409 DEBUG 2616 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:48:08.409 DEBUG 2616 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:48:08.409 DEBUG 2616 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 11:48:08.411 DEBUG 2616 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:48:08.411 DEBUG 2616 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:48:08.411 DEBUG 2616 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 11:48:08.412 DEBUG 2616 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:48:08.413 DEBUG 2616 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:48:08.413 DEBUG 2616 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 11:48:08.414 DEBUG 2616 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:48:08.415 DEBUG 2616 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 8
2021-07-28 11:48:08.415  INFO 2616 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:48:08.415  INFO 2616 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : result : admin/blogs :: blogList 
2021-07-28 11:49:54.544  INFO 10244 --- [restartedMain] black.lyg.blog.BlogApplication           : Starting BlogApplication on Administraror with PID 10244 (D:\Desktop\blog\blog-master\target\classes started by Administrator in D:\Desktop\blog\blog-master)
2021-07-28 11:49:54.547 DEBUG 10244 --- [restartedMain] black.lyg.blog.BlogApplication           : Running with Spring Boot v2.2.6.RELEASE, Spring v5.2.5.RELEASE
2021-07-28 11:49:54.547  INFO 10244 --- [restartedMain] black.lyg.blog.BlogApplication           : The following profiles are active: dev
2021-07-28 11:49:54.582  INFO 10244 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-07-28 11:49:54.582  INFO 10244 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-07-28 11:49:55.090  INFO 10244 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-28 11:49:55.090  INFO 10244 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-28 11:49:55.105  INFO 10244 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15ms. Found 0 Redis repository interfaces.
2021-07-28 11:49:55.199  WARN 10244 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[black.lyg.blog]' package. Please check your configuration.
2021-07-28 11:49:55.658  INFO 10244 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-07-28 11:49:55.658  INFO 10244 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-28 11:49:55.658  INFO 10244 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-28 11:49:55.674  INFO 10244 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : An older version [1.2.14] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.23]
2021-07-28 11:49:55.674  INFO 10244 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.14] using APR version [1.6.2].
2021-07-28 11:49:55.674  INFO 10244 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-07-28 11:49:55.674  INFO 10244 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-07-28 11:49:56.691  INFO 10244 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.0.2l  25 May 2017]
2021-07-28 11:49:56.775  INFO 10244 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-28 11:49:56.775  INFO 10244 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2193 ms
2021-07-28 11:49:56.822  INFO 10244 --- [restartedMain] o.s.boot.web.servlet.RegistrationBean    : Filter webStatFilter was not registered (possibly already registered?)
2021-07-28 11:49:57.703  INFO 10244 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-28 11:49:57.766  INFO 10244 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-07-28 11:49:58.191  INFO 10244 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-07-28 11:49:58.222  INFO 10244 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-07-28 11:49:58.222  INFO 10244 --- [restartedMain] black.lyg.blog.BlogApplication           : Started BlogApplication in 3.996 seconds (JVM running for 5.285)
2021-07-28 11:49:58.254  INFO 10244 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-28 11:49:59.213 DEBUG 10244 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc 
2021-07-28 11:49:59.228 DEBUG 10244 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 
2021-07-28 11:49:59.260 DEBUG 10244 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:49:59.260 DEBUG 10244 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:49:59.260 DEBUG 10244 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:49:59.260 DEBUG 10244 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:49:59.260 DEBUG 10244 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:49:59.260 DEBUG 10244 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:49:59.260 DEBUG 10244 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:49:59.260 DEBUG 10244 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:49:59.260 DEBUG 10244 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:49:59.260 DEBUG 10244 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:49:59.260 DEBUG 10244 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 11:49:59.260 DEBUG 10244 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:49:59.260 DEBUG 10244 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:49:59.260 DEBUG 10244 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 11:49:59.260 DEBUG 10244 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:49:59.260 DEBUG 10244 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:49:59.260 DEBUG 10244 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 11:49:59.260 DEBUG 10244 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:49:59.275 DEBUG 10244 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 9
2021-07-28 11:49:59.354  INFO 10244 --- [restartedMain] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2021-07-28 11:49:59.354  INFO 10244 --- [restartedMain] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2021-07-28 11:50:01.004  INFO 10244 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：条件注解@Conditional
2021-07-28 11:50:01.004  INFO 10244 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：随笔
2021-07-28 11:50:01.004  INFO 10244 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java常见关键字final、static、super、abstract、this
2021-07-28 11:50:01.019  INFO 10244 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：挖掘机技术哪家强
2021-07-28 11:50:01.019  INFO 10244 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：欢迎使用 Markdown在线编辑器 MdEditor
2021-07-28 11:50:01.019  INFO 10244 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java中 equals() 和 hashCode()的关系
2021-07-28 11:50:01.019  INFO 10244 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（二）：Hash
2021-07-28 11:50:01.019  INFO 10244 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（一）：String
2021-07-28 11:50:01.019  INFO 10244 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java合并两个int数组
2021-07-28 11:50:01.019  INFO 10244 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 初始化redis中blogCount的数量为：9
2021-07-28 11:50:07.665  INFO 10244 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-28 11:50:07.666  INFO 10244 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-28 11:50:07.675  INFO 10244 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 9 ms
2021-07-28 11:50:07.693  INFO 10244 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.loginPage', args=[]}
2021-07-28 11:50:07.696  INFO 10244 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:50:07.696  INFO 10244 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : admin/login 
2021-07-28 11:50:14.352  INFO 10244 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.login', args=[admin, lyg0918, org.apache.catalina.session.StandardSessionFacade@6a2ce3e0, {}]}
2021-07-28 11:50:14.353 DEBUG 10244 --- [http-nio-8080-exec-4] .l.b.m.U.selectUserNameByNameAndPassWord : ==>  Preparing: select * from user where username = ? and password = ? 
2021-07-28 11:50:14.354 DEBUG 10244 --- [http-nio-8080-exec-4] .l.b.m.U.selectUserNameByNameAndPassWord : ==> Parameters: admin(String), 89446CF944BBA2485A8562075A0E0BB7(String)
2021-07-28 11:50:14.355 DEBUG 10244 --- [http-nio-8080-exec-4] .l.b.m.U.selectUserNameByNameAndPassWord : <==      Total: 1
2021-07-28 11:50:14.356  INFO 10244 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:50:14.356  INFO 10244 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : result : admin/index 
2021-07-28 11:50:14.683  INFO 10244 --- [http-nio-8080-exec-8] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:50:15.673  INFO 10244 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 11:50:15.692 DEBUG 10244 --- [http-nio-8080-exec-3] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 11:50:15.693 DEBUG 10244 --- [http-nio-8080-exec-3] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 11:50:15.694 DEBUG 10244 --- [http-nio-8080-exec-3] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 11:50:15.695 DEBUG 10244 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 11:50:15.695 DEBUG 10244 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 11:50:15.697 DEBUG 10244 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 11:50:15.697 DEBUG 10244 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 11:50:15.697 DEBUG 10244 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 11:50:15.700 DEBUG 10244 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:50:15.701 DEBUG 10244 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:50:15.702 DEBUG 10244 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:50:15.702 DEBUG 10244 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:50:15.702 DEBUG 10244 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:50:15.703 DEBUG 10244 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:50:15.705 DEBUG 10244 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:50:15.705 DEBUG 10244 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:50:15.706 DEBUG 10244 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:50:15.706 DEBUG 10244 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 11:50:15.720 DEBUG 10244 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 11:50:15.720 DEBUG 10244 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 11:50:15.721 DEBUG 10244 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 11:50:15.721  INFO 10244 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:50:15.721  INFO 10244 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 11:50:15.992  INFO 10244 --- [http-nio-8080-exec-5] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:50:17.220  INFO 10244 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , false, admin]}
2021-07-28 11:50:17.231 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE 1 = 1 
2021-07-28 11:50:17.232 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==> Parameters: 
2021-07-28 11:50:17.234 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.m.B.findBlogByKeyWords_COUNT       : <==      Total: 1
2021-07-28 11:50:17.236 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 order by update_time desc LIMIT ? 
2021-07-28 11:50:17.237 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 8(Integer)
2021-07-28 11:50:17.239 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:50:17.239 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:50:17.241 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:50:17.241 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:50:17.241 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:50:17.241 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:50:17.242 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:50:17.242 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:50:17.243 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:50:17.244 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:50:17.244 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 11:50:17.245 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:50:17.246 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:50:17.246 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 11:50:17.247 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:50:17.248 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:50:17.248 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 11:50:17.249 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:50:17.250 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 8
2021-07-28 11:50:17.250  INFO 10244 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:50:17.250  INFO 10244 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : result : admin/blogs :: blogList 
2021-07-28 11:53:02.679  INFO 10244 --- [Thread-13] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2021-07-28 11:53:02.804  INFO 10244 --- [Thread-13] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closing ...
2021-07-28 11:53:02.804  INFO 10244 --- [Thread-13] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2021-07-28 11:53:03.806  INFO 10244 --- [restartedMain] black.lyg.blog.BlogApplication           : Starting BlogApplication on Administraror with PID 10244 (D:\Desktop\blog\blog-master\target\classes started by Administrator in D:\Desktop\blog\blog-master)
2021-07-28 11:53:03.806 DEBUG 10244 --- [restartedMain] black.lyg.blog.BlogApplication           : Running with Spring Boot v2.2.6.RELEASE, Spring v5.2.5.RELEASE
2021-07-28 11:53:03.806  INFO 10244 --- [restartedMain] black.lyg.blog.BlogApplication           : The following profiles are active: dev
2021-07-28 11:53:03.963  INFO 10244 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-28 11:53:03.963  INFO 10244 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-28 11:53:03.963  INFO 10244 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9ms. Found 0 Redis repository interfaces.
2021-07-28 11:53:03.994  WARN 10244 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[black.lyg.blog]' package. Please check your configuration.
2021-07-28 11:53:04.120  INFO 10244 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-07-28 11:53:04.120  INFO 10244 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-28 11:53:04.120  INFO 10244 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-28 11:53:04.120  INFO 10244 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : An older version [1.2.14] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.23]
2021-07-28 11:53:04.120  INFO 10244 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.14] using APR version [1.6.2].
2021-07-28 11:53:04.120  INFO 10244 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-07-28 11:53:04.120  INFO 10244 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-07-28 11:53:04.120  INFO 10244 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.0.2l  25 May 2017]
2021-07-28 11:53:04.135  INFO 10244 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-28 11:53:04.135  INFO 10244 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 329 ms
2021-07-28 11:53:04.151  INFO 10244 --- [restartedMain] o.s.boot.web.servlet.RegistrationBean    : Filter webStatFilter was not registered (possibly already registered?)
2021-07-28 11:53:04.605  INFO 10244 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-28 11:53:04.637  INFO 10244 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-07-28 11:53:04.950  INFO 10244 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-07-28 11:53:04.977  INFO 10244 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-07-28 11:53:04.977  INFO 10244 --- [restartedMain] black.lyg.blog.BlogApplication           : Started BlogApplication in 1.184 seconds (JVM running for 192.027)
2021-07-28 11:53:04.977  INFO 10244 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2021-07-28 11:53:04.994 DEBUG 10244 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc 
2021-07-28 11:53:04.994 DEBUG 10244 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 
2021-07-28 11:53:04.994 DEBUG 10244 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:53:04.994 DEBUG 10244 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:53:04.994 DEBUG 10244 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:53:04.994 DEBUG 10244 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:53:04.994 DEBUG 10244 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:53:04.994 DEBUG 10244 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:53:04.994 DEBUG 10244 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:53:04.994 DEBUG 10244 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:53:04.994 DEBUG 10244 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:53:04.994 DEBUG 10244 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:53:04.994 DEBUG 10244 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 11:53:04.994 DEBUG 10244 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:53:04.994 DEBUG 10244 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:53:04.994 DEBUG 10244 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 11:53:04.994 DEBUG 10244 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:53:04.994 DEBUG 10244 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:53:04.994 DEBUG 10244 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 11:53:04.994 DEBUG 10244 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:53:04.994 DEBUG 10244 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 9
2021-07-28 11:53:05.009  INFO 10244 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：条件注解@Conditional
2021-07-28 11:53:05.009  INFO 10244 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：随笔
2021-07-28 11:53:05.009  INFO 10244 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java常见关键字final、static、super、abstract、this
2021-07-28 11:53:05.009  INFO 10244 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：挖掘机技术哪家强
2021-07-28 11:53:05.009  INFO 10244 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：欢迎使用 Markdown在线编辑器 MdEditor
2021-07-28 11:53:05.009  INFO 10244 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java中 equals() 和 hashCode()的关系
2021-07-28 11:53:05.025  INFO 10244 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（二）：Hash
2021-07-28 11:53:05.025  INFO 10244 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（一）：String
2021-07-28 11:53:05.025  INFO 10244 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java合并两个int数组
2021-07-28 11:53:05.025  INFO 10244 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 初始化redis中blogCount的数量为：9
2021-07-28 11:53:05.025  INFO 10244 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2021-07-28 11:53:18.675  INFO 10244 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-28 11:53:18.677  INFO 10244 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-28 11:53:18.683  INFO 10244 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 6 ms
2021-07-28 11:53:18.685  INFO 10244 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.loginPage', args=[]}
2021-07-28 11:53:18.687  INFO 10244 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:53:18.687  INFO 10244 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : admin/login 
2021-07-28 11:53:28.938  INFO 10244 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.login', args=[admin, lyg0918, org.apache.catalina.session.StandardSessionFacade@7b5cc2ad, {}]}
2021-07-28 11:53:28.940 DEBUG 10244 --- [http-nio-8080-exec-10] .l.b.m.U.selectUserNameByNameAndPassWord : ==>  Preparing: select * from user where username = ? and password = ? 
2021-07-28 11:53:28.941 DEBUG 10244 --- [http-nio-8080-exec-10] .l.b.m.U.selectUserNameByNameAndPassWord : ==> Parameters: admin(String), 89446CF944BBA2485A8562075A0E0BB7(String)
2021-07-28 11:53:28.942 DEBUG 10244 --- [http-nio-8080-exec-10] .l.b.m.U.selectUserNameByNameAndPassWord : <==      Total: 1
2021-07-28 11:53:28.942  INFO 10244 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:53:28.942  INFO 10244 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : result : admin/index 
2021-07-28 11:53:29.221  INFO 10244 --- [http-nio-8080-exec-3] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:53:32.160  INFO 10244 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 11:53:32.163 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 11:53:32.163 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 11:53:32.164 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 11:53:32.165 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 11:53:32.165 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 11:53:32.165 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 11:53:32.166 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 11:53:32.166 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 11:53:32.168 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:53:32.168 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:53:32.169 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:53:32.169 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:53:32.169 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:53:32.170 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:53:32.171 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:53:32.171 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:53:32.171 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:53:32.172 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 11:53:32.174 DEBUG 10244 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 11:53:32.175 DEBUG 10244 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 11:53:32.176 DEBUG 10244 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 11:53:32.176  INFO 10244 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:53:32.176  INFO 10244 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 11:53:32.433  INFO 10244 --- [http-nio-8080-exec-5] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:53:35.395  INFO 10244 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , false, admin]}
2021-07-28 11:53:35.396 DEBUG 10244 --- [http-nio-8080-exec-7] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE 1 = 1 
2021-07-28 11:53:35.396 DEBUG 10244 --- [http-nio-8080-exec-7] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==> Parameters: 
2021-07-28 11:53:35.399 DEBUG 10244 --- [http-nio-8080-exec-7] b.l.b.m.B.findBlogByKeyWords_COUNT       : <==      Total: 1
2021-07-28 11:53:35.399 DEBUG 10244 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 order by update_time desc LIMIT ? 
2021-07-28 11:53:35.399 DEBUG 10244 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 8(Integer)
2021-07-28 11:53:35.402 DEBUG 10244 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:53:35.403 DEBUG 10244 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:53:35.404 DEBUG 10244 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:53:35.404 DEBUG 10244 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:53:35.404 DEBUG 10244 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:53:35.405 DEBUG 10244 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:53:35.406 DEBUG 10244 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:53:35.406 DEBUG 10244 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:53:35.406 DEBUG 10244 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:53:35.407 DEBUG 10244 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:53:35.407 DEBUG 10244 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 11:53:35.408 DEBUG 10244 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:53:35.409 DEBUG 10244 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:53:35.409 DEBUG 10244 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 11:53:35.410 DEBUG 10244 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:53:35.411 DEBUG 10244 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:53:35.411 DEBUG 10244 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 11:53:35.412 DEBUG 10244 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:53:35.413 DEBUG 10244 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 8
2021-07-28 11:53:35.414 DEBUG 10244 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? 
2021-07-28 11:53:35.414 DEBUG 10244 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String)
2021-07-28 11:53:35.416 DEBUG 10244 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 11:53:35.416  INFO 10244 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:53:35.416  INFO 10244 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : result : admin/blogs :: blogList 
2021-07-28 11:54:14.504  INFO 10244 --- [Thread-25] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2021-07-28 11:54:14.727  INFO 10244 --- [Thread-25] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} closing ...
2021-07-28 11:54:14.727  INFO 10244 --- [Thread-25] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} closed
2021-07-28 11:54:15.692  INFO 10244 --- [restartedMain] black.lyg.blog.BlogApplication           : Starting BlogApplication on Administraror with PID 10244 (D:\Desktop\blog\blog-master\target\classes started by Administrator in D:\Desktop\blog\blog-master)
2021-07-28 11:54:15.692 DEBUG 10244 --- [restartedMain] black.lyg.blog.BlogApplication           : Running with Spring Boot v2.2.6.RELEASE, Spring v5.2.5.RELEASE
2021-07-28 11:54:15.692  INFO 10244 --- [restartedMain] black.lyg.blog.BlogApplication           : The following profiles are active: dev
2021-07-28 11:54:15.850  INFO 10244 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-28 11:54:15.850  INFO 10244 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-28 11:54:15.850  INFO 10244 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9ms. Found 0 Redis repository interfaces.
2021-07-28 11:54:15.881  WARN 10244 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[black.lyg.blog]' package. Please check your configuration.
2021-07-28 11:54:16.006  INFO 10244 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-07-28 11:54:16.006  INFO 10244 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-28 11:54:16.006  INFO 10244 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-28 11:54:16.006  INFO 10244 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : An older version [1.2.14] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.23]
2021-07-28 11:54:16.006  INFO 10244 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.14] using APR version [1.6.2].
2021-07-28 11:54:16.006  INFO 10244 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-07-28 11:54:16.006  INFO 10244 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-07-28 11:54:16.006  INFO 10244 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.0.2l  25 May 2017]
2021-07-28 11:54:16.022  INFO 10244 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-28 11:54:16.022  INFO 10244 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 315 ms
2021-07-28 11:54:16.038  INFO 10244 --- [restartedMain] o.s.boot.web.servlet.RegistrationBean    : Filter webStatFilter was not registered (possibly already registered?)
2021-07-28 11:54:16.538  INFO 10244 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-28 11:54:16.562  INFO 10244 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-07-28 11:54:16.909  INFO 10244 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-07-28 11:54:16.933  INFO 10244 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-07-28 11:54:16.933  INFO 10244 --- [restartedMain] black.lyg.blog.BlogApplication           : Started BlogApplication in 1.25 seconds (JVM running for 263.982)
2021-07-28 11:54:16.933  INFO 10244 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-3} inited
2021-07-28 11:54:16.933 DEBUG 10244 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc 
2021-07-28 11:54:16.933 DEBUG 10244 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 
2021-07-28 11:54:16.949 DEBUG 10244 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:54:16.949 DEBUG 10244 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:54:16.949 DEBUG 10244 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:54:16.949 DEBUG 10244 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:54:16.949 DEBUG 10244 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:54:16.949 DEBUG 10244 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:54:16.949 DEBUG 10244 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:54:16.949 DEBUG 10244 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:54:16.949 DEBUG 10244 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:54:16.949 DEBUG 10244 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:54:16.949 DEBUG 10244 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 11:54:16.949 DEBUG 10244 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:54:16.949 DEBUG 10244 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:54:16.949 DEBUG 10244 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 11:54:16.949 DEBUG 10244 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:54:16.949 DEBUG 10244 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:54:16.949 DEBUG 10244 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 11:54:16.949 DEBUG 10244 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:54:16.949 DEBUG 10244 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 9
2021-07-28 11:54:16.965  INFO 10244 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：条件注解@Conditional
2021-07-28 11:54:16.965  INFO 10244 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：随笔
2021-07-28 11:54:16.965  INFO 10244 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java常见关键字final、static、super、abstract、this
2021-07-28 11:54:16.965  INFO 10244 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：挖掘机技术哪家强
2021-07-28 11:54:16.980  INFO 10244 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：欢迎使用 Markdown在线编辑器 MdEditor
2021-07-28 11:54:16.980  INFO 10244 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java中 equals() 和 hashCode()的关系
2021-07-28 11:54:16.980  INFO 10244 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（二）：Hash
2021-07-28 11:54:16.980  INFO 10244 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（一）：String
2021-07-28 11:54:16.980  INFO 10244 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java合并两个int数组
2021-07-28 11:54:16.980  INFO 10244 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 初始化redis中blogCount的数量为：9
2021-07-28 11:54:16.980  INFO 10244 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2021-07-28 11:54:24.602  INFO 10244 --- [http-nio-8080-exec-4] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-28 11:54:24.603  INFO 10244 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-28 11:54:24.610  INFO 10244 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed initialization in 7 ms
2021-07-28 11:54:24.612  INFO 10244 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.loginPage', args=[]}
2021-07-28 11:54:24.614  INFO 10244 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:54:24.614  INFO 10244 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : result : admin/login 
2021-07-28 11:54:33.009  INFO 10244 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.login', args=[admin, lyg0918, org.apache.catalina.session.StandardSessionFacade@3c1ce632, {}]}
2021-07-28 11:54:33.010 DEBUG 10244 --- [http-nio-8080-exec-9] .l.b.m.U.selectUserNameByNameAndPassWord : ==>  Preparing: select * from user where username = ? and password = ? 
2021-07-28 11:54:33.011 DEBUG 10244 --- [http-nio-8080-exec-9] .l.b.m.U.selectUserNameByNameAndPassWord : ==> Parameters: admin(String), 89446CF944BBA2485A8562075A0E0BB7(String)
2021-07-28 11:54:33.012 DEBUG 10244 --- [http-nio-8080-exec-9] .l.b.m.U.selectUserNameByNameAndPassWord : <==      Total: 1
2021-07-28 11:54:33.013  INFO 10244 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:54:33.013  INFO 10244 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : result : admin/index 
2021-07-28 11:54:33.287  INFO 10244 --- [http-nio-8080-exec-3] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:54:34.547  INFO 10244 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 11:54:34.550 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 11:54:34.550 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 11:54:34.551 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 11:54:34.552 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 11:54:34.552 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 11:54:34.553 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 11:54:34.554 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 11:54:34.554 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 11:54:34.556 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:54:34.556 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:54:34.557 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:54:34.557 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:54:34.557 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:54:34.558 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:54:34.558 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:54:34.558 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:54:34.559 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:54:34.560 DEBUG 10244 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 11:54:34.562 DEBUG 10244 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 11:54:34.563 DEBUG 10244 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 11:54:34.563 DEBUG 10244 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 11:54:34.564  INFO 10244 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:54:34.564  INFO 10244 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 11:54:34.822  INFO 10244 --- [http-nio-8080-exec-5] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:54:36.281  INFO 10244 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , false, admin]}
2021-07-28 11:54:36.282 DEBUG 10244 --- [http-nio-8080-exec-2] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE 1 = 1 
2021-07-28 11:54:36.282 DEBUG 10244 --- [http-nio-8080-exec-2] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==> Parameters: 
2021-07-28 11:54:36.284 DEBUG 10244 --- [http-nio-8080-exec-2] b.l.b.m.B.findBlogByKeyWords_COUNT       : <==      Total: 1
2021-07-28 11:54:36.285 DEBUG 10244 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 order by update_time desc LIMIT ? 
2021-07-28 11:54:36.285 DEBUG 10244 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 8(Integer)
2021-07-28 11:54:36.288 DEBUG 10244 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:54:36.288 DEBUG 10244 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:54:36.289 DEBUG 10244 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:54:36.289 DEBUG 10244 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:54:36.289 DEBUG 10244 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:54:36.290 DEBUG 10244 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:54:36.290 DEBUG 10244 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:54:36.290 DEBUG 10244 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:54:36.291 DEBUG 10244 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:54:36.292 DEBUG 10244 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:54:36.292 DEBUG 10244 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 11:54:36.293 DEBUG 10244 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:54:36.293 DEBUG 10244 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:54:36.294 DEBUG 10244 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 11:54:36.295 DEBUG 10244 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:54:36.295 DEBUG 10244 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:54:36.295 DEBUG 10244 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 11:54:36.296 DEBUG 10244 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:54:36.297 DEBUG 10244 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 8
2021-07-28 11:54:36.297 DEBUG 10244 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? 
2021-07-28 11:54:36.298 DEBUG 10244 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String)
2021-07-28 11:54:36.300 DEBUG 10244 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 11:54:36.300  INFO 10244 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:54:36.302 ERROR 10244 --- [http-nio-8080-exec-2] b.l.b.h.ControllerExceptionHandler       : Request URL : http://localhost:8080/admin/blogs/search, Exception : null
2021-07-28 11:54:36.302  WARN 10244 --- [http-nio-8080-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.NullPointerException]
2021-07-28 11:57:30.330  INFO 10844 --- [restartedMain] black.lyg.blog.BlogApplication           : Starting BlogApplication on Administraror with PID 10844 (D:\Desktop\blog\blog-master\target\classes started by Administrator in D:\Desktop\blog\blog-master)
2021-07-28 11:57:30.330 DEBUG 10844 --- [restartedMain] black.lyg.blog.BlogApplication           : Running with Spring Boot v2.2.6.RELEASE, Spring v5.2.5.RELEASE
2021-07-28 11:57:30.330  INFO 10844 --- [restartedMain] black.lyg.blog.BlogApplication           : The following profiles are active: dev
2021-07-28 11:57:30.361  INFO 10844 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-07-28 11:57:30.361  INFO 10844 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-07-28 11:57:30.877  INFO 10844 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-28 11:57:30.877  INFO 10844 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-28 11:57:30.908  INFO 10844 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14ms. Found 0 Redis repository interfaces.
2021-07-28 11:57:30.987  WARN 10844 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[black.lyg.blog]' package. Please check your configuration.
2021-07-28 11:57:31.459  INFO 10844 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-07-28 11:57:31.459  INFO 10844 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-28 11:57:31.459  INFO 10844 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-28 11:57:31.459  INFO 10844 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : An older version [1.2.14] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.23]
2021-07-28 11:57:31.459  INFO 10844 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.14] using APR version [1.6.2].
2021-07-28 11:57:31.459  INFO 10844 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-07-28 11:57:31.459  INFO 10844 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-07-28 11:57:32.496  INFO 10844 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.0.2l  25 May 2017]
2021-07-28 11:57:32.590  INFO 10844 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-28 11:57:32.590  INFO 10844 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2229 ms
2021-07-28 11:57:32.622  INFO 10844 --- [restartedMain] o.s.boot.web.servlet.RegistrationBean    : Filter webStatFilter was not registered (possibly already registered?)
2021-07-28 11:57:33.501  INFO 10844 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-28 11:57:33.564  INFO 10844 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-07-28 11:57:33.993  INFO 10844 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-07-28 11:57:34.025  INFO 10844 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-07-28 11:57:34.025  INFO 10844 --- [restartedMain] black.lyg.blog.BlogApplication           : Started BlogApplication in 4.005 seconds (JVM running for 5.338)
2021-07-28 11:57:34.056  INFO 10844 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-28 11:57:34.998 DEBUG 10844 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc 
2021-07-28 11:57:35.014 DEBUG 10844 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 
2021-07-28 11:57:35.045 DEBUG 10844 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:57:35.045 DEBUG 10844 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:57:35.045 DEBUG 10844 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:57:35.045 DEBUG 10844 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:57:35.045 DEBUG 10844 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:57:35.045 DEBUG 10844 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:57:35.045 DEBUG 10844 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:57:35.045 DEBUG 10844 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:57:35.045 DEBUG 10844 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:57:35.045 DEBUG 10844 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:57:35.045 DEBUG 10844 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 11:57:35.045 DEBUG 10844 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:57:35.045 DEBUG 10844 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:57:35.061 DEBUG 10844 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 11:57:35.061 DEBUG 10844 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:57:35.061 DEBUG 10844 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:57:35.061 DEBUG 10844 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 11:57:35.061 DEBUG 10844 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:57:35.061 DEBUG 10844 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 9
2021-07-28 11:57:35.155  INFO 10844 --- [restartedMain] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2021-07-28 11:57:35.155  INFO 10844 --- [restartedMain] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2021-07-28 11:57:36.821  INFO 10844 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：条件注解@Conditional
2021-07-28 11:57:36.821  INFO 10844 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：随笔
2021-07-28 11:57:36.821  INFO 10844 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java常见关键字final、static、super、abstract、this
2021-07-28 11:57:36.821  INFO 10844 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：挖掘机技术哪家强
2021-07-28 11:57:36.821  INFO 10844 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：欢迎使用 Markdown在线编辑器 MdEditor
2021-07-28 11:57:36.821  INFO 10844 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java中 equals() 和 hashCode()的关系
2021-07-28 11:57:36.837  INFO 10844 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（二）：Hash
2021-07-28 11:57:36.837  INFO 10844 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（一）：String
2021-07-28 11:57:36.837  INFO 10844 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java合并两个int数组
2021-07-28 11:57:36.837  INFO 10844 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 初始化redis中blogCount的数量为：9
2021-07-28 11:57:42.127  INFO 10844 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-28 11:57:42.127  INFO 10844 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-28 11:57:42.136  INFO 10844 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 9 ms
2021-07-28 11:57:42.140  INFO 10844 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.loginPage', args=[]}
2021-07-28 11:57:42.156  INFO 10844 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:57:42.157  INFO 10844 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : admin/login 
2021-07-28 11:57:51.034  INFO 10844 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.login', args=[admin, lyg0918, org.apache.catalina.session.StandardSessionFacade@362d8ed6, {}]}
2021-07-28 11:57:51.035 DEBUG 10844 --- [http-nio-8080-exec-2] .l.b.m.U.selectUserNameByNameAndPassWord : ==>  Preparing: select * from user where username = ? and password = ? 
2021-07-28 11:57:51.035 DEBUG 10844 --- [http-nio-8080-exec-2] .l.b.m.U.selectUserNameByNameAndPassWord : ==> Parameters: admin(String), 89446CF944BBA2485A8562075A0E0BB7(String)
2021-07-28 11:57:51.037 DEBUG 10844 --- [http-nio-8080-exec-2] .l.b.m.U.selectUserNameByNameAndPassWord : <==      Total: 1
2021-07-28 11:57:51.038  INFO 10844 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:57:51.038  INFO 10844 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : result : admin/index 
2021-07-28 11:57:51.354  INFO 10844 --- [http-nio-8080-exec-7] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:57:52.557  INFO 10844 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 11:57:52.576 DEBUG 10844 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 11:57:52.576 DEBUG 10844 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 11:57:52.577 DEBUG 10844 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 11:57:52.578 DEBUG 10844 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 11:57:52.579 DEBUG 10844 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 11:57:52.580 DEBUG 10844 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 11:57:52.580 DEBUG 10844 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 11:57:52.581 DEBUG 10844 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 11:57:52.583 DEBUG 10844 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:57:52.583 DEBUG 10844 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:57:52.585 DEBUG 10844 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:57:52.585 DEBUG 10844 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:57:52.585 DEBUG 10844 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:57:52.586 DEBUG 10844 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:57:52.588 DEBUG 10844 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:57:52.588 DEBUG 10844 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:57:52.589 DEBUG 10844 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:57:52.590 DEBUG 10844 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 11:57:52.603 DEBUG 10844 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 11:57:52.603 DEBUG 10844 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 11:57:52.605 DEBUG 10844 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 11:57:52.605  INFO 10844 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:57:52.605  INFO 10844 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 11:57:52.888  INFO 10844 --- [http-nio-8080-exec-6] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:57:55.790  INFO 10844 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , false, admin]}
2021-07-28 11:57:55.803 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE 1 = 1 
2021-07-28 11:57:55.803 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==> Parameters: 
2021-07-28 11:57:55.806 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.m.B.findBlogByKeyWords_COUNT       : <==      Total: 1
2021-07-28 11:57:55.807 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 order by update_time desc LIMIT ? 
2021-07-28 11:57:55.807 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 8(Integer)
2021-07-28 11:57:55.810 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:57:55.810 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:57:55.811 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:57:55.811 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:57:55.811 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:57:55.812 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:57:55.813 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:57:55.813 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:57:55.814 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:57:55.814 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:57:55.814 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 11:57:55.815 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:57:55.816 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:57:55.816 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 11:57:55.817 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:57:55.817 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:57:55.817 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 11:57:55.818 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:57:55.819 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 8
2021-07-28 11:57:55.819 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? 
2021-07-28 11:57:55.820 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String)
2021-07-28 11:57:55.822 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 11:57:55.823  INFO 10844 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:57:55.823  INFO 10844 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : result : admin/blogs :: blogList 
2021-07-28 11:58:32.578  INFO 10844 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 11:58:32.579 DEBUG 10844 --- [http-nio-8080-exec-9] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 11:58:32.579 DEBUG 10844 --- [http-nio-8080-exec-9] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 11:58:32.581 DEBUG 10844 --- [http-nio-8080-exec-9] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 11:58:32.581 DEBUG 10844 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 11:58:32.581 DEBUG 10844 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 11:58:32.583 DEBUG 10844 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 11:58:32.584 DEBUG 10844 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 11:58:32.585 DEBUG 10844 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 11:58:32.586 DEBUG 10844 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:58:32.587 DEBUG 10844 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:58:32.588 DEBUG 10844 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:58:32.588 DEBUG 10844 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:58:32.589 DEBUG 10844 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:58:32.590 DEBUG 10844 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:58:32.592 DEBUG 10844 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:58:32.592 DEBUG 10844 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:58:32.593 DEBUG 10844 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:58:32.594 DEBUG 10844 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 11:58:32.594 DEBUG 10844 --- [http-nio-8080-exec-9] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 11:58:32.594 DEBUG 10844 --- [http-nio-8080-exec-9] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 11:58:32.595 DEBUG 10844 --- [http-nio-8080-exec-9] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 11:58:32.595  INFO 10844 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:58:32.595  INFO 10844 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 11:58:32.887  INFO 10844 --- [http-nio-8080-exec-8] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 11:58:41.524  INFO 10844 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , false, admin]}
2021-07-28 11:58:41.525 DEBUG 10844 --- [http-nio-8080-exec-1] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE 1 = 1 
2021-07-28 11:58:41.525 DEBUG 10844 --- [http-nio-8080-exec-1] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==> Parameters: 
2021-07-28 11:58:41.527 DEBUG 10844 --- [http-nio-8080-exec-1] b.l.b.m.B.findBlogByKeyWords_COUNT       : <==      Total: 1
2021-07-28 11:58:41.527 DEBUG 10844 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 order by update_time desc LIMIT ? 
2021-07-28 11:58:41.528 DEBUG 10844 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 8(Integer)
2021-07-28 11:58:41.530 DEBUG 10844 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:58:41.530 DEBUG 10844 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 11:58:41.531 DEBUG 10844 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:58:41.532 DEBUG 10844 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:58:41.532 DEBUG 10844 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 11:58:41.533 DEBUG 10844 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:58:41.533 DEBUG 10844 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:58:41.533 DEBUG 10844 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 11:58:41.534 DEBUG 10844 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:58:41.534 DEBUG 10844 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:58:41.534 DEBUG 10844 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 11:58:41.535 DEBUG 10844 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:58:41.536 DEBUG 10844 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 11:58:41.536 DEBUG 10844 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 11:58:41.537 DEBUG 10844 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 11:58:41.537 DEBUG 10844 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 11:58:41.537 DEBUG 10844 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 11:58:41.538 DEBUG 10844 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 11:58:41.539 DEBUG 10844 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 8
2021-07-28 11:58:41.540 DEBUG 10844 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? 
2021-07-28 11:58:41.540 DEBUG 10844 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String)
2021-07-28 11:58:41.541 DEBUG 10844 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 11:58:41.542  INFO 10844 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 11:58:41.542  INFO 10844 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : admin/blogs :: blogList 
2021-07-28 12:00:02.557  INFO 10844 --- [Thread-13] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2021-07-28 12:00:02.683  INFO 10844 --- [Thread-13] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closing ...
2021-07-28 12:00:02.683  INFO 10844 --- [Thread-13] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2021-07-28 12:00:03.680  INFO 10844 --- [restartedMain] black.lyg.blog.BlogApplication           : Starting BlogApplication on Administraror with PID 10844 (D:\Desktop\blog\blog-master\target\classes started by Administrator in D:\Desktop\blog\blog-master)
2021-07-28 12:00:03.680 DEBUG 10844 --- [restartedMain] black.lyg.blog.BlogApplication           : Running with Spring Boot v2.2.6.RELEASE, Spring v5.2.5.RELEASE
2021-07-28 12:00:03.680  INFO 10844 --- [restartedMain] black.lyg.blog.BlogApplication           : The following profiles are active: dev
2021-07-28 12:00:03.837  INFO 10844 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-28 12:00:03.837  INFO 10844 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-28 12:00:03.852  INFO 10844 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9ms. Found 0 Redis repository interfaces.
2021-07-28 12:00:03.868  WARN 10844 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[black.lyg.blog]' package. Please check your configuration.
2021-07-28 12:00:04.008  INFO 10844 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-07-28 12:00:04.008  INFO 10844 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-28 12:00:04.008  INFO 10844 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-28 12:00:04.008  INFO 10844 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : An older version [1.2.14] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.23]
2021-07-28 12:00:04.008  INFO 10844 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.14] using APR version [1.6.2].
2021-07-28 12:00:04.008  INFO 10844 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-07-28 12:00:04.008  INFO 10844 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-07-28 12:00:04.008  INFO 10844 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.0.2l  25 May 2017]
2021-07-28 12:00:04.024  INFO 10844 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-28 12:00:04.024  INFO 10844 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 328 ms
2021-07-28 12:00:04.040  INFO 10844 --- [restartedMain] o.s.boot.web.servlet.RegistrationBean    : Filter webStatFilter was not registered (possibly already registered?)
2021-07-28 12:00:04.501  INFO 10844 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-28 12:00:04.533  INFO 10844 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-07-28 12:00:04.862  INFO 10844 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-07-28 12:00:04.878  INFO 10844 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-07-28 12:00:04.878  INFO 10844 --- [restartedMain] black.lyg.blog.BlogApplication           : Started BlogApplication in 1.21 seconds (JVM running for 156.18)
2021-07-28 12:00:04.878  INFO 10844 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2021-07-28 12:00:04.894 DEBUG 10844 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc 
2021-07-28 12:00:04.894 DEBUG 10844 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 
2021-07-28 12:00:04.894 DEBUG 10844 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 12:00:04.894 DEBUG 10844 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 12:00:04.894 DEBUG 10844 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 12:00:04.894 DEBUG 10844 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 12:00:04.894 DEBUG 10844 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 12:00:04.894 DEBUG 10844 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 12:00:04.894 DEBUG 10844 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 12:00:04.894 DEBUG 10844 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 12:00:04.894 DEBUG 10844 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 12:00:04.894 DEBUG 10844 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 12:00:04.894 DEBUG 10844 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 12:00:04.894 DEBUG 10844 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 12:00:04.894 DEBUG 10844 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 12:00:04.894 DEBUG 10844 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 12:00:04.894 DEBUG 10844 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 12:00:04.894 DEBUG 10844 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 12:00:04.894 DEBUG 10844 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 12:00:04.894 DEBUG 10844 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 12:00:04.894 DEBUG 10844 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 9
2021-07-28 12:00:04.910  INFO 10844 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：条件注解@Conditional
2021-07-28 12:00:04.910  INFO 10844 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：随笔
2021-07-28 12:00:04.910  INFO 10844 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java常见关键字final、static、super、abstract、this
2021-07-28 12:00:04.910  INFO 10844 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：挖掘机技术哪家强
2021-07-28 12:00:04.910  INFO 10844 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：欢迎使用 Markdown在线编辑器 MdEditor
2021-07-28 12:00:04.910  INFO 10844 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java中 equals() 和 hashCode()的关系
2021-07-28 12:00:04.910  INFO 10844 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（二）：Hash
2021-07-28 12:00:04.910  INFO 10844 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（一）：String
2021-07-28 12:00:04.910  INFO 10844 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java合并两个int数组
2021-07-28 12:00:04.926  INFO 10844 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 初始化redis中blogCount的数量为：9
2021-07-28 12:00:04.926  INFO 10844 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2021-07-28 12:00:14.634  INFO 10844 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-28 12:00:14.634  INFO 10844 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-28 12:00:14.641  INFO 10844 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 7 ms
2021-07-28 12:00:14.644  INFO 10844 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.loginPage', args=[]}
2021-07-28 12:00:14.646  INFO 10844 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 12:00:14.646  INFO 10844 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : admin/login 
2021-07-28 12:00:19.853  INFO 10844 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.login', args=[admin, lyg0918, org.apache.catalina.session.StandardSessionFacade@f235fa1, {}]}
2021-07-28 12:00:19.854 DEBUG 10844 --- [http-nio-8080-exec-2] .l.b.m.U.selectUserNameByNameAndPassWord : ==>  Preparing: select * from user where username = ? and password = ? 
2021-07-28 12:00:19.854 DEBUG 10844 --- [http-nio-8080-exec-2] .l.b.m.U.selectUserNameByNameAndPassWord : ==> Parameters: admin(String), 89446CF944BBA2485A8562075A0E0BB7(String)
2021-07-28 12:00:19.856 DEBUG 10844 --- [http-nio-8080-exec-2] .l.b.m.U.selectUserNameByNameAndPassWord : <==      Total: 1
2021-07-28 12:00:19.856  INFO 10844 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 12:00:19.856  INFO 10844 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : result : admin/index 
2021-07-28 12:00:20.133  INFO 10844 --- [http-nio-8080-exec-3] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 12:00:22.591  INFO 10844 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 12:00:22.594 DEBUG 10844 --- [http-nio-8080-exec-4] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 12:00:22.594 DEBUG 10844 --- [http-nio-8080-exec-4] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 12:00:22.595 DEBUG 10844 --- [http-nio-8080-exec-4] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 12:00:22.596 DEBUG 10844 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 12:00:22.596 DEBUG 10844 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 12:00:22.597 DEBUG 10844 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 12:00:22.597 DEBUG 10844 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 12:00:22.597 DEBUG 10844 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 12:00:22.600 DEBUG 10844 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 12:00:22.601 DEBUG 10844 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 12:00:22.601 DEBUG 10844 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 12:00:22.601 DEBUG 10844 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 12:00:22.601 DEBUG 10844 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 12:00:22.603 DEBUG 10844 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 12:00:22.603 DEBUG 10844 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 12:00:22.603 DEBUG 10844 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 12:00:22.603 DEBUG 10844 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 12:00:22.605 DEBUG 10844 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 12:00:22.606 DEBUG 10844 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 12:00:22.606 DEBUG 10844 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 12:00:22.608 DEBUG 10844 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 12:00:22.608  INFO 10844 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 12:00:22.608  INFO 10844 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 12:00:22.868  INFO 10844 --- [http-nio-8080-exec-5] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 12:00:30.613  INFO 10844 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , false, admin]}
2021-07-28 12:00:30.615 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE 1 = 1 
2021-07-28 12:00:30.615 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==> Parameters: 
2021-07-28 12:00:30.617 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.m.B.findBlogByKeyWords_COUNT       : <==      Total: 1
2021-07-28 12:00:30.617 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 order by update_time desc LIMIT ? 
2021-07-28 12:00:30.617 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 8(Integer)
2021-07-28 12:00:30.619 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 12:00:30.620 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 12:00:30.620 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 12:00:30.620 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 12:00:30.620 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 12:00:30.622 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 12:00:30.622 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 12:00:30.622 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 12:00:30.622 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 12:00:30.623 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 12:00:30.623 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 12:00:30.624 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 12:00:30.624 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 12:00:30.624 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 12:00:30.624 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 12:00:30.625 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 12:00:30.625 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 12:00:30.626 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 12:00:30.627 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 8
2021-07-28 12:00:30.628 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? 
2021-07-28 12:00:30.628 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String)
2021-07-28 12:00:30.630 DEBUG 10844 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 12:00:30.630  INFO 10844 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 12:00:30.630  INFO 10844 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : result : admin/blogs :: blogList 
2021-07-28 12:01:50.302  INFO 10844 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 12:01:50.308 DEBUG 10844 --- [http-nio-8080-exec-9] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 12:01:50.308 DEBUG 10844 --- [http-nio-8080-exec-9] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 12:01:50.309 DEBUG 10844 --- [http-nio-8080-exec-9] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 12:01:50.309 DEBUG 10844 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 12:01:50.309 DEBUG 10844 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 12:01:50.311 DEBUG 10844 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 12:01:50.311 DEBUG 10844 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 12:01:50.311 DEBUG 10844 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 12:01:50.314 DEBUG 10844 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 12:01:50.314 DEBUG 10844 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 12:01:50.315 DEBUG 10844 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 12:01:50.316 DEBUG 10844 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 12:01:50.316 DEBUG 10844 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 12:01:50.317 DEBUG 10844 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 12:01:50.318 DEBUG 10844 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 12:01:50.318 DEBUG 10844 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 12:01:50.319 DEBUG 10844 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 12:01:50.320 DEBUG 10844 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 12:01:50.320 DEBUG 10844 --- [http-nio-8080-exec-9] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 12:01:50.321 DEBUG 10844 --- [http-nio-8080-exec-9] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 12:01:50.321 DEBUG 10844 --- [http-nio-8080-exec-9] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 12:01:50.321  INFO 10844 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 12:01:50.321  INFO 10844 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 12:01:50.610  INFO 10844 --- [http-nio-8080-exec-7] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 12:02:44.903  INFO 10844 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , true, admin]}
2021-07-28 12:02:44.905 DEBUG 10844 --- [http-nio-8080-exec-2] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE 1 = 1 AND recommend = ? 
2021-07-28 12:02:44.905 DEBUG 10844 --- [http-nio-8080-exec-2] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==> Parameters: 1(String)
2021-07-28 12:02:44.906 DEBUG 10844 --- [http-nio-8080-exec-2] b.l.b.m.B.findBlogByKeyWords_COUNT       : <==      Total: 1
2021-07-28 12:02:44.906 DEBUG 10844 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 AND recommend = ? order by update_time desc LIMIT ? 
2021-07-28 12:02:44.907 DEBUG 10844 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 1(String), 8(Integer)
2021-07-28 12:02:44.909 DEBUG 10844 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 12:02:44.910 DEBUG 10844 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 12:02:44.910 DEBUG 10844 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 12:02:44.911 DEBUG 10844 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 12:02:44.911 DEBUG 10844 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 12:02:44.912 DEBUG 10844 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 12:02:44.912 DEBUG 10844 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 12:02:44.912 DEBUG 10844 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 12:02:44.913 DEBUG 10844 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 12:02:44.913 DEBUG 10844 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 12:02:44.913 DEBUG 10844 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 12:02:44.914 DEBUG 10844 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 12:02:44.915 DEBUG 10844 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 12:02:44.915 DEBUG 10844 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 12:02:44.916 DEBUG 10844 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 12:02:44.916 DEBUG 10844 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 12:02:44.917 DEBUG 10844 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 12:02:44.917 DEBUG 10844 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 12:02:44.919 DEBUG 10844 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 8
2021-07-28 12:02:44.919 DEBUG 10844 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? 
2021-07-28 12:02:44.919 DEBUG 10844 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String)
2021-07-28 12:02:44.920 DEBUG 10844 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 12:02:44.920  INFO 10844 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 12:02:44.921  INFO 10844 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : result : admin/blogs :: blogList 
2021-07-28 14:10:57.284  INFO 7620 --- [restartedMain] black.lyg.blog.BlogApplication           : Starting BlogApplication on Administraror with PID 7620 (D:\Desktop\blog\blog-master\target\classes started by Administrator in D:\Desktop\blog\blog-master)
2021-07-28 14:10:57.285 DEBUG 7620 --- [restartedMain] black.lyg.blog.BlogApplication           : Running with Spring Boot v2.2.6.RELEASE, Spring v5.2.5.RELEASE
2021-07-28 14:10:57.286  INFO 7620 --- [restartedMain] black.lyg.blog.BlogApplication           : The following profiles are active: dev
2021-07-28 14:10:57.328  INFO 7620 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-07-28 14:10:57.329  INFO 7620 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-07-28 14:10:57.856  INFO 7620 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-28 14:10:57.857  INFO 7620 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-28 14:10:57.881  INFO 7620 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15ms. Found 0 Redis repository interfaces.
2021-07-28 14:10:57.972  WARN 7620 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[black.lyg.blog]' package. Please check your configuration.
2021-07-28 14:10:58.448  INFO 7620 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-07-28 14:10:58.455  INFO 7620 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-28 14:10:58.456  INFO 7620 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-28 14:10:58.457  INFO 7620 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : An older version [1.2.14] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.23]
2021-07-28 14:10:58.457  INFO 7620 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.14] using APR version [1.6.2].
2021-07-28 14:10:58.457  INFO 7620 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-07-28 14:10:58.458  INFO 7620 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-07-28 14:10:59.471  INFO 7620 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.0.2l  25 May 2017]
2021-07-28 14:10:59.571  INFO 7620 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-28 14:10:59.571  INFO 7620 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2242 ms
2021-07-28 14:10:59.606  INFO 7620 --- [restartedMain] o.s.boot.web.servlet.RegistrationBean    : Filter webStatFilter was not registered (possibly already registered?)
2021-07-28 14:11:00.500  INFO 7620 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-28 14:11:00.568  INFO 7620 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-07-28 14:11:01.000  INFO 7620 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-07-28 14:11:01.039  INFO 7620 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-07-28 14:11:01.041  INFO 7620 --- [restartedMain] black.lyg.blog.BlogApplication           : Started BlogApplication in 4.066 seconds (JVM running for 5.436)
2021-07-28 14:11:01.071  INFO 7620 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-28 14:11:02.024 DEBUG 7620 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc 
2021-07-28 14:11:02.040 DEBUG 7620 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 
2021-07-28 14:11:02.064 DEBUG 7620 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:11:02.065 DEBUG 7620 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:11:02.066 DEBUG 7620 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:11:02.068 DEBUG 7620 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:11:02.068 DEBUG 7620 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:11:02.070 DEBUG 7620 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:11:02.071 DEBUG 7620 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:11:02.071 DEBUG 7620 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:11:02.072 DEBUG 7620 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:11:02.073 DEBUG 7620 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:11:02.073 DEBUG 7620 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 14:11:02.074 DEBUG 7620 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:11:02.075 DEBUG 7620 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:11:02.075 DEBUG 7620 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 14:11:02.076 DEBUG 7620 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:11:02.076 DEBUG 7620 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:11:02.077 DEBUG 7620 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 14:11:02.078 DEBUG 7620 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:11:02.080 DEBUG 7620 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 9
2021-07-28 14:11:02.170  INFO 7620 --- [restartedMain] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2021-07-28 14:11:02.171  INFO 7620 --- [restartedMain] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2021-07-28 14:11:03.814  INFO 7620 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：条件注解@Conditional
2021-07-28 14:11:03.815  INFO 7620 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：随笔
2021-07-28 14:11:03.816  INFO 7620 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java常见关键字final、static、super、abstract、this
2021-07-28 14:11:03.817  INFO 7620 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：挖掘机技术哪家强
2021-07-28 14:11:03.818  INFO 7620 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：欢迎使用 Markdown在线编辑器 MdEditor
2021-07-28 14:11:03.820  INFO 7620 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java中 equals() 和 hashCode()的关系
2021-07-28 14:11:03.821  INFO 7620 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（二）：Hash
2021-07-28 14:11:03.822  INFO 7620 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（一）：String
2021-07-28 14:11:03.823  INFO 7620 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java合并两个int数组
2021-07-28 14:11:03.826  INFO 7620 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 初始化redis中blogCount的数量为：9
2021-07-28 14:11:30.456  INFO 7620 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-28 14:11:30.457  INFO 7620 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-28 14:11:30.464  INFO 7620 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 7 ms
2021-07-28 14:11:30.482  INFO 7620 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.loginPage', args=[]}
2021-07-28 14:11:30.485  INFO 7620 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:11:30.485  INFO 7620 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : admin/login 
2021-07-28 14:11:39.984  INFO 7620 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.login', args=[admin, lyg0918, org.apache.catalina.session.StandardSessionFacade@3efb8b9f, {}]}
2021-07-28 14:11:39.985 DEBUG 7620 --- [http-nio-8080-exec-6] .l.b.m.U.selectUserNameByNameAndPassWord : ==>  Preparing: select * from user where username = ? and password = ? 
2021-07-28 14:11:39.986 DEBUG 7620 --- [http-nio-8080-exec-6] .l.b.m.U.selectUserNameByNameAndPassWord : ==> Parameters: admin(String), 89446CF944BBA2485A8562075A0E0BB7(String)
2021-07-28 14:11:39.987 DEBUG 7620 --- [http-nio-8080-exec-6] .l.b.m.U.selectUserNameByNameAndPassWord : <==      Total: 1
2021-07-28 14:11:39.988  INFO 7620 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:11:39.988  INFO 7620 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : result : admin/index 
2021-07-28 14:11:40.339  INFO 7620 --- [http-nio-8080-exec-4] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:11:53.916  INFO 7620 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.login', args=[admin, lyg0918, org.apache.catalina.session.StandardSessionFacade@3efb8b9f, {}]}
2021-07-28 14:11:53.917 DEBUG 7620 --- [http-nio-8080-exec-1] .l.b.m.U.selectUserNameByNameAndPassWord : ==>  Preparing: select * from user where username = ? and password = ? 
2021-07-28 14:11:53.917 DEBUG 7620 --- [http-nio-8080-exec-1] .l.b.m.U.selectUserNameByNameAndPassWord : ==> Parameters: admin(String), 89446CF944BBA2485A8562075A0E0BB7(String)
2021-07-28 14:11:53.919 DEBUG 7620 --- [http-nio-8080-exec-1] .l.b.m.U.selectUserNameByNameAndPassWord : <==      Total: 1
2021-07-28 14:11:53.919  INFO 7620 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:11:53.919  INFO 7620 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : admin/index 
2021-07-28 14:11:54.221  INFO 7620 --- [http-nio-8080-exec-5] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:12:05.123  INFO 7620 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 14:12:05.144 DEBUG 7620 --- [http-nio-8080-exec-7] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 14:12:05.145 DEBUG 7620 --- [http-nio-8080-exec-7] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 14:12:05.146 DEBUG 7620 --- [http-nio-8080-exec-7] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 14:12:05.147 DEBUG 7620 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 14:12:05.147 DEBUG 7620 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 14:12:05.149 DEBUG 7620 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 14:12:05.149 DEBUG 7620 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 14:12:05.149 DEBUG 7620 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 14:12:05.153 DEBUG 7620 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:12:05.154 DEBUG 7620 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:12:05.155 DEBUG 7620 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:12:05.155 DEBUG 7620 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:12:05.155 DEBUG 7620 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:12:05.156 DEBUG 7620 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:12:05.157 DEBUG 7620 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:12:05.158 DEBUG 7620 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:12:05.159 DEBUG 7620 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:12:05.159 DEBUG 7620 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 14:12:05.173 DEBUG 7620 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 14:12:05.173 DEBUG 7620 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 14:12:05.176 DEBUG 7620 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 14:12:05.176  INFO 7620 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:12:05.176  INFO 7620 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 14:12:05.475  INFO 7620 --- [http-nio-8080-exec-6] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:12:12.505  INFO 7620 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , false, admin]}
2021-07-28 14:12:12.517 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE 1 = 1 
2021-07-28 14:12:12.518 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==> Parameters: 
2021-07-28 14:12:12.520 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.m.B.findBlogByKeyWords_COUNT       : <==      Total: 1
2021-07-28 14:12:12.521 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 order by update_time desc LIMIT ? 
2021-07-28 14:12:12.521 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 8(Integer)
2021-07-28 14:12:12.524 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:12:12.524 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:12:12.526 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:12:12.526 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:12:12.526 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:12:12.527 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:12:12.528 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:12:12.528 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:12:12.529 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:12:12.530 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:12:12.530 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 14:12:12.531 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:12:12.531 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:12:12.531 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 14:12:12.532 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:12:12.532 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:12:12.532 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 14:12:12.533 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:12:12.534 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 8
2021-07-28 14:12:12.534 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? 
2021-07-28 14:12:12.534 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String)
2021-07-28 14:12:12.536 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 14:12:12.536  INFO 7620 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:12:12.536  INFO 7620 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : result : admin/blogs :: blogList 
2021-07-28 14:12:21.301  INFO 7620 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 14:12:21.302 DEBUG 7620 --- [http-nio-8080-exec-3] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 14:12:21.303 DEBUG 7620 --- [http-nio-8080-exec-3] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 14:12:21.304 DEBUG 7620 --- [http-nio-8080-exec-3] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 14:12:21.305 DEBUG 7620 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 14:12:21.305 DEBUG 7620 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 14:12:21.306 DEBUG 7620 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 14:12:21.307 DEBUG 7620 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 14:12:21.307 DEBUG 7620 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 14:12:21.310 DEBUG 7620 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:12:21.310 DEBUG 7620 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:12:21.311 DEBUG 7620 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:12:21.312 DEBUG 7620 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:12:21.312 DEBUG 7620 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:12:21.312 DEBUG 7620 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:12:21.314 DEBUG 7620 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:12:21.314 DEBUG 7620 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:12:21.314 DEBUG 7620 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:12:21.315 DEBUG 7620 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 14:12:21.315 DEBUG 7620 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 14:12:21.316 DEBUG 7620 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 14:12:21.317 DEBUG 7620 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 14:12:21.317  INFO 7620 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:12:21.317  INFO 7620 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 14:12:21.584  INFO 7620 --- [http-nio-8080-exec-2] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:13:34.575  INFO 7620 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/15/edit', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.editPage', args=[{}, 15]}
2021-07-28 14:13:34.577  INFO 7620 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 从redis中获取Blog的数据，标题为Java合并两个int数组
2021-07-28 14:13:34.593 DEBUG 7620 --- [http-nio-8080-exec-1] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 14:13:34.593 DEBUG 7620 --- [http-nio-8080-exec-1] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 15(Integer)
2021-07-28 14:13:34.595 DEBUG 7620 --- [http-nio-8080-exec-1] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 14:13:34.595 DEBUG 7620 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 14:13:34.595 DEBUG 7620 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 14:13:34.596 DEBUG 7620 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 14:13:34.596 DEBUG 7620 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TagMapper.selectAll    : ==>  Preparing: SELECT tag_id,name FROM tag 
2021-07-28 14:13:34.597 DEBUG 7620 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TagMapper.selectAll    : ==> Parameters: 
2021-07-28 14:13:34.598 DEBUG 7620 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TagMapper.selectAll    : <==      Total: 7
2021-07-28 14:13:34.598  INFO 7620 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:13:34.599  INFO 7620 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : admin/blogs-input 
2021-07-28 14:13:34.885  INFO 7620 --- [http-nio-8080-exec-10] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:13:39.341  INFO 7620 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/add', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogAdd', args=[Blog(blogId=15, typeId=6, userId=null, title=Java合并两个int数组, content=```java
public static void main(String[] args) {
        int[] a = {1,2};
        int[] b = {3,4};
        System.out.println(Arrays.toString(contact(a, b)));
    }
public static int[] contact(int[] a, int[] b) {
        int[] result = new int[a.length + b.length];
        for (int i = 0; i < result.length; i++) {
            if (i < a.length) {
                result[i] = a[i];
            } else {
                result[i] = b[i - a.length];
            }
        }
        return result;
    }
```

打印输出：

```java
[1, 2, 3, 4]
```
, firstPicture=https://images.unsplash.com/photo-1586398798112-9aa9aa7b35f1?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80, flag=原创, description=记录下Java代码实现合并两个int数组, views=null, appreciation=true, shareStatement=true, comment=true, publish=true, recommend=true, createTime=null, updateTime=null, type=null, user=null, tags=null), org.apache.catalina.session.StandardSessionFacade@3efb8b9f, {}, 22]}
2021-07-28 14:13:39.342 DEBUG 7620 --- [http-nio-8080-exec-4] b.l.b.m.TypeMapper.selectByPrimaryKey    : ==>  Preparing: SELECT type_id,name FROM type WHERE type_id = ? 
2021-07-28 14:13:39.342 DEBUG 7620 --- [http-nio-8080-exec-4] b.l.b.m.TypeMapper.selectByPrimaryKey    : ==> Parameters: 6(Integer)
2021-07-28 14:13:39.343 DEBUG 7620 --- [http-nio-8080-exec-4] b.l.b.m.TypeMapper.selectByPrimaryKey    : <==      Total: 1
2021-07-28 14:13:39.344 DEBUG 7620 --- [http-nio-8080-exec-4] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:13:39.344 DEBUG 7620 --- [http-nio-8080-exec-4] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 22(String)
2021-07-28 14:13:39.345 DEBUG 7620 --- [http-nio-8080-exec-4] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:13:39.352 DEBUG 7620 --- [http-nio-8080-exec-4] b.l.b.m.B.updateByPrimaryKeySelective    : ==>  Preparing: UPDATE blog SET type_id = ?,user_id = ?,title = ?,content = ?,first_picture = ?,flag = ?,description = ?,appreciation = ?,share_statement = ?,comment = ?,publish = ?,recommend = ?,update_time = ? WHERE blog_id = ? 
2021-07-28 14:13:39.354 DEBUG 7620 --- [http-nio-8080-exec-4] b.l.b.m.B.updateByPrimaryKeySelective    : ==> Parameters: 6(Integer), 1(Integer), Java合并两个int数组(String), ```java
public static void main(String[] args) {
        int[] a = {1,2};
        int[] b = {3,4};
        System.out.println(Arrays.toString(contact(a, b)));
    }
public static int[] contact(int[] a, int[] b) {
        int[] result = new int[a.length + b.length];
        for (int i = 0; i < result.length; i++) {
            if (i < a.length) {
                result[i] = a[i];
            } else {
                result[i] = b[i - a.length];
            }
        }
        return result;
    }
```

打印输出：

```java
[1, 2, 3, 4]
```
(String), https://images.unsplash.com/photo-1586398798112-9aa9aa7b35f1?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80(String), 原创(String), 记录下Java代码实现合并两个int数组(String), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2021-07-28 14:13:39.35(Timestamp), 15(Integer)
2021-07-28 14:13:39.356 DEBUG 7620 --- [http-nio-8080-exec-4] b.l.b.m.B.updateByPrimaryKeySelective    : <==    Updates: 1
2021-07-28 14:13:39.359 DEBUG 7620 --- [http-nio-8080-exec-4] b.l.b.m.BlogTagMapper.deleteByExample    : ==>  Preparing: DELETE FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 14:13:39.359 DEBUG 7620 --- [http-nio-8080-exec-4] b.l.b.m.BlogTagMapper.deleteByExample    : ==> Parameters: 15(Integer)
2021-07-28 14:13:39.360 DEBUG 7620 --- [http-nio-8080-exec-4] b.l.b.m.BlogTagMapper.deleteByExample    : <==    Updates: 1
2021-07-28 14:13:39.362 DEBUG 7620 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.BlogTagMapper.insert   : ==>  Preparing: INSERT INTO blog_tag ( blog_tag_id,blog_id,tag_id ) VALUES( ?,?,? ) 
2021-07-28 14:13:39.362 DEBUG 7620 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.BlogTagMapper.insert   : ==> Parameters: null, 15(Integer), 22(Integer)
2021-07-28 14:13:39.363 DEBUG 7620 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.BlogTagMapper.insert   : <==    Updates: 1
2021-07-28 14:13:39.365  INFO 7620 --- [http-nio-8080-exec-4] black.lyg.blog.service.BlogService       : 删除redis中key为blogtags的hash数据类型
2021-07-28 14:13:39.366 DEBUG 7620 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectByPrimaryKey    : ==>  Preparing: SELECT blog_id,type_id,user_id,title,content,first_picture,flag,description,views,appreciation,share_statement,comment,publish,recommend,create_time,update_time FROM blog WHERE blog_id = ? 
2021-07-28 14:13:39.366 DEBUG 7620 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectByPrimaryKey    : ==> Parameters: 15(Integer)
2021-07-28 14:13:39.368 DEBUG 7620 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectByPrimaryKey    : <==      Total: 1
2021-07-28 14:13:39.370  INFO 7620 --- [http-nio-8080-exec-4] black.lyg.blog.service.BlogService       : 更新redis中TheLatestBlog的数据，标题为Java合并两个int数组
2021-07-28 14:13:39.371  INFO 7620 --- [http-nio-8080-exec-4] black.lyg.blog.service.BlogService       : 更新redis中AllBlog的数据，标题为Java合并两个int数组
2021-07-28 14:13:39.374  INFO 7620 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:13:39.374  INFO 7620 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : result : redirect:/admin/blogs/admin 
2021-07-28 14:13:39.388  INFO 7620 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{message=操作成功}, admin, 1]}
2021-07-28 14:13:39.388 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 14:13:39.389 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 14:13:39.390 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 14:13:39.391 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 14:13:39.391 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 14:13:39.392 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 14:13:39.393 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 14:13:39.393 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 14:13:39.395 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:13:39.396 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:13:39.396 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:13:39.397 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:13:39.397 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:13:39.397 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:13:39.398 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:13:39.398 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:13:39.398 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:13:39.399 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 14:13:39.399 DEBUG 7620 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 14:13:39.399 DEBUG 7620 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 14:13:39.400 DEBUG 7620 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 14:13:39.400  INFO 7620 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:13:39.400  INFO 7620 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 14:13:39.662  INFO 7620 --- [http-nio-8080-exec-7] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:13:51.837  INFO 7620 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , false, admin]}
2021-07-28 14:13:51.839 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE 1 = 1 
2021-07-28 14:13:51.839 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==> Parameters: 
2021-07-28 14:13:51.841 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.m.B.findBlogByKeyWords_COUNT       : <==      Total: 1
2021-07-28 14:13:51.842 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 order by update_time desc LIMIT ? 
2021-07-28 14:13:51.842 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 8(Integer)
2021-07-28 14:13:51.845 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:13:51.845 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:13:51.846 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:13:51.847 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:13:51.847 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:13:51.848 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:13:51.848 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:13:51.848 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:13:51.849 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:13:51.849 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:13:51.850 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 14:13:51.850 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:13:51.851 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:13:51.851 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 14:13:51.852 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:13:51.852 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:13:51.852 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 14:13:51.853 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:13:51.854 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 8
2021-07-28 14:13:51.854 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? 
2021-07-28 14:13:51.854 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String)
2021-07-28 14:13:51.855 DEBUG 7620 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 14:13:51.856  INFO 7620 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:13:51.856  INFO 7620 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : result : admin/blogs :: blogList 
2021-07-28 14:14:08.574  INFO 7620 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 14:14:08.575 DEBUG 7620 --- [http-nio-8080-exec-6] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 14:14:08.575 DEBUG 7620 --- [http-nio-8080-exec-6] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 14:14:08.577 DEBUG 7620 --- [http-nio-8080-exec-6] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 14:14:08.577 DEBUG 7620 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 14:14:08.578 DEBUG 7620 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 14:14:08.579 DEBUG 7620 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 14:14:08.580 DEBUG 7620 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 14:14:08.580 DEBUG 7620 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 14:14:08.583 DEBUG 7620 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:14:08.583 DEBUG 7620 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:14:08.584 DEBUG 7620 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:14:08.585 DEBUG 7620 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:14:08.585 DEBUG 7620 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:14:08.586 DEBUG 7620 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:14:08.587 DEBUG 7620 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:14:08.587 DEBUG 7620 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:14:08.588 DEBUG 7620 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:14:08.589 DEBUG 7620 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 14:14:08.589 DEBUG 7620 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 14:14:08.590 DEBUG 7620 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 14:14:08.591 DEBUG 7620 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 14:14:08.591  INFO 7620 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:14:08.592  INFO 7620 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 14:14:08.853  INFO 7620 --- [http-nio-8080-exec-3] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:17:32.084  INFO 7620 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , false, admin]}
2021-07-28 14:17:32.087 DEBUG 7620 --- [http-nio-8080-exec-4] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE 1 = 1 
2021-07-28 14:17:32.088 DEBUG 7620 --- [http-nio-8080-exec-4] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==> Parameters: 
2021-07-28 14:17:32.089 DEBUG 7620 --- [http-nio-8080-exec-4] b.l.b.m.B.findBlogByKeyWords_COUNT       : <==      Total: 1
2021-07-28 14:17:32.090 DEBUG 7620 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 order by update_time desc LIMIT ? 
2021-07-28 14:17:32.090 DEBUG 7620 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 8(Integer)
2021-07-28 14:17:32.092 DEBUG 7620 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:17:32.092 DEBUG 7620 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:17:32.093 DEBUG 7620 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:17:32.093 DEBUG 7620 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:17:32.093 DEBUG 7620 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:17:32.094 DEBUG 7620 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:17:32.094 DEBUG 7620 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:17:32.094 DEBUG 7620 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:17:32.095 DEBUG 7620 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:17:32.095 DEBUG 7620 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:17:32.095 DEBUG 7620 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 14:17:32.096 DEBUG 7620 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:17:32.096 DEBUG 7620 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:17:32.096 DEBUG 7620 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 14:17:32.097 DEBUG 7620 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:17:32.097 DEBUG 7620 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:17:32.097 DEBUG 7620 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 14:17:32.098 DEBUG 7620 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:17:32.098 DEBUG 7620 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 8
2021-07-28 14:17:32.098 DEBUG 7620 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? 
2021-07-28 14:17:32.099 DEBUG 7620 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String)
2021-07-28 14:17:32.099 DEBUG 7620 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 14:17:32.100  INFO 7620 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:17:32.100  INFO 7620 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : result : admin/blogs :: blogList 
2021-07-28 14:17:35.283  INFO 7620 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , true, admin]}
2021-07-28 14:17:35.285 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE 1 = 1 AND recommend = ? 
2021-07-28 14:17:35.285 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==> Parameters: 1(String)
2021-07-28 14:17:35.286 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.m.B.findBlogByKeyWords_COUNT       : <==      Total: 1
2021-07-28 14:17:35.287 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 AND recommend = ? order by update_time desc LIMIT ? 
2021-07-28 14:17:35.287 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 1(String), 8(Integer)
2021-07-28 14:17:35.290 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:17:35.290 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:17:35.291 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:17:35.291 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:17:35.291 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:17:35.292 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:17:35.293 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:17:35.293 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:17:35.294 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:17:35.294 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:17:35.294 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 14:17:35.295 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:17:35.295 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:17:35.296 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 14:17:35.296 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:17:35.297 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:17:35.297 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 14:17:35.297 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:17:35.298 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 8
2021-07-28 14:17:35.298 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? 
2021-07-28 14:17:35.298 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String)
2021-07-28 14:17:35.299 DEBUG 7620 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 14:17:35.299  INFO 7620 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:17:35.299  INFO 7620 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : result : admin/blogs :: blogList 
2021-07-28 14:18:53.040  INFO 2520 --- [restartedMain] black.lyg.blog.BlogApplication           : Starting BlogApplication on Administraror with PID 2520 (D:\Desktop\blog\blog-master\target\classes started by Administrator in D:\Desktop\blog\blog-master)
2021-07-28 14:18:53.042 DEBUG 2520 --- [restartedMain] black.lyg.blog.BlogApplication           : Running with Spring Boot v2.2.6.RELEASE, Spring v5.2.5.RELEASE
2021-07-28 14:18:53.042  INFO 2520 --- [restartedMain] black.lyg.blog.BlogApplication           : The following profiles are active: dev
2021-07-28 14:18:53.081  INFO 2520 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-07-28 14:18:53.081  INFO 2520 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-07-28 14:18:53.590  INFO 2520 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-28 14:18:53.591  INFO 2520 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-28 14:18:53.615  INFO 2520 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15ms. Found 0 Redis repository interfaces.
2021-07-28 14:18:53.699  WARN 2520 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[black.lyg.blog]' package. Please check your configuration.
2021-07-28 14:18:54.173  INFO 2520 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-07-28 14:18:54.179  INFO 2520 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-28 14:18:54.179  INFO 2520 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-28 14:18:54.180  INFO 2520 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : An older version [1.2.14] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.23]
2021-07-28 14:18:54.181  INFO 2520 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.14] using APR version [1.6.2].
2021-07-28 14:18:54.181  INFO 2520 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-07-28 14:18:54.181  INFO 2520 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-07-28 14:18:55.209  INFO 2520 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.0.2l  25 May 2017]
2021-07-28 14:18:55.310  INFO 2520 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-28 14:18:55.310  INFO 2520 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2229 ms
2021-07-28 14:18:55.345  INFO 2520 --- [restartedMain] o.s.boot.web.servlet.RegistrationBean    : Filter webStatFilter was not registered (possibly already registered?)
2021-07-28 14:18:56.272  INFO 2520 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-28 14:18:56.347  INFO 2520 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-07-28 14:18:56.820  INFO 2520 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-07-28 14:18:56.862  INFO 2520 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-07-28 14:18:56.864  INFO 2520 --- [restartedMain] black.lyg.blog.BlogApplication           : Started BlogApplication in 4.136 seconds (JVM running for 5.547)
2021-07-28 14:18:56.900  INFO 2520 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-28 14:18:57.900 DEBUG 2520 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc 
2021-07-28 14:18:57.917 DEBUG 2520 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 
2021-07-28 14:18:57.942 DEBUG 2520 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:18:57.942 DEBUG 2520 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:18:57.944 DEBUG 2520 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:18:57.945 DEBUG 2520 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:18:57.946 DEBUG 2520 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:18:57.947 DEBUG 2520 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:18:57.949 DEBUG 2520 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:18:57.949 DEBUG 2520 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:18:57.951 DEBUG 2520 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:18:57.952 DEBUG 2520 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:18:57.952 DEBUG 2520 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 14:18:57.953 DEBUG 2520 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:18:57.954 DEBUG 2520 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:18:57.954 DEBUG 2520 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 14:18:57.955 DEBUG 2520 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:18:57.956 DEBUG 2520 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:18:57.956 DEBUG 2520 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 14:18:57.957 DEBUG 2520 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:18:57.959 DEBUG 2520 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 9
2021-07-28 14:18:58.060  INFO 2520 --- [restartedMain] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2021-07-28 14:18:58.061  INFO 2520 --- [restartedMain] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2021-07-28 14:18:59.806  INFO 2520 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java合并两个int数组
2021-07-28 14:18:59.808  INFO 2520 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：条件注解@Conditional
2021-07-28 14:18:59.809  INFO 2520 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：随笔
2021-07-28 14:18:59.811  INFO 2520 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java常见关键字final、static、super、abstract、this
2021-07-28 14:18:59.812  INFO 2520 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：挖掘机技术哪家强
2021-07-28 14:18:59.813  INFO 2520 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：欢迎使用 Markdown在线编辑器 MdEditor
2021-07-28 14:18:59.815  INFO 2520 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java中 equals() 和 hashCode()的关系
2021-07-28 14:18:59.816  INFO 2520 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（二）：Hash
2021-07-28 14:18:59.817  INFO 2520 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（一）：String
2021-07-28 14:18:59.820  INFO 2520 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 初始化redis中blogCount的数量为：9
2021-07-28 14:19:05.195  INFO 2520 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-28 14:19:05.195  INFO 2520 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-28 14:19:05.203  INFO 2520 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 8 ms
2021-07-28 14:19:05.375 DEBUG 2520 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==>  Preparing: SELECT count(0) FROM blog 
2021-07-28 14:19:05.376 DEBUG 2520 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==> Parameters: 
2021-07-28 14:19:05.378 DEBUG 2520 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.findBlogAll_COUNT     : <==      Total: 1
2021-07-28 14:19:05.379 DEBUG 2520 --- [http-nio-8080-exec-1] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc LIMIT ? 
2021-07-28 14:19:05.380 DEBUG 2520 --- [http-nio-8080-exec-1] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 5(Integer)
2021-07-28 14:19:05.382 DEBUG 2520 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:19:05.382 DEBUG 2520 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:19:05.383 DEBUG 2520 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:19:05.383 DEBUG 2520 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:19:05.383 DEBUG 2520 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:19:05.385 DEBUG 2520 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:19:05.385 DEBUG 2520 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:19:05.385 DEBUG 2520 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:19:05.386 DEBUG 2520 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:19:05.387 DEBUG 2520 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:19:05.387 DEBUG 2520 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 14:19:05.389 DEBUG 2520 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:19:05.389 DEBUG 2520 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:19:05.389 DEBUG 2520 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 14:19:05.391 DEBUG 2520 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:19:05.391 DEBUG 2520 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:19:05.391 DEBUG 2520 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 14:19:05.392 DEBUG 2520 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:19:05.392 DEBUG 2520 --- [http-nio-8080-exec-1] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 5
2021-07-28 14:19:05.422  INFO 2520 --- [http-nio-8080-exec-1] black.lyg.blog.service.TagService        : 从redis中获取数据：[]
2021-07-28 14:19:05.424 DEBUG 2520 --- [http-nio-8080-exec-1] b.l.b.m.TagMapper.findSeveralTopTags     : ==>  Preparing: select distinct t.tag_id,t.name ,count(*) as number from tag t ,blog_tag bt where t.tag_id = bt.tag_id group by t.tag_id, t.name order by number desc limit ? 
2021-07-28 14:19:05.424 DEBUG 2520 --- [http-nio-8080-exec-1] b.l.b.m.TagMapper.findSeveralTopTags     : ==> Parameters: 10(Integer)
2021-07-28 14:19:05.426 DEBUG 2520 --- [http-nio-8080-exec-1] b.l.b.m.TagMapper.findSeveralTopTags     : <==      Total: 7
2021-07-28 14:19:05.429  INFO 2520 --- [http-nio-8080-exec-1] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=21, name=Redis, BlogNumber=4)
2021-07-28 14:19:05.429  INFO 2520 --- [http-nio-8080-exec-1] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=22, name=Java, BlogNumber=4)
2021-07-28 14:19:05.430  INFO 2520 --- [http-nio-8080-exec-1] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=1, name=Spring, BlogNumber=2)
2021-07-28 14:19:05.431  INFO 2520 --- [http-nio-8080-exec-1] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=20, name=设计模式, BlogNumber=2)
2021-07-28 14:19:05.432  INFO 2520 --- [http-nio-8080-exec-1] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=24, name=测试, BlogNumber=2)
2021-07-28 14:19:05.432  INFO 2520 --- [http-nio-8080-exec-1] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=2, name=Mybatis, BlogNumber=1)
2021-07-28 14:19:05.433  INFO 2520 --- [http-nio-8080-exec-1] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=23, name=MySQL, BlogNumber=1)
2021-07-28 14:19:05.433  INFO 2520 --- [http-nio-8080-exec-1] black.lyg.blog.service.TagService        : 从Mysql中查找到由标签显示博客的数据：[TagTops(tagId=21, name=Redis, BlogNumber=4), TagTops(tagId=22, name=Java, BlogNumber=4), TagTops(tagId=1, name=Spring, BlogNumber=2), TagTops(tagId=20, name=设计模式, BlogNumber=2), TagTops(tagId=24, name=测试, BlogNumber=2), TagTops(tagId=2, name=Mybatis, BlogNumber=1), TagTops(tagId=23, name=MySQL, BlogNumber=1)]
2021-07-28 14:19:05.447  INFO 2520 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:19:06.017  INFO 2520 --- [http-nio-8080-exec-2] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:19:34.458  INFO 2520 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.loginPage', args=[]}
2021-07-28 14:19:34.460  INFO 2520 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:19:34.460  INFO 2520 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : result : admin/login 
2021-07-28 14:19:38.757  INFO 2520 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.login', args=[admin, lyg0918, org.apache.catalina.session.StandardSessionFacade@6d51e6c8, {}]}
2021-07-28 14:19:38.758 DEBUG 2520 --- [http-nio-8080-exec-5] .l.b.m.U.selectUserNameByNameAndPassWord : ==>  Preparing: select * from user where username = ? and password = ? 
2021-07-28 14:19:38.758 DEBUG 2520 --- [http-nio-8080-exec-5] .l.b.m.U.selectUserNameByNameAndPassWord : ==> Parameters: admin(String), 89446CF944BBA2485A8562075A0E0BB7(String)
2021-07-28 14:19:38.759 DEBUG 2520 --- [http-nio-8080-exec-5] .l.b.m.U.selectUserNameByNameAndPassWord : <==      Total: 1
2021-07-28 14:19:38.760  INFO 2520 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:19:38.760  INFO 2520 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : result : admin/index 
2021-07-28 14:19:39.033  INFO 2520 --- [http-nio-8080-exec-6] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:20:35.506  INFO 2520 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 14:20:35.511 DEBUG 2520 --- [http-nio-8080-exec-3] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 14:20:35.511 DEBUG 2520 --- [http-nio-8080-exec-3] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 14:20:35.512 DEBUG 2520 --- [http-nio-8080-exec-3] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 14:20:35.513 DEBUG 2520 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 14:20:35.513 DEBUG 2520 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 14:20:35.515 DEBUG 2520 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 14:20:35.516 DEBUG 2520 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 14:20:35.516 DEBUG 2520 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 14:20:35.518 DEBUG 2520 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:20:35.519 DEBUG 2520 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:20:35.519 DEBUG 2520 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:20:35.520 DEBUG 2520 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:20:35.521 DEBUG 2520 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:20:35.522 DEBUG 2520 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:20:35.523 DEBUG 2520 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:20:35.523 DEBUG 2520 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:20:35.524 DEBUG 2520 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:20:35.525 DEBUG 2520 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 14:20:35.536 DEBUG 2520 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 14:20:35.536 DEBUG 2520 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 14:20:35.538 DEBUG 2520 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 14:20:35.538  INFO 2520 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:20:35.538  INFO 2520 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 14:20:35.828  INFO 2520 --- [http-nio-8080-exec-9] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:20:40.593  INFO 2520 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , false, admin]}
2021-07-28 14:20:40.605 DEBUG 2520 --- [http-nio-8080-exec-4] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE 1 = 1 
2021-07-28 14:20:40.605 DEBUG 2520 --- [http-nio-8080-exec-4] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==> Parameters: 
2021-07-28 14:20:40.608 DEBUG 2520 --- [http-nio-8080-exec-4] b.l.b.m.B.findBlogByKeyWords_COUNT       : <==      Total: 1
2021-07-28 14:20:40.608 DEBUG 2520 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 order by update_time desc LIMIT ? 
2021-07-28 14:20:40.608 DEBUG 2520 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 8(Integer)
2021-07-28 14:20:40.611 DEBUG 2520 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:20:40.612 DEBUG 2520 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:20:40.614 DEBUG 2520 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:20:40.614 DEBUG 2520 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:20:40.614 DEBUG 2520 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:20:40.614 DEBUG 2520 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:20:40.615 DEBUG 2520 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:20:40.615 DEBUG 2520 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:20:40.615 DEBUG 2520 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:20:40.617 DEBUG 2520 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:20:40.617 DEBUG 2520 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 14:20:40.617 DEBUG 2520 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:20:40.617 DEBUG 2520 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:20:40.617 DEBUG 2520 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 14:20:40.618 DEBUG 2520 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:20:40.618 DEBUG 2520 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:20:40.618 DEBUG 2520 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 14:20:40.619 DEBUG 2520 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:20:40.620 DEBUG 2520 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 8
2021-07-28 14:20:40.620  INFO 2520 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:20:40.620  INFO 2520 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : result : admin/blogs :: blogList 
2021-07-28 14:20:50.041  INFO 2520 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 14:20:50.042 DEBUG 2520 --- [http-nio-8080-exec-2] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 14:20:50.042 DEBUG 2520 --- [http-nio-8080-exec-2] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 14:20:50.043 DEBUG 2520 --- [http-nio-8080-exec-2] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 14:20:50.044 DEBUG 2520 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 14:20:50.044 DEBUG 2520 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 14:20:50.045 DEBUG 2520 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 14:20:50.046 DEBUG 2520 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 14:20:50.046 DEBUG 2520 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 14:20:50.050 DEBUG 2520 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:20:50.050 DEBUG 2520 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:20:50.051 DEBUG 2520 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:20:50.052 DEBUG 2520 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:20:50.052 DEBUG 2520 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:20:50.053 DEBUG 2520 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:20:50.053 DEBUG 2520 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:20:50.054 DEBUG 2520 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:20:50.054 DEBUG 2520 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:20:50.055 DEBUG 2520 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 14:20:50.055 DEBUG 2520 --- [http-nio-8080-exec-2] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 14:20:50.055 DEBUG 2520 --- [http-nio-8080-exec-2] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 14:20:50.056 DEBUG 2520 --- [http-nio-8080-exec-2] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 14:20:50.056  INFO 2520 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:20:50.057  INFO 2520 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 14:20:50.341  INFO 2520 --- [http-nio-8080-exec-7] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:22:10.074  INFO 4692 --- [restartedMain] black.lyg.blog.BlogApplication           : Starting BlogApplication on Administraror with PID 4692 (D:\Desktop\blog\blog-master\target\classes started by Administrator in D:\Desktop\blog\blog-master)
2021-07-28 14:22:10.076 DEBUG 4692 --- [restartedMain] black.lyg.blog.BlogApplication           : Running with Spring Boot v2.2.6.RELEASE, Spring v5.2.5.RELEASE
2021-07-28 14:22:10.076  INFO 4692 --- [restartedMain] black.lyg.blog.BlogApplication           : The following profiles are active: dev
2021-07-28 14:22:10.111  INFO 4692 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-07-28 14:22:10.112  INFO 4692 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-07-28 14:22:10.620  INFO 4692 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-28 14:22:10.621  INFO 4692 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-28 14:22:10.645  INFO 4692 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15ms. Found 0 Redis repository interfaces.
2021-07-28 14:22:10.730  WARN 4692 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[black.lyg.blog]' package. Please check your configuration.
2021-07-28 14:22:11.206  INFO 4692 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-07-28 14:22:11.211  INFO 4692 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-28 14:22:11.212  INFO 4692 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-28 14:22:11.213  INFO 4692 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : An older version [1.2.14] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.23]
2021-07-28 14:22:11.213  INFO 4692 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.14] using APR version [1.6.2].
2021-07-28 14:22:11.213  INFO 4692 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-07-28 14:22:11.213  INFO 4692 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-07-28 14:22:12.241  INFO 4692 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.0.2l  25 May 2017]
2021-07-28 14:22:12.339  INFO 4692 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-28 14:22:12.339  INFO 4692 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2227 ms
2021-07-28 14:22:12.373  INFO 4692 --- [restartedMain] o.s.boot.web.servlet.RegistrationBean    : Filter webStatFilter was not registered (possibly already registered?)
2021-07-28 14:22:13.273  INFO 4692 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-28 14:22:13.339  INFO 4692 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-07-28 14:22:13.775  INFO 4692 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-07-28 14:22:13.812  INFO 4692 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-07-28 14:22:13.814  INFO 4692 --- [restartedMain] black.lyg.blog.BlogApplication           : Started BlogApplication in 4.05 seconds (JVM running for 5.378)
2021-07-28 14:22:13.845  INFO 4692 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-28 14:22:14.791 DEBUG 4692 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc 
2021-07-28 14:22:14.807 DEBUG 4692 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 
2021-07-28 14:22:14.830 DEBUG 4692 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:22:14.830 DEBUG 4692 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:22:14.832 DEBUG 4692 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:22:14.833 DEBUG 4692 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:22:14.834 DEBUG 4692 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:22:14.835 DEBUG 4692 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:22:14.836 DEBUG 4692 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:22:14.837 DEBUG 4692 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:22:14.837 DEBUG 4692 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:22:14.838 DEBUG 4692 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:22:14.838 DEBUG 4692 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 14:22:14.839 DEBUG 4692 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:22:14.840 DEBUG 4692 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:22:14.840 DEBUG 4692 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 14:22:14.841 DEBUG 4692 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:22:14.841 DEBUG 4692 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:22:14.841 DEBUG 4692 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 14:22:14.842 DEBUG 4692 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:22:14.844 DEBUG 4692 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 9
2021-07-28 14:22:14.935  INFO 4692 --- [restartedMain] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2021-07-28 14:22:14.935  INFO 4692 --- [restartedMain] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2021-07-28 14:22:16.584  INFO 4692 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java合并两个int数组
2021-07-28 14:22:16.585  INFO 4692 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：条件注解@Conditional
2021-07-28 14:22:16.587  INFO 4692 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：随笔
2021-07-28 14:22:16.588  INFO 4692 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java常见关键字final、static、super、abstract、this
2021-07-28 14:22:16.588  INFO 4692 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：挖掘机技术哪家强
2021-07-28 14:22:16.590  INFO 4692 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：欢迎使用 Markdown在线编辑器 MdEditor
2021-07-28 14:22:16.591  INFO 4692 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java中 equals() 和 hashCode()的关系
2021-07-28 14:22:16.592  INFO 4692 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（二）：Hash
2021-07-28 14:22:16.593  INFO 4692 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（一）：String
2021-07-28 14:22:16.595  INFO 4692 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 初始化redis中blogCount的数量为：9
2021-07-28 14:22:34.619  INFO 4692 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-28 14:22:34.620  INFO 4692 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-28 14:22:34.628  INFO 4692 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 8 ms
2021-07-28 14:22:34.645  INFO 4692 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.loginPage', args=[]}
2021-07-28 14:22:34.649  INFO 4692 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:22:34.649  INFO 4692 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : admin/login 
2021-07-28 14:22:43.883  INFO 4692 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.login', args=[admin, lyg0918, org.apache.catalina.session.StandardSessionFacade@57056615, {}]}
2021-07-28 14:22:43.886 DEBUG 4692 --- [http-nio-8080-exec-4] .l.b.m.U.selectUserNameByNameAndPassWord : ==>  Preparing: select * from user where username = ? and password = ? 
2021-07-28 14:22:43.886 DEBUG 4692 --- [http-nio-8080-exec-4] .l.b.m.U.selectUserNameByNameAndPassWord : ==> Parameters: admin(String), 89446CF944BBA2485A8562075A0E0BB7(String)
2021-07-28 14:22:43.886 DEBUG 4692 --- [http-nio-8080-exec-4] .l.b.m.U.selectUserNameByNameAndPassWord : <==      Total: 1
2021-07-28 14:22:43.887  INFO 4692 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:22:43.887  INFO 4692 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : result : admin/index 
2021-07-28 14:22:44.220  INFO 4692 --- [http-nio-8080-exec-6] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:22:47.079  INFO 4692 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 14:22:47.098 DEBUG 4692 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 14:22:47.098 DEBUG 4692 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 14:22:47.099 DEBUG 4692 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 14:22:47.100 DEBUG 4692 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 14:22:47.101 DEBUG 4692 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 14:22:47.102 DEBUG 4692 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 14:22:47.103 DEBUG 4692 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 14:22:47.103 DEBUG 4692 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 14:22:47.106 DEBUG 4692 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:22:47.106 DEBUG 4692 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:22:47.107 DEBUG 4692 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:22:47.107 DEBUG 4692 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:22:47.107 DEBUG 4692 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:22:47.108 DEBUG 4692 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:22:47.109 DEBUG 4692 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:22:47.110 DEBUG 4692 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:22:47.110 DEBUG 4692 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:22:47.111 DEBUG 4692 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 14:22:47.125 DEBUG 4692 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 14:22:47.126 DEBUG 4692 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 14:22:47.127 DEBUG 4692 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 14:22:47.127  INFO 4692 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:22:47.128  INFO 4692 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 14:22:47.404  INFO 4692 --- [http-nio-8080-exec-3] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:22:50.076  INFO 4692 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , false, admin]}
2021-07-28 14:22:50.088 DEBUG 4692 --- [http-nio-8080-exec-7] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE 1 = 1 
2021-07-28 14:22:50.088 DEBUG 4692 --- [http-nio-8080-exec-7] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==> Parameters: 
2021-07-28 14:22:50.091 DEBUG 4692 --- [http-nio-8080-exec-7] b.l.b.m.B.findBlogByKeyWords_COUNT       : <==      Total: 1
2021-07-28 14:22:50.091 DEBUG 4692 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 order by update_time desc LIMIT ? 
2021-07-28 14:22:50.092 DEBUG 4692 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 8(Integer)
2021-07-28 14:22:50.094 DEBUG 4692 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:22:50.094 DEBUG 4692 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:22:50.095 DEBUG 4692 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:22:50.095 DEBUG 4692 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:22:50.095 DEBUG 4692 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:22:50.096 DEBUG 4692 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:22:50.097 DEBUG 4692 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:22:50.097 DEBUG 4692 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:22:50.098 DEBUG 4692 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:22:50.099 DEBUG 4692 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:22:50.099 DEBUG 4692 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 14:22:50.102 DEBUG 4692 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:22:50.102 DEBUG 4692 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:22:50.102 DEBUG 4692 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 14:22:50.104 DEBUG 4692 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:22:50.104 DEBUG 4692 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:22:50.104 DEBUG 4692 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 14:22:50.105 DEBUG 4692 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:22:50.106 DEBUG 4692 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 8
2021-07-28 14:22:50.106  INFO 4692 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:22:50.106  INFO 4692 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : result : admin/blogs :: blogList 
2021-07-28 14:23:10.696  INFO 4692 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , true, admin]}
2021-07-28 14:23:10.698 DEBUG 4692 --- [http-nio-8080-exec-9] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE 1 = 1 AND recommend = ? 
2021-07-28 14:23:10.699 DEBUG 4692 --- [http-nio-8080-exec-9] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==> Parameters: 1(String)
2021-07-28 14:23:10.700 DEBUG 4692 --- [http-nio-8080-exec-9] b.l.b.m.B.findBlogByKeyWords_COUNT       : <==      Total: 1
2021-07-28 14:23:10.701 DEBUG 4692 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 AND recommend = ? order by update_time desc LIMIT ? 
2021-07-28 14:23:10.701 DEBUG 4692 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 1(String), 8(Integer)
2021-07-28 14:23:10.705 DEBUG 4692 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:23:10.705 DEBUG 4692 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:23:10.706 DEBUG 4692 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:23:10.706 DEBUG 4692 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:23:10.706 DEBUG 4692 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:23:10.708 DEBUG 4692 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:23:10.709 DEBUG 4692 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:23:10.710 DEBUG 4692 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:23:10.710 DEBUG 4692 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:23:10.711 DEBUG 4692 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:23:10.711 DEBUG 4692 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 14:23:10.712 DEBUG 4692 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:23:10.713 DEBUG 4692 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:23:10.713 DEBUG 4692 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 14:23:10.714 DEBUG 4692 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:23:10.714 DEBUG 4692 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:23:10.714 DEBUG 4692 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 14:23:10.715 DEBUG 4692 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:23:10.716 DEBUG 4692 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 8
2021-07-28 14:23:10.717  INFO 4692 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:23:10.717  INFO 4692 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : result : admin/blogs :: blogList 
2021-07-28 14:27:01.107  INFO 2240 --- [restartedMain] black.lyg.blog.BlogApplication           : Starting BlogApplication on Administraror with PID 2240 (D:\Desktop\blog\blog-master\target\classes started by Administrator in D:\Desktop\blog\blog-master)
2021-07-28 14:27:01.109 DEBUG 2240 --- [restartedMain] black.lyg.blog.BlogApplication           : Running with Spring Boot v2.2.6.RELEASE, Spring v5.2.5.RELEASE
2021-07-28 14:27:01.110  INFO 2240 --- [restartedMain] black.lyg.blog.BlogApplication           : The following profiles are active: dev
2021-07-28 14:27:01.149  INFO 2240 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-07-28 14:27:01.150  INFO 2240 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-07-28 14:27:01.663  INFO 2240 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-28 14:27:01.665  INFO 2240 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-28 14:27:01.688  INFO 2240 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15ms. Found 0 Redis repository interfaces.
2021-07-28 14:27:01.773  WARN 2240 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[black.lyg.blog]' package. Please check your configuration.
2021-07-28 14:27:02.250  INFO 2240 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-07-28 14:27:02.256  INFO 2240 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-28 14:27:02.256  INFO 2240 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-28 14:27:02.257  INFO 2240 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : An older version [1.2.14] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.23]
2021-07-28 14:27:02.258  INFO 2240 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.14] using APR version [1.6.2].
2021-07-28 14:27:02.258  INFO 2240 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-07-28 14:27:02.258  INFO 2240 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-07-28 14:27:03.275  INFO 2240 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.0.2l  25 May 2017]
2021-07-28 14:27:03.373  INFO 2240 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-28 14:27:03.373  INFO 2240 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2223 ms
2021-07-28 14:27:03.408  INFO 2240 --- [restartedMain] o.s.boot.web.servlet.RegistrationBean    : Filter webStatFilter was not registered (possibly already registered?)
2021-07-28 14:27:04.298  INFO 2240 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-28 14:27:04.365  INFO 2240 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-07-28 14:27:04.795  INFO 2240 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-07-28 14:27:04.833  INFO 2240 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-07-28 14:27:04.835  INFO 2240 --- [restartedMain] black.lyg.blog.BlogApplication           : Started BlogApplication in 4.093 seconds (JVM running for 5.5)
2021-07-28 14:27:04.864  INFO 2240 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-28 14:27:05.807 DEBUG 2240 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc 
2021-07-28 14:27:05.823 DEBUG 2240 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 
2021-07-28 14:27:05.845 DEBUG 2240 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:27:05.845 DEBUG 2240 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:27:05.847 DEBUG 2240 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:27:05.849 DEBUG 2240 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:27:05.849 DEBUG 2240 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:27:05.850 DEBUG 2240 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:27:05.851 DEBUG 2240 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:27:05.852 DEBUG 2240 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:27:05.853 DEBUG 2240 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:27:05.853 DEBUG 2240 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:27:05.854 DEBUG 2240 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 14:27:05.855 DEBUG 2240 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:27:05.855 DEBUG 2240 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:27:05.855 DEBUG 2240 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 14:27:05.856 DEBUG 2240 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:27:05.857 DEBUG 2240 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:27:05.857 DEBUG 2240 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 14:27:05.857 DEBUG 2240 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:27:05.859 DEBUG 2240 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 9
2021-07-28 14:27:05.949  INFO 2240 --- [restartedMain] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2021-07-28 14:27:05.950  INFO 2240 --- [restartedMain] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2021-07-28 14:27:07.583  INFO 2240 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java合并两个int数组
2021-07-28 14:27:07.584  INFO 2240 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：条件注解@Conditional
2021-07-28 14:27:07.585  INFO 2240 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：随笔
2021-07-28 14:27:07.586  INFO 2240 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java常见关键字final、static、super、abstract、this
2021-07-28 14:27:07.588  INFO 2240 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：挖掘机技术哪家强
2021-07-28 14:27:07.589  INFO 2240 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：欢迎使用 Markdown在线编辑器 MdEditor
2021-07-28 14:27:07.590  INFO 2240 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java中 equals() 和 hashCode()的关系
2021-07-28 14:27:07.591  INFO 2240 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（二）：Hash
2021-07-28 14:27:07.592  INFO 2240 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（一）：String
2021-07-28 14:27:07.594  INFO 2240 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 初始化redis中blogCount的数量为：9
2021-07-28 14:27:15.696  INFO 2240 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-28 14:27:15.697  INFO 2240 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-28 14:27:15.704  INFO 2240 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 7 ms
2021-07-28 14:27:15.737  INFO 2240 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , true, admin]}
2021-07-28 14:27:15.896 DEBUG 2240 --- [http-nio-8080-exec-1] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE 1 = 1 AND recommend = ? 
2021-07-28 14:27:15.897 DEBUG 2240 --- [http-nio-8080-exec-1] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==> Parameters: 1(String)
2021-07-28 14:27:15.898 DEBUG 2240 --- [http-nio-8080-exec-1] b.l.b.m.B.findBlogByKeyWords_COUNT       : <==      Total: 1
2021-07-28 14:27:15.899 DEBUG 2240 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 AND recommend = ? order by update_time desc LIMIT ? 
2021-07-28 14:27:15.900 DEBUG 2240 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 1(String), 8(Integer)
2021-07-28 14:27:15.904 DEBUG 2240 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:27:15.905 DEBUG 2240 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:27:15.906 DEBUG 2240 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:27:15.906 DEBUG 2240 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:27:15.906 DEBUG 2240 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:27:15.908 DEBUG 2240 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:27:15.909 DEBUG 2240 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:27:15.909 DEBUG 2240 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:27:15.910 DEBUG 2240 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:27:15.911 DEBUG 2240 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:27:15.911 DEBUG 2240 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 14:27:15.912 DEBUG 2240 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:27:15.913 DEBUG 2240 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:27:15.913 DEBUG 2240 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 14:27:15.914 DEBUG 2240 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:27:15.915 DEBUG 2240 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:27:15.915 DEBUG 2240 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 14:27:15.916 DEBUG 2240 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:27:15.920 DEBUG 2240 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 8
2021-07-28 14:27:15.921  INFO 2240 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:27:15.922 ERROR 2240 --- [http-nio-8080-exec-1] b.l.b.h.ControllerExceptionHandler       : Request URL : http://localhost:8080/admin/blogs/search, Exception : java.util.ArrayList cannot be cast to com.github.pagehelper.Page
2021-07-28 14:27:15.924  WARN 2240 --- [http-nio-8080-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page]
2021-07-28 14:27:21.191  INFO 2240 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.loginPage', args=[]}
2021-07-28 14:27:21.195  INFO 2240 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:27:21.195  INFO 2240 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : result : admin/login 
2021-07-28 14:27:21.214  INFO 2240 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/types', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.TypeController.findAllTypes', args=[{}, 1]}
2021-07-28 14:27:21.229 DEBUG 2240 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectAll_COUNT  : ==>  Preparing: SELECT count(0) FROM type 
2021-07-28 14:27:21.230 DEBUG 2240 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectAll_COUNT  : ==> Parameters: 
2021-07-28 14:27:21.236 DEBUG 2240 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectAll_COUNT  : <==      Total: 1
2021-07-28 14:27:21.237 DEBUG 2240 --- [http-nio-8080-exec-2] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type LIMIT ? 
2021-07-28 14:27:21.237 DEBUG 2240 --- [http-nio-8080-exec-2] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 10(Integer)
2021-07-28 14:27:21.239 DEBUG 2240 --- [http-nio-8080-exec-2] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 14:27:21.241  INFO 2240 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:27:21.241  INFO 2240 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : result : admin/types 
2021-07-28 14:27:21.267 ERROR 2240 --- [http-nio-8080-exec-2] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-2] Exception processing template "admin/types": An error happened during template parsing (template: "class path resource [templates/admin/types.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/admin/types.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098) [thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072) [thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362) [thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189) [thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) [tomcat-embed-websocket-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124) [druid-1.1.16.jar:1.1.16]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_221]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_221]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_221]
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "session.user.username" (template: "admin/_fragments" - line 22, col 19)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	... 51 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "session.user.username" (template: "admin/_fragments" - line 22, col 19)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290) ~[thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.LinkExpression.resolveParameters(LinkExpression.java:337) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:283) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.Model.process(Model.java:282) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1587) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	... 53 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'username' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263) ~[thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	... 80 common frames omitted

2021-07-28 14:27:21.270 ERROR 2240 --- [http-nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/admin/types.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'username' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263) ~[thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.LinkExpression.resolveParameters(LinkExpression.java:337) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:283) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.Model.process(Model.java:282) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1587) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362) ~[thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189) ~[thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124) ~[druid-1.1.16.jar:1.1.16]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_221]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_221]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_221]

2021-07-28 14:27:21.277 ERROR 2240 --- [http-nio-8080-exec-2] s.e.ErrorMvcAutoConfiguration$StaticView : Cannot render error page for request [/admin/types] and exception [An error happened during template parsing (template: "class path resource [templates/admin/types.html]")] as the response has already been committed. As a result, the response may have the wrong status code.
2021-07-28 14:27:28.572  INFO 2240 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.login', args=[admin, lyg0918, org.apache.catalina.session.StandardSessionFacade@6297a6e5, {}]}
2021-07-28 14:27:28.574 DEBUG 2240 --- [http-nio-8080-exec-3] .l.b.m.U.selectUserNameByNameAndPassWord : ==>  Preparing: select * from user where username = ? and password = ? 
2021-07-28 14:27:28.574 DEBUG 2240 --- [http-nio-8080-exec-3] .l.b.m.U.selectUserNameByNameAndPassWord : ==> Parameters: admin(String), 89446CF944BBA2485A8562075A0E0BB7(String)
2021-07-28 14:27:28.576 DEBUG 2240 --- [http-nio-8080-exec-3] .l.b.m.U.selectUserNameByNameAndPassWord : <==      Total: 1
2021-07-28 14:27:28.577  INFO 2240 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:27:28.577  INFO 2240 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : result : admin/index 
2021-07-28 14:27:28.876  INFO 2240 --- [http-nio-8080-exec-9] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:27:30.898  INFO 2240 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 14:27:30.899 DEBUG 2240 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 14:27:30.899 DEBUG 2240 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 14:27:30.901 DEBUG 2240 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 14:27:30.901 DEBUG 2240 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 14:27:30.901 DEBUG 2240 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 14:27:30.902 DEBUG 2240 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 14:27:30.903 DEBUG 2240 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 14:27:30.903 DEBUG 2240 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 14:27:30.905 DEBUG 2240 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:27:30.906 DEBUG 2240 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:27:30.906 DEBUG 2240 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:27:30.906 DEBUG 2240 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:27:30.907 DEBUG 2240 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:27:30.907 DEBUG 2240 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:27:30.908 DEBUG 2240 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:27:30.908 DEBUG 2240 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:27:30.910 DEBUG 2240 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:27:30.911 DEBUG 2240 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 14:27:30.911 DEBUG 2240 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 14:27:30.911 DEBUG 2240 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 14:27:30.912 DEBUG 2240 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 14:27:30.912  INFO 2240 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:27:30.912  INFO 2240 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 14:27:31.178  INFO 2240 --- [http-nio-8080-exec-6] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:27:33.115  INFO 2240 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , false, admin]}
2021-07-28 14:27:33.116 DEBUG 2240 --- [http-nio-8080-exec-8] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE 1 = 1 
2021-07-28 14:27:33.116 DEBUG 2240 --- [http-nio-8080-exec-8] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==> Parameters: 
2021-07-28 14:27:33.118 DEBUG 2240 --- [http-nio-8080-exec-8] b.l.b.m.B.findBlogByKeyWords_COUNT       : <==      Total: 1
2021-07-28 14:27:33.118 DEBUG 2240 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 order by update_time desc LIMIT ? 
2021-07-28 14:27:33.119 DEBUG 2240 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 8(Integer)
2021-07-28 14:27:33.121 DEBUG 2240 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:27:33.121 DEBUG 2240 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:27:33.122 DEBUG 2240 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:27:33.122 DEBUG 2240 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:27:33.122 DEBUG 2240 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:27:33.123 DEBUG 2240 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:27:33.123 DEBUG 2240 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:27:33.124 DEBUG 2240 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:27:33.124 DEBUG 2240 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:27:33.125 DEBUG 2240 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:27:33.125 DEBUG 2240 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 14:27:33.126 DEBUG 2240 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:27:33.127 DEBUG 2240 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:27:33.127 DEBUG 2240 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 14:27:33.128 DEBUG 2240 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:27:33.128 DEBUG 2240 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:27:33.128 DEBUG 2240 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 14:27:33.129 DEBUG 2240 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:27:33.130 DEBUG 2240 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 8
2021-07-28 14:27:33.131  INFO 2240 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:27:33.131 ERROR 2240 --- [http-nio-8080-exec-8] b.l.b.h.ControllerExceptionHandler       : Request URL : http://localhost:8080/admin/blogs/search, Exception : java.util.ArrayList cannot be cast to com.github.pagehelper.Page
2021-07-28 14:27:33.131  WARN 2240 --- [http-nio-8080-exec-8] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page]
2021-07-28 14:28:47.248  INFO 2240 --- [Thread-13] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2021-07-28 14:28:47.365  INFO 2240 --- [Thread-13] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closing ...
2021-07-28 14:28:47.367  INFO 2240 --- [Thread-13] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2021-07-28 14:28:48.347  INFO 2240 --- [restartedMain] black.lyg.blog.BlogApplication           : Starting BlogApplication on Administraror with PID 2240 (D:\Desktop\blog\blog-master\target\classes started by Administrator in D:\Desktop\blog\blog-master)
2021-07-28 14:28:48.347 DEBUG 2240 --- [restartedMain] black.lyg.blog.BlogApplication           : Running with Spring Boot v2.2.6.RELEASE, Spring v5.2.5.RELEASE
2021-07-28 14:28:48.347  INFO 2240 --- [restartedMain] black.lyg.blog.BlogApplication           : The following profiles are active: dev
2021-07-28 14:28:48.490  INFO 2240 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-28 14:28:48.490  INFO 2240 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-28 14:28:48.501  INFO 2240 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
2021-07-28 14:28:48.526  WARN 2240 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[black.lyg.blog]' package. Please check your configuration.
2021-07-28 14:28:48.650  INFO 2240 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-07-28 14:28:48.651  INFO 2240 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-28 14:28:48.651  INFO 2240 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-28 14:28:48.651  INFO 2240 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : An older version [1.2.14] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.23]
2021-07-28 14:28:48.651  INFO 2240 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.14] using APR version [1.6.2].
2021-07-28 14:28:48.651  INFO 2240 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-07-28 14:28:48.651  INFO 2240 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-07-28 14:28:48.652  INFO 2240 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.0.2l  25 May 2017]
2021-07-28 14:28:48.665  INFO 2240 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-28 14:28:48.665  INFO 2240 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 316 ms
2021-07-28 14:28:48.684  INFO 2240 --- [restartedMain] o.s.boot.web.servlet.RegistrationBean    : Filter webStatFilter was not registered (possibly already registered?)
2021-07-28 14:28:49.135  INFO 2240 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-28 14:28:49.172  INFO 2240 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-07-28 14:28:49.490  INFO 2240 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-07-28 14:28:49.506  INFO 2240 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-07-28 14:28:49.507  INFO 2240 --- [restartedMain] black.lyg.blog.BlogApplication           : Started BlogApplication in 1.182 seconds (JVM running for 110.172)
2021-07-28 14:28:49.510  INFO 2240 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2021-07-28 14:28:49.522 DEBUG 2240 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc 
2021-07-28 14:28:49.522 DEBUG 2240 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 
2021-07-28 14:28:49.525 DEBUG 2240 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:28:49.525 DEBUG 2240 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:28:49.526 DEBUG 2240 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:28:49.527 DEBUG 2240 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:28:49.527 DEBUG 2240 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:28:49.528 DEBUG 2240 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:28:49.528 DEBUG 2240 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:28:49.528 DEBUG 2240 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:28:49.529 DEBUG 2240 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:28:49.529 DEBUG 2240 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:28:49.529 DEBUG 2240 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 14:28:49.530 DEBUG 2240 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:28:49.530 DEBUG 2240 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:28:49.530 DEBUG 2240 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 14:28:49.531 DEBUG 2240 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:28:49.531 DEBUG 2240 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:28:49.531 DEBUG 2240 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 14:28:49.532 DEBUG 2240 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:28:49.533 DEBUG 2240 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 9
2021-07-28 14:28:49.545  INFO 2240 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java合并两个int数组
2021-07-28 14:28:49.546  INFO 2240 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：条件注解@Conditional
2021-07-28 14:28:49.547  INFO 2240 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：随笔
2021-07-28 14:28:49.548  INFO 2240 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java常见关键字final、static、super、abstract、this
2021-07-28 14:28:49.549  INFO 2240 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：挖掘机技术哪家强
2021-07-28 14:28:49.550  INFO 2240 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：欢迎使用 Markdown在线编辑器 MdEditor
2021-07-28 14:28:49.551  INFO 2240 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java中 equals() 和 hashCode()的关系
2021-07-28 14:28:49.552  INFO 2240 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（二）：Hash
2021-07-28 14:28:49.553  INFO 2240 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（一）：String
2021-07-28 14:28:49.553  INFO 2240 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 初始化redis中blogCount的数量为：9
2021-07-28 14:28:49.555  INFO 2240 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2021-07-28 14:29:00.429  INFO 2240 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-28 14:29:00.430  INFO 2240 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-28 14:29:00.437  INFO 2240 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 7 ms
2021-07-28 14:29:00.442  INFO 2240 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.loginPage', args=[]}
2021-07-28 14:29:00.444  INFO 2240 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:29:00.444  INFO 2240 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : admin/login 
2021-07-28 14:29:00.465 ERROR 2240 --- [http-nio-8080-exec-1] b.l.b.h.ControllerExceptionHandler       : Request URL : http://localhost:8080/admin/blogs/admin, Exception : Missing URI template variable 'username' for method parameter of type String
2021-07-28 14:29:00.466  WARN 2240 --- [http-nio-8080-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.bind.MissingPathVariableException: Missing URI template variable 'username' for method parameter of type String]
2021-07-28 14:29:12.658  INFO 2240 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.login', args=[admin, lyg0918, org.apache.catalina.session.StandardSessionFacade@2634757d, {}]}
2021-07-28 14:29:12.659 DEBUG 2240 --- [http-nio-8080-exec-3] .l.b.m.U.selectUserNameByNameAndPassWord : ==>  Preparing: select * from user where username = ? and password = ? 
2021-07-28 14:29:12.660 DEBUG 2240 --- [http-nio-8080-exec-3] .l.b.m.U.selectUserNameByNameAndPassWord : ==> Parameters: admin(String), 89446CF944BBA2485A8562075A0E0BB7(String)
2021-07-28 14:29:12.662 DEBUG 2240 --- [http-nio-8080-exec-3] .l.b.m.U.selectUserNameByNameAndPassWord : <==      Total: 1
2021-07-28 14:29:12.662  INFO 2240 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:29:12.662  INFO 2240 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : result : admin/index 
2021-07-28 14:29:12.941  INFO 2240 --- [http-nio-8080-exec-8] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:29:15.074  INFO 2240 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 14:29:15.077 DEBUG 2240 --- [http-nio-8080-exec-10] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 14:29:15.077 DEBUG 2240 --- [http-nio-8080-exec-10] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 14:29:15.079 DEBUG 2240 --- [http-nio-8080-exec-10] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 14:29:15.079 DEBUG 2240 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 14:29:15.079 DEBUG 2240 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 14:29:15.080 DEBUG 2240 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 14:29:15.081 DEBUG 2240 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 14:29:15.081 DEBUG 2240 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 14:29:15.084 DEBUG 2240 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:29:15.084 DEBUG 2240 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:29:15.084 DEBUG 2240 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:29:15.085 DEBUG 2240 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:29:15.085 DEBUG 2240 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:29:15.086 DEBUG 2240 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:29:15.087 DEBUG 2240 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:29:15.087 DEBUG 2240 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:29:15.087 DEBUG 2240 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:29:15.088 DEBUG 2240 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 14:29:15.090 DEBUG 2240 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 14:29:15.090 DEBUG 2240 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 14:29:15.091 DEBUG 2240 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 14:29:15.091  INFO 2240 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:29:15.091  INFO 2240 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 14:29:15.348  INFO 2240 --- [http-nio-8080-exec-6] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:29:27.514  INFO 2240 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , false, admin]}
2021-07-28 14:29:27.516 DEBUG 2240 --- [http-nio-8080-exec-5] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE 1 = 1 
2021-07-28 14:29:27.516 DEBUG 2240 --- [http-nio-8080-exec-5] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==> Parameters: 
2021-07-28 14:29:27.518 DEBUG 2240 --- [http-nio-8080-exec-5] b.l.b.m.B.findBlogByKeyWords_COUNT       : <==      Total: 1
2021-07-28 14:29:27.518 DEBUG 2240 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 order by update_time desc LIMIT ? 
2021-07-28 14:29:27.519 DEBUG 2240 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 8(Integer)
2021-07-28 14:29:27.521 DEBUG 2240 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:29:27.521 DEBUG 2240 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:29:27.522 DEBUG 2240 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:29:27.522 DEBUG 2240 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:29:27.522 DEBUG 2240 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:29:27.523 DEBUG 2240 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:29:27.523 DEBUG 2240 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:29:27.523 DEBUG 2240 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:29:27.524 DEBUG 2240 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:29:27.524 DEBUG 2240 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:29:27.524 DEBUG 2240 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 14:29:27.526 DEBUG 2240 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:29:27.526 DEBUG 2240 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:29:27.526 DEBUG 2240 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 14:29:27.527 DEBUG 2240 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:29:27.528 DEBUG 2240 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:29:27.528 DEBUG 2240 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 14:29:27.529 DEBUG 2240 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:29:27.529 DEBUG 2240 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 8
2021-07-28 14:29:27.530  INFO 2240 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:29:27.530  INFO 2240 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : result : admin/blogs :: blogList 
2021-07-28 14:29:55.013  INFO 2240 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 2, , , false, admin]}
2021-07-28 14:29:55.014 DEBUG 2240 --- [http-nio-8080-exec-9] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE 1 = 1 
2021-07-28 14:29:55.014 DEBUG 2240 --- [http-nio-8080-exec-9] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==> Parameters: 
2021-07-28 14:29:55.016 DEBUG 2240 --- [http-nio-8080-exec-9] b.l.b.m.B.findBlogByKeyWords_COUNT       : <==      Total: 1
2021-07-28 14:29:55.017 DEBUG 2240 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 order by update_time desc LIMIT ?, ? 
2021-07-28 14:29:55.017 DEBUG 2240 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 8(Integer), 8(Integer)
2021-07-28 14:29:55.019 DEBUG 2240 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:29:55.019 DEBUG 2240 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:29:55.020 DEBUG 2240 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:29:55.020 DEBUG 2240 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:29:55.020 DEBUG 2240 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:29:55.021 DEBUG 2240 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:29:55.021 DEBUG 2240 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 1
2021-07-28 14:29:55.022  INFO 2240 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:29:55.022  INFO 2240 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : result : admin/blogs :: blogList 
2021-07-28 14:30:04.111  INFO 2240 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , false, admin]}
2021-07-28 14:30:04.113 DEBUG 2240 --- [http-nio-8080-exec-4] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE 1 = 1 
2021-07-28 14:30:04.113 DEBUG 2240 --- [http-nio-8080-exec-4] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==> Parameters: 
2021-07-28 14:30:04.115 DEBUG 2240 --- [http-nio-8080-exec-4] b.l.b.m.B.findBlogByKeyWords_COUNT       : <==      Total: 1
2021-07-28 14:30:04.115 DEBUG 2240 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 order by update_time desc LIMIT ? 
2021-07-28 14:30:04.115 DEBUG 2240 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 8(Integer)
2021-07-28 14:30:04.119 DEBUG 2240 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:30:04.119 DEBUG 2240 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:30:04.120 DEBUG 2240 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:30:04.120 DEBUG 2240 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:30:04.120 DEBUG 2240 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:30:04.121 DEBUG 2240 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:30:04.122 DEBUG 2240 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:30:04.122 DEBUG 2240 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:30:04.123 DEBUG 2240 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:30:04.123 DEBUG 2240 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:30:04.124 DEBUG 2240 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 14:30:04.124 DEBUG 2240 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:30:04.125 DEBUG 2240 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:30:04.125 DEBUG 2240 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 14:30:04.126 DEBUG 2240 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:30:04.126 DEBUG 2240 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:30:04.126 DEBUG 2240 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 14:30:04.127 DEBUG 2240 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:30:04.128 DEBUG 2240 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 8
2021-07-28 14:30:04.129  INFO 2240 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:30:04.129  INFO 2240 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : result : admin/blogs :: blogList 
2021-07-28 14:39:49.801  INFO 10764 --- [restartedMain] black.lyg.blog.BlogApplication           : Starting BlogApplication on Administraror with PID 10764 (D:\Desktop\blog\blog-master\target\classes started by Administrator in D:\Desktop\blog\blog-master)
2021-07-28 14:39:49.803 DEBUG 10764 --- [restartedMain] black.lyg.blog.BlogApplication           : Running with Spring Boot v2.2.6.RELEASE, Spring v5.2.5.RELEASE
2021-07-28 14:39:49.803  INFO 10764 --- [restartedMain] black.lyg.blog.BlogApplication           : The following profiles are active: dev
2021-07-28 14:39:49.843  INFO 10764 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-07-28 14:39:49.843  INFO 10764 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-07-28 14:39:50.349  INFO 10764 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-28 14:39:50.350  INFO 10764 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-28 14:39:50.373  INFO 10764 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15ms. Found 0 Redis repository interfaces.
2021-07-28 14:39:50.458  WARN 10764 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[black.lyg.blog]' package. Please check your configuration.
2021-07-28 14:39:50.929  INFO 10764 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-07-28 14:39:50.936  INFO 10764 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-28 14:39:50.936  INFO 10764 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-28 14:39:50.937  INFO 10764 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : An older version [1.2.14] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.23]
2021-07-28 14:39:50.937  INFO 10764 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.14] using APR version [1.6.2].
2021-07-28 14:39:50.937  INFO 10764 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-07-28 14:39:50.938  INFO 10764 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-07-28 14:39:51.952  INFO 10764 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.0.2l  25 May 2017]
2021-07-28 14:39:52.050  INFO 10764 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-28 14:39:52.050  INFO 10764 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2207 ms
2021-07-28 14:39:52.085  INFO 10764 --- [restartedMain] o.s.boot.web.servlet.RegistrationBean    : Filter webStatFilter was not registered (possibly already registered?)
2021-07-28 14:39:52.962  INFO 10764 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-28 14:39:53.027  INFO 10764 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-07-28 14:39:53.455  INFO 10764 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-07-28 14:39:53.491  INFO 10764 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-07-28 14:39:53.493  INFO 10764 --- [restartedMain] black.lyg.blog.BlogApplication           : Started BlogApplication in 4.005 seconds (JVM running for 5.362)
2021-07-28 14:39:53.523  INFO 10764 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-28 14:39:54.468 DEBUG 10764 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc 
2021-07-28 14:39:54.483 DEBUG 10764 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 
2021-07-28 14:39:54.507 DEBUG 10764 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:39:54.507 DEBUG 10764 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:39:54.508 DEBUG 10764 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:39:54.509 DEBUG 10764 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:39:54.510 DEBUG 10764 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:39:54.511 DEBUG 10764 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:39:54.513 DEBUG 10764 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:39:54.513 DEBUG 10764 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:39:54.514 DEBUG 10764 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:39:54.514 DEBUG 10764 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:39:54.515 DEBUG 10764 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 14:39:54.516 DEBUG 10764 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:39:54.516 DEBUG 10764 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:39:54.516 DEBUG 10764 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 14:39:54.517 DEBUG 10764 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:39:54.517 DEBUG 10764 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:39:54.518 DEBUG 10764 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 14:39:54.519 DEBUG 10764 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:39:54.520 DEBUG 10764 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 9
2021-07-28 14:39:54.611  INFO 10764 --- [restartedMain] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2021-07-28 14:39:54.612  INFO 10764 --- [restartedMain] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2021-07-28 14:39:56.256  INFO 10764 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java合并两个int数组
2021-07-28 14:39:56.257  INFO 10764 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：条件注解@Conditional
2021-07-28 14:39:56.258  INFO 10764 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：随笔
2021-07-28 14:39:56.259  INFO 10764 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java常见关键字final、static、super、abstract、this
2021-07-28 14:39:56.260  INFO 10764 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：挖掘机技术哪家强
2021-07-28 14:39:56.261  INFO 10764 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：欢迎使用 Markdown在线编辑器 MdEditor
2021-07-28 14:39:56.262  INFO 10764 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java中 equals() 和 hashCode()的关系
2021-07-28 14:39:56.264  INFO 10764 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（二）：Hash
2021-07-28 14:39:56.265  INFO 10764 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（一）：String
2021-07-28 14:39:56.267  INFO 10764 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 初始化redis中blogCount的数量为：9
2021-07-28 14:40:07.891  INFO 10764 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-28 14:40:07.891  INFO 10764 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-28 14:40:07.899  INFO 10764 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 8 ms
2021-07-28 14:40:07.917  INFO 10764 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.loginPage', args=[]}
2021-07-28 14:40:07.920  INFO 10764 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:40:07.921  INFO 10764 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : admin/login 
2021-07-28 14:40:14.473 DEBUG 10764 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==>  Preparing: SELECT count(0) FROM blog 
2021-07-28 14:40:14.473 DEBUG 10764 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==> Parameters: 
2021-07-28 14:40:14.475 DEBUG 10764 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.findBlogAll_COUNT     : <==      Total: 1
2021-07-28 14:40:14.476 DEBUG 10764 --- [http-nio-8080-exec-2] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc LIMIT ? 
2021-07-28 14:40:14.477 DEBUG 10764 --- [http-nio-8080-exec-2] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 5(Integer)
2021-07-28 14:40:14.480 DEBUG 10764 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:40:14.480 DEBUG 10764 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:40:14.481 DEBUG 10764 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:40:14.481 DEBUG 10764 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:40:14.482 DEBUG 10764 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:40:14.483 DEBUG 10764 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:40:14.483 DEBUG 10764 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:40:14.483 DEBUG 10764 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:40:14.484 DEBUG 10764 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:40:14.485 DEBUG 10764 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:40:14.485 DEBUG 10764 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 14:40:14.486 DEBUG 10764 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:40:14.486 DEBUG 10764 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:40:14.486 DEBUG 10764 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 14:40:14.487 DEBUG 10764 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:40:14.488 DEBUG 10764 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:40:14.488 DEBUG 10764 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 14:40:14.489 DEBUG 10764 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:40:14.489 DEBUG 10764 --- [http-nio-8080-exec-2] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 5
2021-07-28 14:40:14.519  INFO 10764 --- [http-nio-8080-exec-2] black.lyg.blog.service.TagService        : 从redis中获取数据：[TagTops(tagId=20, name=设计模式, BlogNumber=2), TagTops(tagId=21, name=Redis, BlogNumber=4), TagTops(tagId=22, name=Java, BlogNumber=4), TagTops(tagId=2, name=Mybatis, BlogNumber=1), TagTops(tagId=1, name=Spring, BlogNumber=2), TagTops(tagId=24, name=测试, BlogNumber=2), TagTops(tagId=23, name=MySQL, BlogNumber=1)]
2021-07-28 14:40:14.520  INFO 10764 --- [http-nio-8080-exec-2] black.lyg.blog.service.TagService        : 从redis中查找到由标签显示博客的数据：[TagTops(tagId=21, name=Redis, BlogNumber=4), TagTops(tagId=22, name=Java, BlogNumber=4), TagTops(tagId=20, name=设计模式, BlogNumber=2), TagTops(tagId=1, name=Spring, BlogNumber=2), TagTops(tagId=24, name=测试, BlogNumber=2), TagTops(tagId=2, name=Mybatis, BlogNumber=1), TagTops(tagId=23, name=MySQL, BlogNumber=1)]
2021-07-28 14:40:14.534  INFO 10764 --- [http-nio-8080-exec-2] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:40:14.865  INFO 10764 --- [http-nio-8080-exec-7] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:40:17.428 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.blog.mapper.TypeMapper.selectCount   : ==>  Preparing: SELECT COUNT(type_id) FROM type 
2021-07-28 14:40:17.428 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.blog.mapper.TypeMapper.selectCount   : ==> Parameters: 
2021-07-28 14:40:17.430 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.blog.mapper.TypeMapper.selectCount   : <==      Total: 1
2021-07-28 14:40:17.435 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.m.B.selectBlogByTypeId_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE type_id = ? 
2021-07-28 14:40:17.435 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.m.B.selectBlogByTypeId_COUNT       : ==> Parameters: 6(Integer)
2021-07-28 14:40:17.436 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.m.B.selectBlogByTypeId_COUNT       : <==      Total: 1
2021-07-28 14:40:17.437 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.selectBlogByTypeId    : ==>  Preparing: select * from blog where type_id = ? LIMIT ? 
2021-07-28 14:40:17.437 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.selectBlogByTypeId    : ==> Parameters: 6(Integer), 5(Integer)
2021-07-28 14:40:17.439 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:40:17.439 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:40:17.440 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:40:17.440 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:40:17.440 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:40:17.441 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:40:17.442 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:40:17.442 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 14:40:17.444 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:40:17.445 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.selectBlogByTypeId    : <==      Total: 5
2021-07-28 14:40:17.456 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 14:40:17.457 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 8(Integer)
2021-07-28 14:40:17.458 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 14:40:17.458 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:40:17.459 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 1(Integer)
2021-07-28 14:40:17.460 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:40:17.461 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 14:40:17.461 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 15(Integer)
2021-07-28 14:40:17.462 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 14:40:17.463 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:40:17.463 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 22(Integer)
2021-07-28 14:40:17.464 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:40:17.465 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 14:40:17.465 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 16(Integer)
2021-07-28 14:40:17.466 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 14:40:17.466 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:40:17.466 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 21(Integer)
2021-07-28 14:40:17.467 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:40:17.468 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 14:40:17.468 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 17(Integer)
2021-07-28 14:40:17.469 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 14:40:17.469 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:40:17.469 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 21(Integer)
2021-07-28 14:40:17.470 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:40:17.471 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 14:40:17.471 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 18(Integer)
2021-07-28 14:40:17.472 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 14:40:17.472 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:40:17.472 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 22(Integer)
2021-07-28 14:40:17.473 DEBUG 10764 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:40:17.752  INFO 10764 --- [http-nio-8080-exec-5] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:40:23.764 DEBUG 10764 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==>  Preparing: SELECT count(0) FROM blog 
2021-07-28 14:40:23.765 DEBUG 10764 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==> Parameters: 
2021-07-28 14:40:23.767 DEBUG 10764 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.findBlogAll_COUNT     : <==      Total: 1
2021-07-28 14:40:23.767 DEBUG 10764 --- [http-nio-8080-exec-3] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc LIMIT ? 
2021-07-28 14:40:23.768 DEBUG 10764 --- [http-nio-8080-exec-3] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 5(Integer)
2021-07-28 14:40:23.770 DEBUG 10764 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:40:23.770 DEBUG 10764 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:40:23.771 DEBUG 10764 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:40:23.771 DEBUG 10764 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:40:23.771 DEBUG 10764 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:40:23.773 DEBUG 10764 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:40:23.774 DEBUG 10764 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:40:23.774 DEBUG 10764 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:40:23.774 DEBUG 10764 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:40:23.775 DEBUG 10764 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:40:23.775 DEBUG 10764 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 14:40:23.776 DEBUG 10764 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:40:23.777 DEBUG 10764 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:40:23.777 DEBUG 10764 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 14:40:23.778 DEBUG 10764 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:40:23.778 DEBUG 10764 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:40:23.778 DEBUG 10764 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 14:40:23.779 DEBUG 10764 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:40:23.779 DEBUG 10764 --- [http-nio-8080-exec-3] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 5
2021-07-28 14:40:23.781  INFO 10764 --- [http-nio-8080-exec-3] black.lyg.blog.service.TagService        : 从redis中获取数据：[TagTops(tagId=20, name=设计模式, BlogNumber=2), TagTops(tagId=21, name=Redis, BlogNumber=4), TagTops(tagId=22, name=Java, BlogNumber=4), TagTops(tagId=2, name=Mybatis, BlogNumber=1), TagTops(tagId=1, name=Spring, BlogNumber=2), TagTops(tagId=24, name=测试, BlogNumber=2), TagTops(tagId=23, name=MySQL, BlogNumber=1)]
2021-07-28 14:40:23.781  INFO 10764 --- [http-nio-8080-exec-3] black.lyg.blog.service.TagService        : 从redis中查找到由标签显示博客的数据：[TagTops(tagId=21, name=Redis, BlogNumber=4), TagTops(tagId=22, name=Java, BlogNumber=4), TagTops(tagId=20, name=设计模式, BlogNumber=2), TagTops(tagId=1, name=Spring, BlogNumber=2), TagTops(tagId=24, name=测试, BlogNumber=2), TagTops(tagId=2, name=Mybatis, BlogNumber=1), TagTops(tagId=23, name=MySQL, BlogNumber=1)]
2021-07-28 14:40:23.784  INFO 10764 --- [http-nio-8080-exec-3] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:40:24.036  INFO 10764 --- [http-nio-8080-exec-8] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:40:28.407 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==>  Preparing: SELECT count(0) FROM blog 
2021-07-28 14:40:28.407 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==> Parameters: 
2021-07-28 14:40:28.408 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogAll_COUNT     : <==      Total: 1
2021-07-28 14:40:28.409 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc LIMIT ?, ? 
2021-07-28 14:40:28.410 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 5(Integer), 5(Integer)
2021-07-28 14:40:28.413 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:40:28.413 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:40:28.415 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:40:28.416 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:40:28.416 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:40:28.416 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:40:28.416 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:40:28.417 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:40:28.418 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:40:28.418 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 4
2021-07-28 14:40:28.421  INFO 10764 --- [http-nio-8080-exec-9] black.lyg.blog.service.TagService        : 从redis中获取数据：[TagTops(tagId=20, name=设计模式, BlogNumber=2), TagTops(tagId=21, name=Redis, BlogNumber=4), TagTops(tagId=22, name=Java, BlogNumber=4), TagTops(tagId=2, name=Mybatis, BlogNumber=1), TagTops(tagId=1, name=Spring, BlogNumber=2), TagTops(tagId=24, name=测试, BlogNumber=2), TagTops(tagId=23, name=MySQL, BlogNumber=1)]
2021-07-28 14:40:28.421  INFO 10764 --- [http-nio-8080-exec-9] black.lyg.blog.service.TagService        : 从redis中查找到由标签显示博客的数据：[TagTops(tagId=21, name=Redis, BlogNumber=4), TagTops(tagId=22, name=Java, BlogNumber=4), TagTops(tagId=20, name=设计模式, BlogNumber=2), TagTops(tagId=1, name=Spring, BlogNumber=2), TagTops(tagId=24, name=测试, BlogNumber=2), TagTops(tagId=2, name=Mybatis, BlogNumber=1), TagTops(tagId=23, name=MySQL, BlogNumber=1)]
2021-07-28 14:40:28.423  INFO 10764 --- [http-nio-8080-exec-9] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:40:28.672  INFO 10764 --- [http-nio-8080-exec-4] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:40:32.156 DEBUG 10764 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==>  Preparing: SELECT count(0) FROM blog 
2021-07-28 14:40:32.157 DEBUG 10764 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==> Parameters: 
2021-07-28 14:40:32.159 DEBUG 10764 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.findBlogAll_COUNT     : <==      Total: 1
2021-07-28 14:40:32.160 DEBUG 10764 --- [http-nio-8080-exec-1] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc LIMIT ? 
2021-07-28 14:40:32.160 DEBUG 10764 --- [http-nio-8080-exec-1] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 5(Integer)
2021-07-28 14:40:32.162 DEBUG 10764 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:40:32.163 DEBUG 10764 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:40:32.164 DEBUG 10764 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:40:32.164 DEBUG 10764 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:40:32.164 DEBUG 10764 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:40:32.166 DEBUG 10764 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:40:32.166 DEBUG 10764 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:40:32.166 DEBUG 10764 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:40:32.167 DEBUG 10764 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:40:32.168 DEBUG 10764 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:40:32.168 DEBUG 10764 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 14:40:32.169 DEBUG 10764 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:40:32.169 DEBUG 10764 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:40:32.169 DEBUG 10764 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 14:40:32.170 DEBUG 10764 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:40:32.170 DEBUG 10764 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:40:32.170 DEBUG 10764 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 14:40:32.171 DEBUG 10764 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:40:32.171 DEBUG 10764 --- [http-nio-8080-exec-1] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 5
2021-07-28 14:40:32.173  INFO 10764 --- [http-nio-8080-exec-1] black.lyg.blog.service.TagService        : 从redis中获取数据：[TagTops(tagId=20, name=设计模式, BlogNumber=2), TagTops(tagId=21, name=Redis, BlogNumber=4), TagTops(tagId=22, name=Java, BlogNumber=4), TagTops(tagId=2, name=Mybatis, BlogNumber=1), TagTops(tagId=1, name=Spring, BlogNumber=2), TagTops(tagId=24, name=测试, BlogNumber=2), TagTops(tagId=23, name=MySQL, BlogNumber=1)]
2021-07-28 14:40:32.174  INFO 10764 --- [http-nio-8080-exec-1] black.lyg.blog.service.TagService        : 从redis中查找到由标签显示博客的数据：[TagTops(tagId=21, name=Redis, BlogNumber=4), TagTops(tagId=22, name=Java, BlogNumber=4), TagTops(tagId=20, name=设计模式, BlogNumber=2), TagTops(tagId=1, name=Spring, BlogNumber=2), TagTops(tagId=24, name=测试, BlogNumber=2), TagTops(tagId=2, name=Mybatis, BlogNumber=1), TagTops(tagId=23, name=MySQL, BlogNumber=1)]
2021-07-28 14:40:32.175  INFO 10764 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:40:32.417  INFO 10764 --- [http-nio-8080-exec-2] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:40:45.203  INFO 10764 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.login', args=[admin, lyg0918, org.apache.catalina.session.StandardSessionFacade@68d6093c, {}]}
2021-07-28 14:40:45.204 DEBUG 10764 --- [http-nio-8080-exec-10] .l.b.m.U.selectUserNameByNameAndPassWord : ==>  Preparing: select * from user where username = ? and password = ? 
2021-07-28 14:40:45.204 DEBUG 10764 --- [http-nio-8080-exec-10] .l.b.m.U.selectUserNameByNameAndPassWord : ==> Parameters: admin(String), 89446CF944BBA2485A8562075A0E0BB7(String)
2021-07-28 14:40:45.205 DEBUG 10764 --- [http-nio-8080-exec-10] .l.b.m.U.selectUserNameByNameAndPassWord : <==      Total: 1
2021-07-28 14:40:45.206  INFO 10764 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:40:45.206  INFO 10764 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : result : admin/index 
2021-07-28 14:40:45.472  INFO 10764 --- [http-nio-8080-exec-5] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:41:04.616  INFO 10764 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 14:41:04.619 DEBUG 10764 --- [http-nio-8080-exec-3] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 14:41:04.619 DEBUG 10764 --- [http-nio-8080-exec-3] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 14:41:04.620 DEBUG 10764 --- [http-nio-8080-exec-3] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 14:41:04.620 DEBUG 10764 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 14:41:04.621 DEBUG 10764 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 14:41:04.622 DEBUG 10764 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 14:41:04.622 DEBUG 10764 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 14:41:04.622 DEBUG 10764 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 14:41:04.625 DEBUG 10764 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:41:04.625 DEBUG 10764 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:41:04.626 DEBUG 10764 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:41:04.626 DEBUG 10764 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:41:04.626 DEBUG 10764 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:41:04.627 DEBUG 10764 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:41:04.628 DEBUG 10764 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:41:04.628 DEBUG 10764 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:41:04.629 DEBUG 10764 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:41:04.629 DEBUG 10764 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 14:41:04.630 DEBUG 10764 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 14:41:04.630 DEBUG 10764 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 14:41:04.631 DEBUG 10764 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 14:41:04.631  INFO 10764 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:41:04.631  INFO 10764 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 14:41:04.905  INFO 10764 --- [http-nio-8080-exec-8] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:41:07.139  INFO 10764 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , false, admin]}
2021-07-28 14:41:07.142 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE 1 = 1 
2021-07-28 14:41:07.142 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==> Parameters: 
2021-07-28 14:41:07.144 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.m.B.findBlogByKeyWords_COUNT       : <==      Total: 1
2021-07-28 14:41:07.144 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 order by update_time desc LIMIT ? 
2021-07-28 14:41:07.144 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 8(Integer)
2021-07-28 14:41:07.147 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:41:07.148 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:41:07.149 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:41:07.149 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:41:07.149 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:41:07.150 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:41:07.151 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:41:07.151 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:41:07.152 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:41:07.152 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:41:07.152 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 14:41:07.153 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:41:07.153 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:41:07.154 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 14:41:07.154 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:41:07.155 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:41:07.155 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 14:41:07.156 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:41:07.157 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 8
2021-07-28 14:41:07.157  INFO 10764 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:41:07.159 ERROR 10764 --- [http-nio-8080-exec-9] b.l.b.h.ControllerExceptionHandler       : Request URL : http://localhost:8080/admin/blogs/search, Exception : null
2021-07-28 14:41:07.159  WARN 10764 --- [http-nio-8080-exec-9] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.util.ConcurrentModificationException]
2021-07-28 14:41:22.535  INFO 10764 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 14:41:22.536 DEBUG 10764 --- [http-nio-8080-exec-1] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 14:41:22.536 DEBUG 10764 --- [http-nio-8080-exec-1] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 14:41:22.538 DEBUG 10764 --- [http-nio-8080-exec-1] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 14:41:22.538 DEBUG 10764 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 14:41:22.538 DEBUG 10764 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 14:41:22.539 DEBUG 10764 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 14:41:22.540 DEBUG 10764 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 14:41:22.540 DEBUG 10764 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 14:41:22.543 DEBUG 10764 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:41:22.543 DEBUG 10764 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:41:22.544 DEBUG 10764 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:41:22.544 DEBUG 10764 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:41:22.544 DEBUG 10764 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:41:22.545 DEBUG 10764 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:41:22.546 DEBUG 10764 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:41:22.546 DEBUG 10764 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:41:22.548 DEBUG 10764 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:41:22.548 DEBUG 10764 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 14:41:22.549 DEBUG 10764 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 14:41:22.549 DEBUG 10764 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 14:41:22.550 DEBUG 10764 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 14:41:22.550  INFO 10764 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:41:22.550  INFO 10764 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 14:41:22.831  INFO 10764 --- [http-nio-8080-exec-2] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:41:29.634  INFO 10764 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, java, , false, admin]}
2021-07-28 14:41:29.637 DEBUG 10764 --- [http-nio-8080-exec-7] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE 1 = 1 AND title LIKE CONCAT(CONCAT('%', ?), '%') 
2021-07-28 14:41:29.638 DEBUG 10764 --- [http-nio-8080-exec-7] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==> Parameters: java(String)
2021-07-28 14:41:29.639 DEBUG 10764 --- [http-nio-8080-exec-7] b.l.b.m.B.findBlogByKeyWords_COUNT       : <==      Total: 1
2021-07-28 14:41:29.639 DEBUG 10764 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 AND title like CONCAT(CONCAT('%',?),'%') order by update_time desc LIMIT ? 
2021-07-28 14:41:29.639 DEBUG 10764 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: java(String), 8(Integer)
2021-07-28 14:41:29.641 DEBUG 10764 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:41:29.641 DEBUG 10764 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:41:29.642 DEBUG 10764 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:41:29.642 DEBUG 10764 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:41:29.642 DEBUG 10764 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:41:29.643 DEBUG 10764 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:41:29.644 DEBUG 10764 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:41:29.644 DEBUG 10764 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 14:41:29.644 DEBUG 10764 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:41:29.645 DEBUG 10764 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:41:29.645 DEBUG 10764 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:41:29.645 DEBUG 10764 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:41:29.645 DEBUG 10764 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 3
2021-07-28 14:41:29.646  INFO 10764 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:41:29.646  INFO 10764 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : result : admin/blogs :: blogList 
2021-07-28 14:41:38.142  INFO 10764 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 14:41:38.143 DEBUG 10764 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 14:41:38.143 DEBUG 10764 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 14:41:38.144 DEBUG 10764 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 14:41:38.145 DEBUG 10764 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 14:41:38.145 DEBUG 10764 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 14:41:38.146 DEBUG 10764 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 14:41:38.147 DEBUG 10764 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 14:41:38.147 DEBUG 10764 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 14:41:38.150 DEBUG 10764 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:41:38.150 DEBUG 10764 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:41:38.152 DEBUG 10764 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:41:38.152 DEBUG 10764 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:41:38.152 DEBUG 10764 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:41:38.153 DEBUG 10764 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:41:38.153 DEBUG 10764 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:41:38.154 DEBUG 10764 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:41:38.154 DEBUG 10764 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:41:38.155 DEBUG 10764 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 14:41:38.155 DEBUG 10764 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 14:41:38.155 DEBUG 10764 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 14:41:38.156 DEBUG 10764 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 14:41:38.156  INFO 10764 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:41:38.156  INFO 10764 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 14:41:38.424  INFO 10764 --- [http-nio-8080-exec-6] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:42:09.453  INFO 10764 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, java, , false, admin]}
2021-07-28 14:42:09.455 DEBUG 10764 --- [http-nio-8080-exec-8] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE 1 = 1 AND title LIKE CONCAT(CONCAT('%', ?), '%') 
2021-07-28 14:42:09.455 DEBUG 10764 --- [http-nio-8080-exec-8] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==> Parameters: java(String)
2021-07-28 14:42:09.456 DEBUG 10764 --- [http-nio-8080-exec-8] b.l.b.m.B.findBlogByKeyWords_COUNT       : <==      Total: 1
2021-07-28 14:42:09.456 DEBUG 10764 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 AND title like CONCAT(CONCAT('%',?),'%') order by update_time desc LIMIT ? 
2021-07-28 14:42:09.457 DEBUG 10764 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: java(String), 8(Integer)
2021-07-28 14:42:09.458 DEBUG 10764 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:42:09.459 DEBUG 10764 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:42:09.459 DEBUG 10764 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:42:09.459 DEBUG 10764 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:42:09.460 DEBUG 10764 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:42:09.461 DEBUG 10764 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:42:09.461 DEBUG 10764 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:42:09.461 DEBUG 10764 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 14:42:09.462 DEBUG 10764 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:42:09.462 DEBUG 10764 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:42:09.462 DEBUG 10764 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:42:09.463 DEBUG 10764 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:42:09.463 DEBUG 10764 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 3
2021-07-28 14:42:09.463  INFO 10764 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:42:09.463  INFO 10764 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : result : admin/blogs :: blogList 
2021-07-28 14:42:41.449  INFO 10764 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , false, admin]}
2021-07-28 14:42:41.450 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE 1 = 1 
2021-07-28 14:42:41.450 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==> Parameters: 
2021-07-28 14:42:41.452 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.m.B.findBlogByKeyWords_COUNT       : <==      Total: 1
2021-07-28 14:42:41.452 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 order by update_time desc LIMIT ? 
2021-07-28 14:42:41.453 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 8(Integer)
2021-07-28 14:42:41.455 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:42:41.455 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:42:41.456 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:42:41.456 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:42:41.456 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:42:41.457 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:42:41.457 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:42:41.457 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:42:41.458 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:42:41.458 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:42:41.458 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 14:42:41.459 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:42:41.459 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:42:41.459 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 14:42:41.460 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:42:41.460 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:42:41.460 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 14:42:41.461 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:42:41.461 DEBUG 10764 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 8
2021-07-28 14:42:41.461  INFO 10764 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:42:41.461 ERROR 10764 --- [http-nio-8080-exec-9] b.l.b.h.ControllerExceptionHandler       : Request URL : http://localhost:8080/admin/blogs/search, Exception : null
2021-07-28 14:42:41.461  WARN 10764 --- [http-nio-8080-exec-9] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.util.ConcurrentModificationException]
2021-07-28 14:45:03.774  INFO 6772 --- [restartedMain] black.lyg.blog.BlogApplication           : Starting BlogApplication on Administraror with PID 6772 (D:\Desktop\blog\blog-master\target\classes started by Administrator in D:\Desktop\blog\blog-master)
2021-07-28 14:45:03.776 DEBUG 6772 --- [restartedMain] black.lyg.blog.BlogApplication           : Running with Spring Boot v2.2.6.RELEASE, Spring v5.2.5.RELEASE
2021-07-28 14:45:03.776  INFO 6772 --- [restartedMain] black.lyg.blog.BlogApplication           : The following profiles are active: dev
2021-07-28 14:45:03.809  INFO 6772 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-07-28 14:45:03.809  INFO 6772 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-07-28 14:45:04.325  INFO 6772 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-28 14:45:04.326  INFO 6772 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-28 14:45:04.349  INFO 6772 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15ms. Found 0 Redis repository interfaces.
2021-07-28 14:45:04.432  WARN 6772 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[black.lyg.blog]' package. Please check your configuration.
2021-07-28 14:45:04.905  INFO 6772 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-07-28 14:45:04.911  INFO 6772 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-28 14:45:04.911  INFO 6772 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-28 14:45:04.912  INFO 6772 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : An older version [1.2.14] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.23]
2021-07-28 14:45:04.913  INFO 6772 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.14] using APR version [1.6.2].
2021-07-28 14:45:04.913  INFO 6772 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-07-28 14:45:04.913  INFO 6772 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-07-28 14:45:05.924  INFO 6772 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.0.2l  25 May 2017]
2021-07-28 14:45:06.023  INFO 6772 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-28 14:45:06.023  INFO 6772 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2214 ms
2021-07-28 14:45:06.059  INFO 6772 --- [restartedMain] o.s.boot.web.servlet.RegistrationBean    : Filter webStatFilter was not registered (possibly already registered?)
2021-07-28 14:45:06.939  INFO 6772 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-28 14:45:07.005  INFO 6772 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-07-28 14:45:07.435  INFO 6772 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-07-28 14:45:07.472  INFO 6772 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-07-28 14:45:07.474  INFO 6772 --- [restartedMain] black.lyg.blog.BlogApplication           : Started BlogApplication in 4.047 seconds (JVM running for 5.435)
2021-07-28 14:45:07.504  INFO 6772 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-28 14:45:08.447 DEBUG 6772 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc 
2021-07-28 14:45:08.462 DEBUG 6772 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 
2021-07-28 14:45:08.485 DEBUG 6772 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:45:08.485 DEBUG 6772 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:45:08.487 DEBUG 6772 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:45:08.488 DEBUG 6772 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:45:08.489 DEBUG 6772 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:45:08.490 DEBUG 6772 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:45:08.491 DEBUG 6772 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:45:08.492 DEBUG 6772 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:45:08.492 DEBUG 6772 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:45:08.493 DEBUG 6772 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:45:08.493 DEBUG 6772 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 14:45:08.494 DEBUG 6772 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:45:08.494 DEBUG 6772 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:45:08.495 DEBUG 6772 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 14:45:08.495 DEBUG 6772 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:45:08.496 DEBUG 6772 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:45:08.496 DEBUG 6772 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 14:45:08.497 DEBUG 6772 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:45:08.499 DEBUG 6772 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 9
2021-07-28 14:45:08.589  INFO 6772 --- [restartedMain] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2021-07-28 14:45:08.590  INFO 6772 --- [restartedMain] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2021-07-28 14:45:10.246  INFO 6772 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java合并两个int数组
2021-07-28 14:45:10.247  INFO 6772 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：条件注解@Conditional
2021-07-28 14:45:10.248  INFO 6772 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：随笔
2021-07-28 14:45:10.250  INFO 6772 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java常见关键字final、static、super、abstract、this
2021-07-28 14:45:10.251  INFO 6772 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：挖掘机技术哪家强
2021-07-28 14:45:10.252  INFO 6772 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：欢迎使用 Markdown在线编辑器 MdEditor
2021-07-28 14:45:10.253  INFO 6772 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java中 equals() 和 hashCode()的关系
2021-07-28 14:45:10.254  INFO 6772 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（二）：Hash
2021-07-28 14:45:10.255  INFO 6772 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（一）：String
2021-07-28 14:45:10.259  INFO 6772 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 初始化redis中blogCount的数量为：9
2021-07-28 14:45:23.333  INFO 6772 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-28 14:45:23.333  INFO 6772 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-28 14:45:23.341  INFO 6772 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 8 ms
2021-07-28 14:45:23.360  INFO 6772 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.loginPage', args=[]}
2021-07-28 14:45:23.363  INFO 6772 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:45:23.363  INFO 6772 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : admin/login 
2021-07-28 14:45:29.697  INFO 6772 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.login', args=[admin, lyg0918, org.apache.catalina.session.StandardSessionFacade@1d25395b, {}]}
2021-07-28 14:45:29.698 DEBUG 6772 --- [http-nio-8080-exec-7] .l.b.m.U.selectUserNameByNameAndPassWord : ==>  Preparing: select * from user where username = ? and password = ? 
2021-07-28 14:45:29.699 DEBUG 6772 --- [http-nio-8080-exec-7] .l.b.m.U.selectUserNameByNameAndPassWord : ==> Parameters: admin(String), 89446CF944BBA2485A8562075A0E0BB7(String)
2021-07-28 14:45:29.700 DEBUG 6772 --- [http-nio-8080-exec-7] .l.b.m.U.selectUserNameByNameAndPassWord : <==      Total: 1
2021-07-28 14:45:29.701  INFO 6772 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:45:29.701  INFO 6772 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : result : admin/index 
2021-07-28 14:45:30.044  INFO 6772 --- [http-nio-8080-exec-5] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:45:32.689  INFO 6772 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin;jsessionid=891FC5CEFC1D574045527825001FAEC3', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 14:45:32.708 DEBUG 6772 --- [http-nio-8080-exec-2] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 14:45:32.708 DEBUG 6772 --- [http-nio-8080-exec-2] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 14:45:32.709 DEBUG 6772 --- [http-nio-8080-exec-2] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 14:45:32.710 DEBUG 6772 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 14:45:32.711 DEBUG 6772 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 14:45:32.712 DEBUG 6772 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 14:45:32.713 DEBUG 6772 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 14:45:32.713 DEBUG 6772 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 14:45:32.716 DEBUG 6772 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:45:32.716 DEBUG 6772 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:45:32.717 DEBUG 6772 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:45:32.717 DEBUG 6772 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:45:32.717 DEBUG 6772 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:45:32.718 DEBUG 6772 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:45:32.719 DEBUG 6772 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:45:32.719 DEBUG 6772 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:45:32.720 DEBUG 6772 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:45:32.721 DEBUG 6772 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 14:45:32.735 DEBUG 6772 --- [http-nio-8080-exec-2] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 14:45:32.735 DEBUG 6772 --- [http-nio-8080-exec-2] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 14:45:32.737 DEBUG 6772 --- [http-nio-8080-exec-2] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 14:45:32.737  INFO 6772 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:45:32.737  INFO 6772 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 14:45:33.023  INFO 6772 --- [http-nio-8080-exec-8] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:45:34.807  INFO 6772 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , false, admin]}
2021-07-28 14:45:34.807  INFO 6772 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:45:34.807  INFO 6772 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : result : admin/blogs :: blogList 
2021-07-28 14:45:34.818 ERROR 6772 --- [http-nio-8080-exec-7] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-7] Exception processing template "admin/blogs::[blogList]": An error happened during template parsing (template: "class path resource [templates/admin/blogs.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/admin/blogs.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098) [thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072) [thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362) [thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189) [thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) [tomcat-embed-websocket-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124) [druid-1.1.16.jar:1.1.16]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_221]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_221]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_221]
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "pageInfo.list" (template: "admin/blogs" - line 77, col 15)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	... 51 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "pageInfo.list" (template: "admin/blogs" - line 77, col 15)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290) ~[thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:125) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.processor.StandardEachTagProcessor.doProcess(StandardEachTagProcessor.java:73) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.attoparser.select.BlockSelectorMarkupHandler.handleOpenElementEnd(BlockSelectorMarkupHandler.java:996) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	... 53 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'list' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263) ~[thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	... 74 common frames omitted

2021-07-28 14:45:34.820 ERROR 6772 --- [http-nio-8080-exec-7] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/admin/blogs.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'list' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263) ~[thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:125) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.processor.StandardEachTagProcessor.doProcess(StandardEachTagProcessor.java:73) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.attoparser.select.BlockSelectorMarkupHandler.handleOpenElementEnd(BlockSelectorMarkupHandler.java:996) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362) ~[thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189) ~[thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124) ~[druid-1.1.16.jar:1.1.16]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_221]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_221]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_221]

2021-07-28 14:45:41.546  INFO 6772 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , false, admin]}
2021-07-28 14:45:41.546  INFO 6772 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:45:41.546  INFO 6772 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : result : admin/blogs :: blogList 
2021-07-28 14:45:41.549 ERROR 6772 --- [http-nio-8080-exec-10] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-10] Exception processing template "admin/blogs::[blogList]": An error happened during template parsing (template: "class path resource [templates/admin/blogs.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/admin/blogs.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098) [thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072) [thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362) [thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189) [thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) [tomcat-embed-websocket-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124) [druid-1.1.16.jar:1.1.16]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_221]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_221]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_221]
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "pageInfo.list" (template: "admin/blogs" - line 77, col 15)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	... 51 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "pageInfo.list" (template: "admin/blogs" - line 77, col 15)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290) ~[thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:125) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.processor.StandardEachTagProcessor.doProcess(StandardEachTagProcessor.java:73) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.attoparser.select.BlockSelectorMarkupHandler.handleOpenElementEnd(BlockSelectorMarkupHandler.java:996) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	... 53 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'list' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263) ~[thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	... 74 common frames omitted

2021-07-28 14:45:41.550 ERROR 6772 --- [http-nio-8080-exec-10] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/admin/blogs.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'list' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263) ~[thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:125) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.processor.StandardEachTagProcessor.doProcess(StandardEachTagProcessor.java:73) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.attoparser.select.BlockSelectorMarkupHandler.handleOpenElementEnd(BlockSelectorMarkupHandler.java:996) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362) ~[thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189) ~[thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124) ~[druid-1.1.16.jar:1.1.16]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_221]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_221]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_221]

2021-07-28 14:45:45.925  INFO 6772 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 14:45:45.926 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 14:45:45.927 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 14:45:45.928 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 14:45:45.929 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 14:45:45.930 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 14:45:45.931 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 14:45:45.932 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 14:45:45.932 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 14:45:45.935 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:45:45.935 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:45:45.936 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:45:45.936 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:45:45.936 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:45:45.938 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:45:45.939 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:45:45.939 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:45:45.940 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:45:45.941 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 14:45:45.941 DEBUG 6772 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 14:45:45.942 DEBUG 6772 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 14:45:45.943 DEBUG 6772 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 14:45:45.943  INFO 6772 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:45:45.943  INFO 6772 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 14:45:46.210  INFO 6772 --- [http-nio-8080-exec-3] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:45:50.639  INFO 6772 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, java, , false, admin]}
2021-07-28 14:45:50.652 DEBUG 6772 --- [http-nio-8080-exec-1] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE 1 = 1 AND title LIKE CONCAT(CONCAT('%', ?), '%') 
2021-07-28 14:45:50.652 DEBUG 6772 --- [http-nio-8080-exec-1] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==> Parameters: java(String)
2021-07-28 14:45:50.653 DEBUG 6772 --- [http-nio-8080-exec-1] b.l.b.m.B.findBlogByKeyWords_COUNT       : <==      Total: 1
2021-07-28 14:45:50.654 DEBUG 6772 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 AND title like CONCAT(CONCAT('%',?),'%') order by update_time desc LIMIT ? 
2021-07-28 14:45:50.654 DEBUG 6772 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: java(String), 8(Integer)
2021-07-28 14:45:50.655 DEBUG 6772 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:45:50.656 DEBUG 6772 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:45:50.656 DEBUG 6772 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:45:50.657 DEBUG 6772 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:45:50.657 DEBUG 6772 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:45:50.658 DEBUG 6772 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:45:50.658 DEBUG 6772 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:45:50.659 DEBUG 6772 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 14:45:50.660 DEBUG 6772 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:45:50.661 DEBUG 6772 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:45:50.661 DEBUG 6772 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:45:50.661 DEBUG 6772 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:45:50.662 DEBUG 6772 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 3
2021-07-28 14:45:50.662  INFO 6772 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:45:50.662  INFO 6772 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : admin/blogs :: blogList 
2021-07-28 14:45:56.336  INFO 6772 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, java, 5, false, admin]}
2021-07-28 14:45:56.337 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE 1 = 1 AND title LIKE CONCAT(CONCAT('%', ?), '%') AND type_id = ? 
2021-07-28 14:45:56.337 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==> Parameters: java(String), 5(String)
2021-07-28 14:45:56.338 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.m.B.findBlogByKeyWords_COUNT       : <==      Total: 1
2021-07-28 14:45:56.338  INFO 6772 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:45:56.338  INFO 6772 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : result : admin/blogs :: blogList 
2021-07-28 14:46:02.002  INFO 6772 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, java, 4, false, admin]}
2021-07-28 14:46:02.003 DEBUG 6772 --- [http-nio-8080-exec-2] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE 1 = 1 AND title LIKE CONCAT(CONCAT('%', ?), '%') AND type_id = ? 
2021-07-28 14:46:02.004 DEBUG 6772 --- [http-nio-8080-exec-2] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==> Parameters: java(String), 4(String)
2021-07-28 14:46:02.005 DEBUG 6772 --- [http-nio-8080-exec-2] b.l.b.m.B.findBlogByKeyWords_COUNT       : <==      Total: 1
2021-07-28 14:46:02.005 DEBUG 6772 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 AND title like CONCAT(CONCAT('%',?),'%') AND type_id = ? order by update_time desc LIMIT ? 
2021-07-28 14:46:02.005 DEBUG 6772 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: java(String), 4(String), 8(Integer)
2021-07-28 14:46:02.007 DEBUG 6772 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:46:02.007 DEBUG 6772 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:46:02.008 DEBUG 6772 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:46:02.008 DEBUG 6772 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:46:02.008 DEBUG 6772 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:46:02.009 DEBUG 6772 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:46:02.010 DEBUG 6772 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 1
2021-07-28 14:46:02.010  INFO 6772 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:46:02.010  INFO 6772 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : result : admin/blogs :: blogList 
2021-07-28 14:46:05.712  INFO 6772 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 14:46:05.713 DEBUG 6772 --- [http-nio-8080-exec-6] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 14:46:05.713 DEBUG 6772 --- [http-nio-8080-exec-6] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 14:46:05.714 DEBUG 6772 --- [http-nio-8080-exec-6] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 14:46:05.715 DEBUG 6772 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 14:46:05.715 DEBUG 6772 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 14:46:05.716 DEBUG 6772 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 14:46:05.716 DEBUG 6772 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 14:46:05.717 DEBUG 6772 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 14:46:05.719 DEBUG 6772 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:46:05.720 DEBUG 6772 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:46:05.721 DEBUG 6772 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:46:05.721 DEBUG 6772 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:46:05.721 DEBUG 6772 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:46:05.723 DEBUG 6772 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:46:05.724 DEBUG 6772 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:46:05.724 DEBUG 6772 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:46:05.724 DEBUG 6772 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:46:05.725 DEBUG 6772 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 14:46:05.726 DEBUG 6772 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 14:46:05.726 DEBUG 6772 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 14:46:05.728 DEBUG 6772 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 14:46:05.728  INFO 6772 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:46:05.728  INFO 6772 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 14:46:06.005  INFO 6772 --- [http-nio-8080-exec-9] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:46:07.037  INFO 6772 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , false, admin]}
2021-07-28 14:46:07.037  INFO 6772 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:46:07.037  INFO 6772 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : result : admin/blogs :: blogList 
2021-07-28 14:46:07.040 ERROR 6772 --- [http-nio-8080-exec-8] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-8] Exception processing template "admin/blogs::[blogList]": An error happened during template parsing (template: "class path resource [templates/admin/blogs.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/admin/blogs.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098) [thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072) [thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362) [thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189) [thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) [tomcat-embed-websocket-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124) [druid-1.1.16.jar:1.1.16]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_221]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_221]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_221]
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "pageInfo.list" (template: "admin/blogs" - line 77, col 15)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	... 51 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "pageInfo.list" (template: "admin/blogs" - line 77, col 15)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290) ~[thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:125) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.processor.StandardEachTagProcessor.doProcess(StandardEachTagProcessor.java:73) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.attoparser.select.BlockSelectorMarkupHandler.handleOpenElementEnd(BlockSelectorMarkupHandler.java:996) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	... 53 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'list' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263) ~[thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	... 74 common frames omitted

2021-07-28 14:46:07.041 ERROR 6772 --- [http-nio-8080-exec-8] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/admin/blogs.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'list' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337) ~[spring-expression-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263) ~[thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:125) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.processor.StandardEachTagProcessor.doProcess(StandardEachTagProcessor.java:73) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.attoparser.select.BlockSelectorMarkupHandler.handleOpenElementEnd(BlockSelectorMarkupHandler.java:996) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257) ~[attoparser-2.0.5.RELEASE.jar:2.0.5.RELEASE]
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362) ~[thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189) ~[thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124) ~[druid-1.1.16.jar:1.1.16]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_221]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_221]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_221]

2021-07-28 14:47:16.023  INFO 6772 --- [Thread-13] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2021-07-28 14:47:16.142  INFO 6772 --- [Thread-13] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closing ...
2021-07-28 14:47:16.144  INFO 6772 --- [Thread-13] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2021-07-28 14:47:17.153  INFO 6772 --- [restartedMain] black.lyg.blog.BlogApplication           : Starting BlogApplication on Administraror with PID 6772 (D:\Desktop\blog\blog-master\target\classes started by Administrator in D:\Desktop\blog\blog-master)
2021-07-28 14:47:17.154 DEBUG 6772 --- [restartedMain] black.lyg.blog.BlogApplication           : Running with Spring Boot v2.2.6.RELEASE, Spring v5.2.5.RELEASE
2021-07-28 14:47:17.154  INFO 6772 --- [restartedMain] black.lyg.blog.BlogApplication           : The following profiles are active: dev
2021-07-28 14:47:17.297  INFO 6772 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-28 14:47:17.297  INFO 6772 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-28 14:47:17.308  INFO 6772 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9ms. Found 0 Redis repository interfaces.
2021-07-28 14:47:17.334  WARN 6772 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[black.lyg.blog]' package. Please check your configuration.
2021-07-28 14:47:17.462  INFO 6772 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-07-28 14:47:17.462  INFO 6772 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-28 14:47:17.462  INFO 6772 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-28 14:47:17.462  INFO 6772 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : An older version [1.2.14] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.23]
2021-07-28 14:47:17.462  INFO 6772 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.14] using APR version [1.6.2].
2021-07-28 14:47:17.462  INFO 6772 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-07-28 14:47:17.463  INFO 6772 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-07-28 14:47:17.463  INFO 6772 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.0.2l  25 May 2017]
2021-07-28 14:47:17.477  INFO 6772 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-28 14:47:17.477  INFO 6772 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 321 ms
2021-07-28 14:47:17.497  INFO 6772 --- [restartedMain] o.s.boot.web.servlet.RegistrationBean    : Filter webStatFilter was not registered (possibly already registered?)
2021-07-28 14:47:17.948  INFO 6772 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-28 14:47:17.980  INFO 6772 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-07-28 14:47:18.338  INFO 6772 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-07-28 14:47:18.355  INFO 6772 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-07-28 14:47:18.355  INFO 6772 --- [restartedMain] black.lyg.blog.BlogApplication           : Started BlogApplication in 1.223 seconds (JVM running for 136.316)
2021-07-28 14:47:18.359  INFO 6772 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2021-07-28 14:47:18.372 DEBUG 6772 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc 
2021-07-28 14:47:18.372 DEBUG 6772 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 
2021-07-28 14:47:18.375 DEBUG 6772 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:47:18.375 DEBUG 6772 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:47:18.376 DEBUG 6772 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:47:18.376 DEBUG 6772 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:47:18.376 DEBUG 6772 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:47:18.377 DEBUG 6772 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:47:18.378 DEBUG 6772 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:47:18.378 DEBUG 6772 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:47:18.378 DEBUG 6772 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:47:18.379 DEBUG 6772 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:47:18.379 DEBUG 6772 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 14:47:18.380 DEBUG 6772 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:47:18.380 DEBUG 6772 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:47:18.380 DEBUG 6772 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 14:47:18.381 DEBUG 6772 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:47:18.381 DEBUG 6772 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:47:18.381 DEBUG 6772 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 14:47:18.382 DEBUG 6772 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:47:18.383 DEBUG 6772 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 9
2021-07-28 14:47:18.393  INFO 6772 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java合并两个int数组
2021-07-28 14:47:18.394  INFO 6772 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：条件注解@Conditional
2021-07-28 14:47:18.395  INFO 6772 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：随笔
2021-07-28 14:47:18.396  INFO 6772 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java常见关键字final、static、super、abstract、this
2021-07-28 14:47:18.397  INFO 6772 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：挖掘机技术哪家强
2021-07-28 14:47:18.398  INFO 6772 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：欢迎使用 Markdown在线编辑器 MdEditor
2021-07-28 14:47:18.399  INFO 6772 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java中 equals() 和 hashCode()的关系
2021-07-28 14:47:18.399  INFO 6772 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（二）：Hash
2021-07-28 14:47:18.400  INFO 6772 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（一）：String
2021-07-28 14:47:18.401  INFO 6772 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 初始化redis中blogCount的数量为：9
2021-07-28 14:47:18.402  INFO 6772 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2021-07-28 14:47:23.926  INFO 6772 --- [http-nio-8080-exec-4] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-28 14:47:23.926  INFO 6772 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-28 14:47:23.935  INFO 6772 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed initialization in 8 ms
2021-07-28 14:47:23.937  INFO 6772 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.loginPage', args=[]}
2021-07-28 14:47:23.939  INFO 6772 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:47:23.939  INFO 6772 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : result : admin/login 
2021-07-28 14:47:23.962 ERROR 6772 --- [http-nio-8080-exec-4] b.l.b.h.ControllerExceptionHandler       : Request URL : http://localhost:8080/admin/blogs/admin, Exception : Missing URI template variable 'username' for method parameter of type String
2021-07-28 14:47:23.962  WARN 6772 --- [http-nio-8080-exec-4] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.bind.MissingPathVariableException: Missing URI template variable 'username' for method parameter of type String]
2021-07-28 14:47:31.031  INFO 6772 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.login', args=[admin, lyg0918, org.apache.catalina.session.StandardSessionFacade@7c82a1aa, {}]}
2021-07-28 14:47:31.033 DEBUG 6772 --- [http-nio-8080-exec-2] .l.b.m.U.selectUserNameByNameAndPassWord : ==>  Preparing: select * from user where username = ? and password = ? 
2021-07-28 14:47:31.033 DEBUG 6772 --- [http-nio-8080-exec-2] .l.b.m.U.selectUserNameByNameAndPassWord : ==> Parameters: admin(String), 89446CF944BBA2485A8562075A0E0BB7(String)
2021-07-28 14:47:31.034 DEBUG 6772 --- [http-nio-8080-exec-2] .l.b.m.U.selectUserNameByNameAndPassWord : <==      Total: 1
2021-07-28 14:47:31.035  INFO 6772 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:47:31.035  INFO 6772 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : result : admin/index 
2021-07-28 14:47:31.305  INFO 6772 --- [http-nio-8080-exec-7] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:47:34.069  INFO 6772 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 14:47:34.071 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 14:47:34.072 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 14:47:34.072 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 14:47:34.073 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 14:47:34.073 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 14:47:34.074 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 14:47:34.074 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 14:47:34.074 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 14:47:34.077 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:47:34.077 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:47:34.077 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:47:34.078 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:47:34.078 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:47:34.078 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:47:34.079 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:47:34.080 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:47:34.081 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:47:34.082 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 14:47:34.085 DEBUG 6772 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 14:47:34.085 DEBUG 6772 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 14:47:34.087 DEBUG 6772 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 14:47:34.087  INFO 6772 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:47:34.087  INFO 6772 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 14:47:34.351  INFO 6772 --- [http-nio-8080-exec-6] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:47:36.301  INFO 6772 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , false, admin]}
2021-07-28 14:47:36.301  INFO 6772 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:47:36.301  INFO 6772 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : result : admin/blogs/admin 
2021-07-28 14:47:36.303 ERROR 6772 --- [http-nio-8080-exec-8] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-8] Exception processing template "admin/blogs/admin": Error resolving template [admin/blogs/admin], template might not exist or might not be accessible by any of the configured Template Resolvers

org.thymeleaf.exceptions.TemplateInputException: Error resolving template [admin/blogs/admin], template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:869) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098) [thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072) [thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362) [thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189) [thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) [tomcat-embed-websocket-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124) [druid-1.1.16.jar:1.1.16]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_221]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_221]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_221]

2021-07-28 14:47:36.303 ERROR 6772 --- [http-nio-8080-exec-8] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: Error resolving template [admin/blogs/admin], template might not exist or might not be accessible by any of the configured Template Resolvers] with root cause

org.thymeleaf.exceptions.TemplateInputException: Error resolving template [admin/blogs/admin], template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:869) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362) ~[thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189) ~[thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124) ~[druid-1.1.16.jar:1.1.16]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_221]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_221]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_221]

2021-07-28 14:48:33.632  INFO 6772 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/types', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.TypeController.findAllTypes', args=[{}, 1]}
2021-07-28 14:48:33.641 DEBUG 6772 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectAll_COUNT  : ==>  Preparing: SELECT count(0) FROM type 
2021-07-28 14:48:33.641 DEBUG 6772 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectAll_COUNT  : ==> Parameters: 
2021-07-28 14:48:33.643 DEBUG 6772 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectAll_COUNT  : <==      Total: 1
2021-07-28 14:48:33.643 DEBUG 6772 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type LIMIT ? 
2021-07-28 14:48:33.643 DEBUG 6772 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 10(Integer)
2021-07-28 14:48:33.644 DEBUG 6772 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 14:48:33.645  INFO 6772 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:48:33.645  INFO 6772 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : result : admin/types 
2021-07-28 14:48:33.924  INFO 6772 --- [http-nio-8080-exec-3] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:48:35.019  INFO 6772 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/tags', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.TagController.tags', args=[1, {}]}
2021-07-28 14:48:35.022 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.mapper.TagMapper.selectAll_COUNT   : ==>  Preparing: SELECT count(0) FROM tag 
2021-07-28 14:48:35.022 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.mapper.TagMapper.selectAll_COUNT   : ==> Parameters: 
2021-07-28 14:48:35.024 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.mapper.TagMapper.selectAll_COUNT   : <==      Total: 1
2021-07-28 14:48:35.025 DEBUG 6772 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TagMapper.selectAll    : ==>  Preparing: SELECT tag_id,name FROM tag LIMIT ? 
2021-07-28 14:48:35.025 DEBUG 6772 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TagMapper.selectAll    : ==> Parameters: 10(Integer)
2021-07-28 14:48:35.026 DEBUG 6772 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TagMapper.selectAll    : <==      Total: 7
2021-07-28 14:48:35.027  INFO 6772 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:48:35.027  INFO 6772 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : result : admin/tags 
2021-07-28 14:48:35.271  INFO 6772 --- [http-nio-8080-exec-2] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:48:36.664  INFO 6772 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/personal/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.PersonalController.blogs', args=[{}, admin, 1]}
2021-07-28 14:48:36.667 DEBUG 6772 --- [http-nio-8080-exec-7] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 14:48:36.667 DEBUG 6772 --- [http-nio-8080-exec-7] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 14:48:36.668 DEBUG 6772 --- [http-nio-8080-exec-7] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 14:48:36.669 DEBUG 6772 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 14:48:36.669 DEBUG 6772 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 14:48:36.670 DEBUG 6772 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 14:48:36.670  INFO 6772 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:48:36.671  INFO 6772 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : result : admin/personal 
2021-07-28 14:48:43.819  INFO 6772 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/personal/update', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.PersonalController.userInfoUadate', args=[org.apache.catalina.session.StandardSessionFacade@7c82a1aa, 玩泥不, lyg0918@qq.com, ]}
2021-07-28 14:48:43.820 DEBUG 6772 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? 
2021-07-28 14:48:43.820 DEBUG 6772 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String)
2021-07-28 14:48:43.821 DEBUG 6772 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 14:48:43.823 DEBUG 6772 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.updateByPrimaryKey    : ==>  Preparing: UPDATE user SET nick_name = ?,username = ?,password = ?,email = ?,avatar = ?,type = ?,create_time = ?,update_time = ? WHERE user_id = ? 
2021-07-28 14:48:43.825 DEBUG 6772 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.updateByPrimaryKey    : ==> Parameters: 玩泥不(String), admin(String), 89446CF944BBA2485A8562075A0E0BB7(String), lyg0918@qq.com(String), https://cdn.glitch.com/bcca76bf-b6da-4c18-9b77-b7d3e3601f26%2Fuser.png?v=1627092421035(String), null, 2021-07-24 19:53:23.0(Timestamp), 2021-07-28 14:48:43.822(Timestamp), 1(Integer)
2021-07-28 14:48:43.828 DEBUG 6772 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.updateByPrimaryKey    : <==    Updates: 1
2021-07-28 14:48:43.828  INFO 6772 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:48:43.828  INFO 6772 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : redirect:/admin/personal/admin 
2021-07-28 14:48:43.841  INFO 6772 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/personal/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.PersonalController.blogs', args=[{}, admin, 1]}
2021-07-28 14:48:43.842 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 14:48:43.842 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 14:48:43.843 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 14:48:43.843 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 14:48:43.843 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 14:48:43.844 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 14:48:43.844  INFO 6772 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:48:43.844  INFO 6772 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : result : admin/personal 
2021-07-28 14:48:46.299  INFO 6772 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 14:48:46.300 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 14:48:46.300 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 14:48:46.301 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 14:48:46.301 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 14:48:46.302 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 14:48:46.303 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 14:48:46.303 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 14:48:46.303 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 14:48:46.305 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:48:46.305 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:48:46.306 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:48:46.306 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:48:46.306 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:48:46.307 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:48:46.308 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:48:46.308 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:48:46.308 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:48:46.309 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 14:48:46.309 DEBUG 6772 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 14:48:46.309 DEBUG 6772 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 14:48:46.310 DEBUG 6772 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 14:48:46.310  INFO 6772 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:48:46.310  INFO 6772 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 14:48:46.556  INFO 6772 --- [http-nio-8080-exec-8] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:48:48.860  INFO 6772 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , false, admin]}
2021-07-28 14:48:48.860  INFO 6772 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:48:48.860  INFO 6772 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : result : admin/blogs/admin 
2021-07-28 14:48:48.861 ERROR 6772 --- [http-nio-8080-exec-6] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-6] Exception processing template "admin/blogs/admin": Error resolving template [admin/blogs/admin], template might not exist or might not be accessible by any of the configured Template Resolvers

org.thymeleaf.exceptions.TemplateInputException: Error resolving template [admin/blogs/admin], template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:869) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098) [thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072) [thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362) [thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189) [thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) [tomcat-embed-websocket-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124) [druid-1.1.16.jar:1.1.16]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_221]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_221]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_221]

2021-07-28 14:48:48.862 ERROR 6772 --- [http-nio-8080-exec-6] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: Error resolving template [admin/blogs/admin], template might not exist or might not be accessible by any of the configured Template Resolvers] with root cause

org.thymeleaf.exceptions.TemplateInputException: Error resolving template [admin/blogs/admin], template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:869) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362) ~[thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189) ~[thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124) ~[druid-1.1.16.jar:1.1.16]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_221]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_221]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_221]

2021-07-28 14:48:52.629  INFO 6772 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, java, , false, admin]}
2021-07-28 14:48:52.632 DEBUG 6772 --- [http-nio-8080-exec-10] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE 1 = 1 AND title LIKE CONCAT(CONCAT('%', ?), '%') 
2021-07-28 14:48:52.633 DEBUG 6772 --- [http-nio-8080-exec-10] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==> Parameters: java(String)
2021-07-28 14:48:52.634 DEBUG 6772 --- [http-nio-8080-exec-10] b.l.b.m.B.findBlogByKeyWords_COUNT       : <==      Total: 1
2021-07-28 14:48:52.634 DEBUG 6772 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 AND title like CONCAT(CONCAT('%',?),'%') order by update_time desc LIMIT ? 
2021-07-28 14:48:52.634 DEBUG 6772 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: java(String), 8(Integer)
2021-07-28 14:48:52.636 DEBUG 6772 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:48:52.637 DEBUG 6772 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:48:52.638 DEBUG 6772 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:48:52.638 DEBUG 6772 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:48:52.638 DEBUG 6772 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:48:52.639 DEBUG 6772 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:48:52.639 DEBUG 6772 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:48:52.639 DEBUG 6772 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 14:48:52.640 DEBUG 6772 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:48:52.641 DEBUG 6772 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:48:52.641 DEBUG 6772 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:48:52.641 DEBUG 6772 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:48:52.642 DEBUG 6772 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 3
2021-07-28 14:48:52.642  INFO 6772 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:48:52.642  INFO 6772 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : result : admin/blogs :: blogList 
2021-07-28 14:48:56.880  INFO 6772 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 14:48:56.881 DEBUG 6772 --- [http-nio-8080-exec-3] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 14:48:56.882 DEBUG 6772 --- [http-nio-8080-exec-3] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 14:48:56.883 DEBUG 6772 --- [http-nio-8080-exec-3] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 14:48:56.883 DEBUG 6772 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 14:48:56.883 DEBUG 6772 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 14:48:56.885 DEBUG 6772 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 14:48:56.885 DEBUG 6772 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 14:48:56.886 DEBUG 6772 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 14:48:56.888 DEBUG 6772 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:48:56.889 DEBUG 6772 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:48:56.889 DEBUG 6772 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:48:56.890 DEBUG 6772 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:48:56.890 DEBUG 6772 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:48:56.891 DEBUG 6772 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:48:56.891 DEBUG 6772 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:48:56.891 DEBUG 6772 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:48:56.892 DEBUG 6772 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:48:56.892 DEBUG 6772 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 14:48:56.892 DEBUG 6772 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 14:48:56.893 DEBUG 6772 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 14:48:56.893 DEBUG 6772 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 14:48:56.893  INFO 6772 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:48:56.893  INFO 6772 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 14:48:57.147  INFO 6772 --- [http-nio-8080-exec-2] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:48:58.897  INFO 6772 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/addPage', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.addPage', args=[{}]}
2021-07-28 14:48:58.898 DEBUG 6772 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 14:48:58.898 DEBUG 6772 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 14:48:58.899 DEBUG 6772 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 14:48:58.900 DEBUG 6772 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TagMapper.selectAll    : ==>  Preparing: SELECT tag_id,name FROM tag 
2021-07-28 14:48:58.900 DEBUG 6772 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TagMapper.selectAll    : ==> Parameters: 
2021-07-28 14:48:58.901 DEBUG 6772 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TagMapper.selectAll    : <==      Total: 7
2021-07-28 14:48:58.901  INFO 6772 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:48:58.902  INFO 6772 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : result : admin/blogs-input 
2021-07-28 14:48:59.137  INFO 6772 --- [http-nio-8080-exec-9] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:49:01.206  INFO 6772 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 14:49:01.206 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 14:49:01.207 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 14:49:01.208 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 14:49:01.208 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 14:49:01.208 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 14:49:01.209 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 14:49:01.210 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 14:49:01.210 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 14:49:01.212 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:49:01.212 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:49:01.212 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:49:01.213 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:49:01.213 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:49:01.214 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:49:01.214 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:49:01.214 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:49:01.215 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:49:01.215 DEBUG 6772 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 14:49:01.216 DEBUG 6772 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 14:49:01.216 DEBUG 6772 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 14:49:01.217 DEBUG 6772 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 14:49:01.217  INFO 6772 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:49:01.217  INFO 6772 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 14:49:01.461  INFO 6772 --- [http-nio-8080-exec-4] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:49:11.377  INFO 6772 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, 随笔, , false, admin]}
2021-07-28 14:49:11.378 DEBUG 6772 --- [http-nio-8080-exec-1] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE 1 = 1 AND title LIKE CONCAT(CONCAT('%', ?), '%') 
2021-07-28 14:49:11.378 DEBUG 6772 --- [http-nio-8080-exec-1] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==> Parameters: 随笔(String)
2021-07-28 14:49:11.380 DEBUG 6772 --- [http-nio-8080-exec-1] b.l.b.m.B.findBlogByKeyWords_COUNT       : <==      Total: 1
2021-07-28 14:49:11.380 DEBUG 6772 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 AND title like CONCAT(CONCAT('%',?),'%') order by update_time desc LIMIT ? 
2021-07-28 14:49:11.380 DEBUG 6772 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 随笔(String), 8(Integer)
2021-07-28 14:49:11.381 DEBUG 6772 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:49:11.381 DEBUG 6772 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:49:11.382 DEBUG 6772 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:49:11.382 DEBUG 6772 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:49:11.382 DEBUG 6772 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:49:11.383 DEBUG 6772 --- [http-nio-8080-exec-1] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:49:11.383 DEBUG 6772 --- [http-nio-8080-exec-1] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 1
2021-07-28 14:49:11.384  INFO 6772 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:49:11.384  INFO 6772 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : admin/blogs :: blogList 
2021-07-28 14:49:12.922  INFO 6772 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/22/edit', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.editPage', args=[{}, 22]}
2021-07-28 14:49:12.924  INFO 6772 --- [http-nio-8080-exec-8] black.lyg.blog.service.BlogService       : 从redis中获取Blog的数据，标题为随笔
2021-07-28 14:49:12.927  INFO 6772 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:49:12.927 ERROR 6772 --- [http-nio-8080-exec-8] b.l.b.h.ControllerExceptionHandler       : Request URL : http://localhost:8080/admin/blogs/22/edit, Exception : 无法获取实体类black.lyg.blog.po.BlogTag对应的表名!
2021-07-28 14:49:12.927  WARN 6772 --- [http-nio-8080-exec-8] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [tk.mybatis.mapper.MapperException: 无法获取实体类black.lyg.blog.po.BlogTag对应的表名!]
2021-07-28 14:49:34.637  INFO 6772 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, 随笔, , false, admin]}
2021-07-28 14:49:34.639 DEBUG 6772 --- [http-nio-8080-exec-6] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE 1 = 1 AND title LIKE CONCAT(CONCAT('%', ?), '%') 
2021-07-28 14:49:34.639 DEBUG 6772 --- [http-nio-8080-exec-6] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==> Parameters: 随笔(String)
2021-07-28 14:49:34.640 DEBUG 6772 --- [http-nio-8080-exec-6] b.l.b.m.B.findBlogByKeyWords_COUNT       : <==      Total: 1
2021-07-28 14:49:34.640 DEBUG 6772 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 AND title like CONCAT(CONCAT('%',?),'%') order by update_time desc LIMIT ? 
2021-07-28 14:49:34.641 DEBUG 6772 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 随笔(String), 8(Integer)
2021-07-28 14:49:34.642 DEBUG 6772 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:49:34.642 DEBUG 6772 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:49:34.642 DEBUG 6772 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:49:34.642 DEBUG 6772 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:49:34.643 DEBUG 6772 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:49:34.643 DEBUG 6772 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:49:34.643 DEBUG 6772 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 1
2021-07-28 14:49:34.643  INFO 6772 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:49:34.643  INFO 6772 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : result : admin/blogs :: blogList 
2021-07-28 14:49:36.085  INFO 6772 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/22/edit', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.editPage', args=[{}, 22]}
2021-07-28 14:49:36.087  INFO 6772 --- [http-nio-8080-exec-10] black.lyg.blog.service.BlogService       : 从redis中获取Blog的数据，标题为随笔
2021-07-28 14:49:36.087  INFO 6772 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:49:36.087 ERROR 6772 --- [http-nio-8080-exec-10] b.l.b.h.ControllerExceptionHandler       : Request URL : http://localhost:8080/admin/blogs/22/edit, Exception : 无法获取实体类black.lyg.blog.po.BlogTag对应的表名!
2021-07-28 14:49:36.087  WARN 6772 --- [http-nio-8080-exec-10] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [tk.mybatis.mapper.MapperException: 无法获取实体类black.lyg.blog.po.BlogTag对应的表名!]
2021-07-28 14:49:52.460  INFO 6772 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 14:49:52.460 DEBUG 6772 --- [http-nio-8080-exec-10] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 14:49:52.461 DEBUG 6772 --- [http-nio-8080-exec-10] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 14:49:52.462 DEBUG 6772 --- [http-nio-8080-exec-10] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 14:49:52.463 DEBUG 6772 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 14:49:52.463 DEBUG 6772 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 14:49:52.464 DEBUG 6772 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 14:49:52.464 DEBUG 6772 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 14:49:52.464 DEBUG 6772 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 14:49:52.466 DEBUG 6772 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:49:52.466 DEBUG 6772 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:49:52.467 DEBUG 6772 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:49:52.467 DEBUG 6772 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:49:52.467 DEBUG 6772 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:49:52.468 DEBUG 6772 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:49:52.469 DEBUG 6772 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:49:52.469 DEBUG 6772 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:49:52.470 DEBUG 6772 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:49:52.471 DEBUG 6772 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 14:49:52.471 DEBUG 6772 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 14:49:52.471 DEBUG 6772 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 14:49:52.472 DEBUG 6772 --- [http-nio-8080-exec-10] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 14:49:52.472  INFO 6772 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:49:52.472  INFO 6772 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 14:49:52.728  INFO 6772 --- [http-nio-8080-exec-7] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:49:54.233  INFO 6772 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/8/edit', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.editPage', args=[{}, 8]}
2021-07-28 14:49:54.235  INFO 6772 --- [http-nio-8080-exec-9] black.lyg.blog.service.BlogService       : 从redis中获取Blog的数据，标题为条件注解@Conditional
2021-07-28 14:49:54.235  INFO 6772 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:49:54.235 ERROR 6772 --- [http-nio-8080-exec-9] b.l.b.h.ControllerExceptionHandler       : Request URL : http://localhost:8080/admin/blogs/8/edit, Exception : 无法获取实体类black.lyg.blog.po.BlogTag对应的表名!
2021-07-28 14:49:54.235  WARN 6772 --- [http-nio-8080-exec-9] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [tk.mybatis.mapper.MapperException: 无法获取实体类black.lyg.blog.po.BlogTag对应的表名!]
2021-07-28 14:50:01.853  INFO 6772 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 14:50:01.854 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 14:50:01.854 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 14:50:01.855 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 14:50:01.856 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 14:50:01.856 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 14:50:01.857 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 14:50:01.857 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 14:50:01.857 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 14:50:01.859 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:50:01.859 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:50:01.860 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:50:01.860 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:50:01.860 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:50:01.861 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:50:01.861 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:50:01.861 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:50:01.862 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:50:01.862 DEBUG 6772 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 14:50:01.862 DEBUG 6772 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 14:50:01.862 DEBUG 6772 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 14:50:01.863 DEBUG 6772 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 14:50:01.863  INFO 6772 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:50:01.863  INFO 6772 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 14:50:02.110  INFO 6772 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:50:03.704  INFO 6772 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/8/edit', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.editPage', args=[{}, 8]}
2021-07-28 14:50:03.706  INFO 6772 --- [http-nio-8080-exec-8] black.lyg.blog.service.BlogService       : 从redis中获取Blog的数据，标题为条件注解@Conditional
2021-07-28 14:50:03.706  INFO 6772 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:50:03.706 ERROR 6772 --- [http-nio-8080-exec-8] b.l.b.h.ControllerExceptionHandler       : Request URL : http://localhost:8080/admin/blogs/8/edit, Exception : 无法获取实体类black.lyg.blog.po.BlogTag对应的表名!
2021-07-28 14:50:03.706  WARN 6772 --- [http-nio-8080-exec-8] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [tk.mybatis.mapper.MapperException: 无法获取实体类black.lyg.blog.po.BlogTag对应的表名!]
2021-07-28 14:51:21.971  INFO 8496 --- [restartedMain] black.lyg.blog.BlogApplication           : Starting BlogApplication on Administraror with PID 8496 (D:\Desktop\blog\blog-master\target\classes started by Administrator in D:\Desktop\blog\blog-master)
2021-07-28 14:51:21.973 DEBUG 8496 --- [restartedMain] black.lyg.blog.BlogApplication           : Running with Spring Boot v2.2.6.RELEASE, Spring v5.2.5.RELEASE
2021-07-28 14:51:21.973  INFO 8496 --- [restartedMain] black.lyg.blog.BlogApplication           : The following profiles are active: dev
2021-07-28 14:51:22.009  INFO 8496 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-07-28 14:51:22.009  INFO 8496 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-07-28 14:51:22.547  INFO 8496 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-28 14:51:22.548  INFO 8496 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-28 14:51:22.573  INFO 8496 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16ms. Found 0 Redis repository interfaces.
2021-07-28 14:51:22.671  WARN 8496 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[black.lyg.blog]' package. Please check your configuration.
2021-07-28 14:51:23.192  INFO 8496 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-07-28 14:51:23.198  INFO 8496 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-28 14:51:23.198  INFO 8496 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-28 14:51:23.199  INFO 8496 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : An older version [1.2.14] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.23]
2021-07-28 14:51:23.200  INFO 8496 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.14] using APR version [1.6.2].
2021-07-28 14:51:23.200  INFO 8496 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-07-28 14:51:23.200  INFO 8496 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-07-28 14:51:24.221  INFO 8496 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.0.2l  25 May 2017]
2021-07-28 14:51:24.323  INFO 8496 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-28 14:51:24.323  INFO 8496 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2314 ms
2021-07-28 14:51:24.361  INFO 8496 --- [restartedMain] o.s.boot.web.servlet.RegistrationBean    : Filter webStatFilter was not registered (possibly already registered?)
2021-07-28 14:51:25.313  INFO 8496 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-28 14:51:25.386  INFO 8496 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-07-28 14:51:25.893  INFO 8496 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-07-28 14:51:25.937  INFO 8496 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-07-28 14:51:25.939  INFO 8496 --- [restartedMain] black.lyg.blog.BlogApplication           : Started BlogApplication in 4.294 seconds (JVM running for 5.639)
2021-07-28 14:51:25.975  INFO 8496 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-28 14:51:26.968 DEBUG 8496 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc 
2021-07-28 14:51:26.985 DEBUG 8496 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 
2021-07-28 14:51:27.010 DEBUG 8496 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:51:27.011 DEBUG 8496 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:51:27.012 DEBUG 8496 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:51:27.014 DEBUG 8496 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:51:27.014 DEBUG 8496 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:51:27.015 DEBUG 8496 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:51:27.017 DEBUG 8496 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:51:27.017 DEBUG 8496 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:51:27.018 DEBUG 8496 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:51:27.019 DEBUG 8496 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:51:27.020 DEBUG 8496 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 14:51:27.021 DEBUG 8496 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:51:27.022 DEBUG 8496 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:51:27.022 DEBUG 8496 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 14:51:27.023 DEBUG 8496 --- [restartedMain] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:51:27.023 DEBUG 8496 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:51:27.023 DEBUG 8496 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 14:51:27.025 DEBUG 8496 --- [restartedMain] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:51:27.026 DEBUG 8496 --- [restartedMain] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 9
2021-07-28 14:51:27.129  INFO 8496 --- [restartedMain] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2021-07-28 14:51:27.130  INFO 8496 --- [restartedMain] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2021-07-28 14:51:28.782  INFO 8496 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java合并两个int数组
2021-07-28 14:51:28.783  INFO 8496 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：条件注解@Conditional
2021-07-28 14:51:28.785  INFO 8496 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：随笔
2021-07-28 14:51:28.786  INFO 8496 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java常见关键字final、static、super、abstract、this
2021-07-28 14:51:28.787  INFO 8496 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：挖掘机技术哪家强
2021-07-28 14:51:28.788  INFO 8496 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：欢迎使用 Markdown在线编辑器 MdEditor
2021-07-28 14:51:28.790  INFO 8496 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：Java中 equals() 和 hashCode()的关系
2021-07-28 14:51:28.792  INFO 8496 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（二）：Hash
2021-07-28 14:51:28.793  INFO 8496 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 将blog数据添加到redis的AllBlog中，其博客标题为：redis学习笔记（一）：String
2021-07-28 14:51:28.797  INFO 8496 --- [restartedMain] black.lyg.blog.config.StartupRunner      : 初始化redis中blogCount的数量为：9
2021-07-28 14:51:32.551  INFO 8496 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-28 14:51:32.551  INFO 8496 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-28 14:51:32.561  INFO 8496 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 10 ms
2021-07-28 14:51:32.579  INFO 8496 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.loginPage', args=[]}
2021-07-28 14:51:32.582  INFO 8496 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:51:32.582  INFO 8496 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : admin/login 
2021-07-28 14:51:38.120  INFO 8496 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.login', args=[admin, lyg0918, org.apache.catalina.session.StandardSessionFacade@67ee0559, {}]}
2021-07-28 14:51:38.122 DEBUG 8496 --- [http-nio-8080-exec-7] .l.b.m.U.selectUserNameByNameAndPassWord : ==>  Preparing: select * from user where username = ? and password = ? 
2021-07-28 14:51:38.122 DEBUG 8496 --- [http-nio-8080-exec-7] .l.b.m.U.selectUserNameByNameAndPassWord : ==> Parameters: admin(String), 89446CF944BBA2485A8562075A0E0BB7(String)
2021-07-28 14:51:38.124 DEBUG 8496 --- [http-nio-8080-exec-7] .l.b.m.U.selectUserNameByNameAndPassWord : <==      Total: 1
2021-07-28 14:51:38.124  INFO 8496 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:51:38.124  INFO 8496 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : result : admin/index 
2021-07-28 14:51:38.414  INFO 8496 --- [http-nio-8080-exec-4] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:51:40.421  INFO 8496 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin;jsessionid=27C4BC42EF10CC5901963E5B1F5E4632', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 14:51:40.441 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 14:51:40.441 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 14:51:40.441 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 14:51:40.442 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 14:51:40.443 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 14:51:40.444 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 14:51:40.445 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 14:51:40.445 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 14:51:40.447 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:51:40.448 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:51:40.448 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:51:40.449 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:51:40.449 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:51:40.450 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:51:40.451 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:51:40.451 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:51:40.452 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:51:40.453 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 14:51:40.466 DEBUG 8496 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 14:51:40.467 DEBUG 8496 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 14:51:40.468 DEBUG 8496 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 14:51:40.468  INFO 8496 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:51:40.468  INFO 8496 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 14:51:40.709  INFO 8496 --- [http-nio-8080-exec-6] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:51:42.536  INFO 8496 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/8/edit', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.editPage', args=[{}, 8]}
2021-07-28 14:51:42.538  INFO 8496 --- [http-nio-8080-exec-5] black.lyg.blog.service.BlogService       : 从redis中获取Blog的数据，标题为条件注解@Conditional
2021-07-28 14:51:42.560 DEBUG 8496 --- [http-nio-8080-exec-5] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 14:51:42.561 DEBUG 8496 --- [http-nio-8080-exec-5] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 8(Integer)
2021-07-28 14:51:42.562 DEBUG 8496 --- [http-nio-8080-exec-5] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 14:51:42.564 DEBUG 8496 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 14:51:42.564 DEBUG 8496 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 14:51:42.565 DEBUG 8496 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 14:51:42.566 DEBUG 8496 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TagMapper.selectAll    : ==>  Preparing: SELECT tag_id,name FROM tag 
2021-07-28 14:51:42.566 DEBUG 8496 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TagMapper.selectAll    : ==> Parameters: 
2021-07-28 14:51:42.567 DEBUG 8496 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TagMapper.selectAll    : <==      Total: 7
2021-07-28 14:51:42.567  INFO 8496 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:51:42.567  INFO 8496 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : result : admin/blogs-input 
2021-07-28 14:51:42.789  INFO 8496 --- [http-nio-8080-exec-9] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:51:55.223  INFO 8496 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, 随笔, , false, admin]}
2021-07-28 14:51:55.228 DEBUG 8496 --- [http-nio-8080-exec-7] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE 1 = 1 AND title LIKE CONCAT(CONCAT('%', ?), '%') 
2021-07-28 14:51:55.228 DEBUG 8496 --- [http-nio-8080-exec-7] b.l.b.m.B.findBlogByKeyWords_COUNT       : ==> Parameters: 随笔(String)
2021-07-28 14:51:55.229 DEBUG 8496 --- [http-nio-8080-exec-7] b.l.b.m.B.findBlogByKeyWords_COUNT       : <==      Total: 1
2021-07-28 14:51:55.229 DEBUG 8496 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==>  Preparing: select * from blog where 1=1 AND title like CONCAT(CONCAT('%',?),'%') order by update_time desc LIMIT ? 
2021-07-28 14:51:55.230 DEBUG 8496 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.findBlogByKeyWords    : ==> Parameters: 随笔(String), 8(Integer)
2021-07-28 14:51:55.231 DEBUG 8496 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:51:55.231 DEBUG 8496 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:51:55.232 DEBUG 8496 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:51:55.233 DEBUG 8496 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:51:55.233 DEBUG 8496 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:51:55.234 DEBUG 8496 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:51:55.234 DEBUG 8496 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.findBlogByKeyWords    : <==      Total: 1
2021-07-28 14:51:55.234  INFO 8496 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:51:55.234  INFO 8496 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : result : admin/blogs :: blogList 
2021-07-28 14:51:56.704  INFO 8496 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/22/edit', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.editPage', args=[{}, 22]}
2021-07-28 14:51:56.705  INFO 8496 --- [http-nio-8080-exec-8] black.lyg.blog.service.BlogService       : 从redis中获取Blog的数据，标题为随笔
2021-07-28 14:51:56.707 DEBUG 8496 --- [http-nio-8080-exec-8] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 14:51:56.707 DEBUG 8496 --- [http-nio-8080-exec-8] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 22(Integer)
2021-07-28 14:51:56.709 DEBUG 8496 --- [http-nio-8080-exec-8] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 14:51:56.709 DEBUG 8496 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 14:51:56.710 DEBUG 8496 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 14:51:56.712 DEBUG 8496 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 14:51:56.712 DEBUG 8496 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.TagMapper.selectAll    : ==>  Preparing: SELECT tag_id,name FROM tag 
2021-07-28 14:51:56.712 DEBUG 8496 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.TagMapper.selectAll    : ==> Parameters: 
2021-07-28 14:51:56.713 DEBUG 8496 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.TagMapper.selectAll    : <==      Total: 7
2021-07-28 14:51:56.714  INFO 8496 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:51:56.714  INFO 8496 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : result : admin/blogs-input 
2021-07-28 14:51:56.933  INFO 8496 --- [http-nio-8080-exec-10] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:52:04.982  INFO 8496 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 14:52:04.982 DEBUG 8496 --- [http-nio-8080-exec-2] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 14:52:04.983 DEBUG 8496 --- [http-nio-8080-exec-2] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 14:52:04.984 DEBUG 8496 --- [http-nio-8080-exec-2] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 14:52:04.985 DEBUG 8496 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 14:52:04.985 DEBUG 8496 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 14:52:04.986 DEBUG 8496 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 14:52:04.986 DEBUG 8496 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 14:52:04.986 DEBUG 8496 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 14:52:04.988 DEBUG 8496 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:52:04.988 DEBUG 8496 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:52:04.989 DEBUG 8496 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:52:04.989 DEBUG 8496 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:52:04.989 DEBUG 8496 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:52:04.990 DEBUG 8496 --- [http-nio-8080-exec-2] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:52:04.992 DEBUG 8496 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:52:04.992 DEBUG 8496 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:52:04.993 DEBUG 8496 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:52:04.994 DEBUG 8496 --- [http-nio-8080-exec-2] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 14:52:04.994 DEBUG 8496 --- [http-nio-8080-exec-2] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 14:52:04.994 DEBUG 8496 --- [http-nio-8080-exec-2] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 14:52:04.996 DEBUG 8496 --- [http-nio-8080-exec-2] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 14:52:04.996  INFO 8496 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:52:04.996  INFO 8496 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 14:52:05.196  INFO 8496 --- [http-nio-8080-exec-4] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:52:06.495  INFO 8496 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/15/edit', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.editPage', args=[{}, 15]}
2021-07-28 14:52:06.496  INFO 8496 --- [http-nio-8080-exec-3] black.lyg.blog.service.BlogService       : 从redis中获取Blog的数据，标题为Java合并两个int数组
2021-07-28 14:52:06.497 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 14:52:06.497 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 15(Integer)
2021-07-28 14:52:06.498 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 14:52:06.499 DEBUG 8496 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 14:52:06.499 DEBUG 8496 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 14:52:06.499 DEBUG 8496 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 14:52:06.500 DEBUG 8496 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TagMapper.selectAll    : ==>  Preparing: SELECT tag_id,name FROM tag 
2021-07-28 14:52:06.500 DEBUG 8496 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TagMapper.selectAll    : ==> Parameters: 
2021-07-28 14:52:06.501 DEBUG 8496 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TagMapper.selectAll    : <==      Total: 7
2021-07-28 14:52:06.501  INFO 8496 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:52:06.501  INFO 8496 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : result : admin/blogs-input 
2021-07-28 14:52:06.708  INFO 8496 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:52:14.022  INFO 8496 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/types', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.TypeController.findAllTypes', args=[{}, 1]}
2021-07-28 14:52:14.031 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectAll_COUNT  : ==>  Preparing: SELECT count(0) FROM type 
2021-07-28 14:52:14.031 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectAll_COUNT  : ==> Parameters: 
2021-07-28 14:52:14.033 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectAll_COUNT  : <==      Total: 1
2021-07-28 14:52:14.033 DEBUG 8496 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type LIMIT ? 
2021-07-28 14:52:14.033 DEBUG 8496 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 10(Integer)
2021-07-28 14:52:14.034 DEBUG 8496 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 14:52:14.036  INFO 8496 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:52:14.036  INFO 8496 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : result : admin/types 
2021-07-28 14:52:14.228  INFO 8496 --- [http-nio-8080-exec-5] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:52:15.286  INFO 8496 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 14:52:15.287 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 14:52:15.287 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 14:52:15.288 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 14:52:15.289 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 14:52:15.289 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 14:52:15.290 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 14:52:15.290 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 14:52:15.290 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 14:52:15.293 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:52:15.293 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:52:15.293 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:52:15.294 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:52:15.294 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:52:15.295 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:52:15.296 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:52:15.296 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:52:15.297 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:52:15.297 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 14:52:15.298 DEBUG 8496 --- [http-nio-8080-exec-9] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 14:52:15.298 DEBUG 8496 --- [http-nio-8080-exec-9] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 14:52:15.298 DEBUG 8496 --- [http-nio-8080-exec-9] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 14:52:15.299  INFO 8496 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:52:15.299  INFO 8496 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 14:52:15.489  INFO 8496 --- [http-nio-8080-exec-7] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:52:17.090  INFO 8496 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/8/edit', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.editPage', args=[{}, 8]}
2021-07-28 14:52:17.091  INFO 8496 --- [http-nio-8080-exec-8] black.lyg.blog.service.BlogService       : 从redis中获取Blog的数据，标题为条件注解@Conditional
2021-07-28 14:52:17.093 DEBUG 8496 --- [http-nio-8080-exec-8] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 14:52:17.093 DEBUG 8496 --- [http-nio-8080-exec-8] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 8(Integer)
2021-07-28 14:52:17.094 DEBUG 8496 --- [http-nio-8080-exec-8] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 14:52:17.094 DEBUG 8496 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 14:52:17.094 DEBUG 8496 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 14:52:17.095 DEBUG 8496 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 14:52:17.095 DEBUG 8496 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.TagMapper.selectAll    : ==>  Preparing: SELECT tag_id,name FROM tag 
2021-07-28 14:52:17.095 DEBUG 8496 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.TagMapper.selectAll    : ==> Parameters: 
2021-07-28 14:52:17.096 DEBUG 8496 --- [http-nio-8080-exec-8] b.lyg.blog.mapper.TagMapper.selectAll    : <==      Total: 7
2021-07-28 14:52:17.096  INFO 8496 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:52:17.096  INFO 8496 --- [http-nio-8080-exec-8] black.lyg.blog.aspect.LogAspect          : result : admin/blogs-input 
2021-07-28 14:52:17.299  INFO 8496 --- [http-nio-8080-exec-10] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:52:19.478  INFO 8496 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/types', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.TypeController.findAllTypes', args=[{}, 1]}
2021-07-28 14:52:19.479 DEBUG 8496 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectAll_COUNT  : ==>  Preparing: SELECT count(0) FROM type 
2021-07-28 14:52:19.479 DEBUG 8496 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectAll_COUNT  : ==> Parameters: 
2021-07-28 14:52:19.481 DEBUG 8496 --- [http-nio-8080-exec-2] b.l.b.mapper.TypeMapper.selectAll_COUNT  : <==      Total: 1
2021-07-28 14:52:19.481 DEBUG 8496 --- [http-nio-8080-exec-2] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type LIMIT ? 
2021-07-28 14:52:19.481 DEBUG 8496 --- [http-nio-8080-exec-2] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 10(Integer)
2021-07-28 14:52:19.482 DEBUG 8496 --- [http-nio-8080-exec-2] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 14:52:19.483  INFO 8496 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:52:19.483  INFO 8496 --- [http-nio-8080-exec-2] black.lyg.blog.aspect.LogAspect          : result : admin/types 
2021-07-28 14:52:19.684  INFO 8496 --- [http-nio-8080-exec-4] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:52:21.103  INFO 8496 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, admin, 1]}
2021-07-28 14:52:21.104 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 14:52:21.105 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 14:52:21.106 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 14:52:21.106 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 14:52:21.107 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 14:52:21.108 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 14:52:21.108 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 14:52:21.109 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 14:52:21.111 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:52:21.111 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:52:21.112 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:52:21.112 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:52:21.112 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:52:21.113 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:52:21.113 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:52:21.113 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:52:21.114 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:52:21.115 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 14:52:21.115 DEBUG 8496 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 14:52:21.115 DEBUG 8496 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 14:52:21.116 DEBUG 8496 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 14:52:21.116  INFO 8496 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:52:21.116  INFO 8496 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 14:52:21.313  INFO 8496 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:52:22.946  INFO 8496 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/22/edit', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.editPage', args=[{}, 22]}
2021-07-28 14:52:22.948  INFO 8496 --- [http-nio-8080-exec-6] black.lyg.blog.service.BlogService       : 从redis中获取Blog的数据，标题为随笔
2021-07-28 14:52:22.949 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 14:52:22.950 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 22(Integer)
2021-07-28 14:52:22.951 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 14:52:22.951 DEBUG 8496 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 14:52:22.951 DEBUG 8496 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 14:52:22.952 DEBUG 8496 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 14:52:22.952 DEBUG 8496 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TagMapper.selectAll    : ==>  Preparing: SELECT tag_id,name FROM tag 
2021-07-28 14:52:22.953 DEBUG 8496 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TagMapper.selectAll    : ==> Parameters: 
2021-07-28 14:52:22.953 DEBUG 8496 --- [http-nio-8080-exec-6] b.lyg.blog.mapper.TagMapper.selectAll    : <==      Total: 7
2021-07-28 14:52:22.954  INFO 8496 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:52:22.954  INFO 8496 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : result : admin/blogs-input 
2021-07-28 14:52:23.154  INFO 8496 --- [http-nio-8080-exec-5] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:52:39.361  INFO 8496 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/add', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogAdd', args=[Blog(blogId=22, typeId=4, userId=null, title=流量详情, content=| 帐户类型 | 免费帐户 | 标准帐户 | 高级帐户 |
| --- | --- | --- | --- |
| 帐户流量 | 60M | 1GB | 10GB |
| 设备数目 | 2台 | 无限制 | 无限制 |
| 当前价格 | 免费 | ￥8.17/月 | ￥12.33/月|, firstPicture=http://b-ssl.duitang.com/uploads/item/201807/27/20180727062342_45mCi.jpeg, flag=原创, description=Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。, views=null, appreciation=null, shareStatement=null, comment=true, publish=true, recommend=true, createTime=null, updateTime=null, type=null, user=null, tags=null), org.apache.catalina.session.StandardSessionFacade@67ee0559, {}, 24]}
2021-07-28 14:52:39.362 DEBUG 8496 --- [http-nio-8080-exec-4] b.l.b.m.TypeMapper.selectByPrimaryKey    : ==>  Preparing: SELECT type_id,name FROM type WHERE type_id = ? 
2021-07-28 14:52:39.362 DEBUG 8496 --- [http-nio-8080-exec-4] b.l.b.m.TypeMapper.selectByPrimaryKey    : ==> Parameters: 4(Integer)
2021-07-28 14:52:39.363 DEBUG 8496 --- [http-nio-8080-exec-4] b.l.b.m.TypeMapper.selectByPrimaryKey    : <==      Total: 1
2021-07-28 14:52:39.363 DEBUG 8496 --- [http-nio-8080-exec-4] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:52:39.364 DEBUG 8496 --- [http-nio-8080-exec-4] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 24(String)
2021-07-28 14:52:39.364 DEBUG 8496 --- [http-nio-8080-exec-4] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:52:39.367 DEBUG 8496 --- [http-nio-8080-exec-4] b.l.b.m.B.updateByPrimaryKeySelective    : ==>  Preparing: UPDATE blog SET type_id = ?,user_id = ?,title = ?,content = ?,first_picture = ?,flag = ?,description = ?,appreciation = ?,share_statement = ?,comment = ?,publish = ?,recommend = ?,update_time = ? WHERE blog_id = ? 
2021-07-28 14:52:39.368 DEBUG 8496 --- [http-nio-8080-exec-4] b.l.b.m.B.updateByPrimaryKeySelective    : ==> Parameters: 4(Integer), 1(Integer), 流量详情(String), | 帐户类型 | 免费帐户 | 标准帐户 | 高级帐户 |
| --- | --- | --- | --- |
| 帐户流量 | 60M | 1GB | 10GB |
| 设备数目 | 2台 | 无限制 | 无限制 |
| 当前价格 | 免费 | ￥8.17/月 | ￥12.33/月|(String), http://b-ssl.duitang.com/uploads/item/201807/27/20180727062342_45mCi.jpeg(String), 原创(String), Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。(String), false(Boolean), false(Boolean), true(Boolean), true(Boolean), true(Boolean), 2021-07-28 14:52:39.365(Timestamp), 22(Integer)
2021-07-28 14:52:39.370 DEBUG 8496 --- [http-nio-8080-exec-4] b.l.b.m.B.updateByPrimaryKeySelective    : <==    Updates: 1
2021-07-28 14:52:39.370 DEBUG 8496 --- [http-nio-8080-exec-4] b.l.b.m.BlogTagMapper.deleteByExample    : ==>  Preparing: DELETE FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 14:52:39.371 DEBUG 8496 --- [http-nio-8080-exec-4] b.l.b.m.BlogTagMapper.deleteByExample    : ==> Parameters: 22(Integer)
2021-07-28 14:52:39.371 DEBUG 8496 --- [http-nio-8080-exec-4] b.l.b.m.BlogTagMapper.deleteByExample    : <==    Updates: 1
2021-07-28 14:52:39.373 DEBUG 8496 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.BlogTagMapper.insert   : ==>  Preparing: INSERT INTO blog_tag ( blog_tag_id,blog_id,tag_id ) VALUES( ?,?,? ) 
2021-07-28 14:52:39.374 DEBUG 8496 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.BlogTagMapper.insert   : ==> Parameters: null, 22(Integer), 24(Integer)
2021-07-28 14:52:39.375 DEBUG 8496 --- [http-nio-8080-exec-4] b.lyg.blog.mapper.BlogTagMapper.insert   : <==    Updates: 1
2021-07-28 14:52:39.377  INFO 8496 --- [http-nio-8080-exec-4] black.lyg.blog.service.BlogService       : 删除redis中key为blogtags的hash数据类型
2021-07-28 14:52:39.378 DEBUG 8496 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectByPrimaryKey    : ==>  Preparing: SELECT blog_id,type_id,user_id,title,content,first_picture,flag,description,views,appreciation,share_statement,comment,publish,recommend,create_time,update_time FROM blog WHERE blog_id = ? 
2021-07-28 14:52:39.378 DEBUG 8496 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectByPrimaryKey    : ==> Parameters: 22(Integer)
2021-07-28 14:52:39.379 DEBUG 8496 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.selectByPrimaryKey    : <==      Total: 1
2021-07-28 14:52:39.381  INFO 8496 --- [http-nio-8080-exec-4] black.lyg.blog.service.BlogService       : 更新redis中TheLatestBlog的数据，标题为流量详情
2021-07-28 14:52:39.382  INFO 8496 --- [http-nio-8080-exec-4] black.lyg.blog.service.BlogService       : 更新redis中AllBlog的数据，标题为流量详情
2021-07-28 14:52:39.384  INFO 8496 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:52:39.384  INFO 8496 --- [http-nio-8080-exec-4] black.lyg.blog.aspect.LogAspect          : result : redirect:/admin/blogs/admin 
2021-07-28 14:52:39.400  INFO 8496 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{message=操作成功}, admin, 1]}
2021-07-28 14:52:39.400 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 14:52:39.401 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: admin(String)
2021-07-28 14:52:39.401 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 14:52:39.402 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 14:52:39.402 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: admin(String), 8(Integer)
2021-07-28 14:52:39.403 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 14:52:39.403 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 14:52:39.403 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 1(Integer)
2021-07-28 14:52:39.405 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:52:39.405 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:52:39.406 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:52:39.406 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:52:39.406 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:52:39.407 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:52:39.408 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:52:39.408 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:52:39.408 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:52:39.409 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 7
2021-07-28 14:52:39.409 DEBUG 8496 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 14:52:39.410 DEBUG 8496 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 14:52:39.411 DEBUG 8496 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 14:52:39.411  INFO 8496 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:52:39.411  INFO 8496 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 14:52:39.623  INFO 8496 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:52:44.214 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==>  Preparing: SELECT count(0) FROM blog 
2021-07-28 14:52:44.215 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==> Parameters: 
2021-07-28 14:52:44.217 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.findBlogAll_COUNT     : <==      Total: 1
2021-07-28 14:52:44.217 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc LIMIT ? 
2021-07-28 14:52:44.218 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 5(Integer)
2021-07-28 14:52:44.219 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:52:44.219 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:52:44.220 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:52:44.220 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:52:44.220 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:52:44.221 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:52:44.221 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:52:44.221 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:52:44.221 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:52:44.222 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:52:44.222 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 14:52:44.223 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:52:44.223 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:52:44.223 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 14:52:44.224 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:52:44.224 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:52:44.224 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 14:52:44.224 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:52:44.225 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 5
2021-07-28 14:52:44.228  INFO 8496 --- [http-nio-8080-exec-6] black.lyg.blog.service.TagService        : 从redis中获取数据：[]
2021-07-28 14:52:44.228 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.TagMapper.findSeveralTopTags     : ==>  Preparing: select distinct t.tag_id,t.name ,count(*) as number from tag t ,blog_tag bt where t.tag_id = bt.tag_id group by t.tag_id, t.name order by number desc limit ? 
2021-07-28 14:52:44.229 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.TagMapper.findSeveralTopTags     : ==> Parameters: 10(Integer)
2021-07-28 14:52:44.230 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.TagMapper.findSeveralTopTags     : <==      Total: 7
2021-07-28 14:52:44.232  INFO 8496 --- [http-nio-8080-exec-6] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=21, name=Redis, BlogNumber=4)
2021-07-28 14:52:44.232  INFO 8496 --- [http-nio-8080-exec-6] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=22, name=Java, BlogNumber=4)
2021-07-28 14:52:44.233  INFO 8496 --- [http-nio-8080-exec-6] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=1, name=Spring, BlogNumber=2)
2021-07-28 14:52:44.233  INFO 8496 --- [http-nio-8080-exec-6] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=20, name=设计模式, BlogNumber=2)
2021-07-28 14:52:44.235  INFO 8496 --- [http-nio-8080-exec-6] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=24, name=测试, BlogNumber=2)
2021-07-28 14:52:44.235  INFO 8496 --- [http-nio-8080-exec-6] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=2, name=Mybatis, BlogNumber=1)
2021-07-28 14:52:44.236  INFO 8496 --- [http-nio-8080-exec-6] black.lyg.blog.service.TagService        : 将数据加入到redis中：TagTops(tagId=23, name=MySQL, BlogNumber=1)
2021-07-28 14:52:44.236  INFO 8496 --- [http-nio-8080-exec-6] black.lyg.blog.service.TagService        : 从Mysql中查找到由标签显示博客的数据：[TagTops(tagId=21, name=Redis, BlogNumber=4), TagTops(tagId=22, name=Java, BlogNumber=4), TagTops(tagId=1, name=Spring, BlogNumber=2), TagTops(tagId=20, name=设计模式, BlogNumber=2), TagTops(tagId=24, name=测试, BlogNumber=2), TagTops(tagId=2, name=Mybatis, BlogNumber=1), TagTops(tagId=23, name=MySQL, BlogNumber=1)]
2021-07-28 14:52:44.238  INFO 8496 --- [http-nio-8080-exec-6] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:52:44.464  INFO 8496 --- [http-nio-8080-exec-5] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:52:50.930  INFO 8496 --- [http-nio-8080-exec-9] black.lyg.blog.service.BlogService       : 从redis中获取Blog的数据，标题为流量详情
2021-07-28 14:52:50.931 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.B.updateByPrimaryKeySelective    : ==>  Preparing: UPDATE blog SET type_id = ?,user_id = ?,title = ?,content = ?,first_picture = ?,flag = ?,description = ?,views = ?,appreciation = ?,share_statement = ?,comment = ?,publish = ?,recommend = ?,create_time = ?,update_time = ? WHERE blog_id = ? 
2021-07-28 14:52:50.931 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.B.updateByPrimaryKeySelective    : ==> Parameters: 4(Integer), 1(Integer), 流量详情(String), | 帐户类型 | 免费帐户 | 标准帐户 | 高级帐户 |
| --- | --- | --- | --- |
| 帐户流量 | 60M | 1GB | 10GB |
| 设备数目 | 2台 | 无限制 | 无限制 |
| 当前价格 | 免费 | ￥8.17/月 | ￥12.33/月|(String), http://b-ssl.duitang.com/uploads/item/201807/27/20180727062342_45mCi.jpeg(String), 原创(String), Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。(String), 1(Integer), false(Boolean), false(Boolean), true(Boolean), true(Boolean), true(Boolean), 2020-04-11 20:39:54.0(Timestamp), 2021-07-28 14:52:39.365(Timestamp), 22(Integer)
2021-07-28 14:52:50.933 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.B.updateByPrimaryKeySelective    : <==    Updates: 1
2021-07-28 14:52:50.936  INFO 8496 --- [http-nio-8080-exec-9] black.lyg.blog.service.BlogService       : 更新redis中AllBlog的博客标题为：流量详情的views为：1
2021-07-28 14:52:50.964 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 14:52:50.964 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 22(Integer)
2021-07-28 14:52:50.964 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 14:52:50.965 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:52:50.965 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 24(Integer)
2021-07-28 14:52:50.966 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:52:51.191  INFO 8496 --- [http-nio-8080-exec-2] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:52:51.347 DEBUG 8496 --- [http-nio-8080-exec-8] b.l.b.m.CommentMapper.selectByExample    : ==>  Preparing: SELECT comment_id,blog_id,nick_name,email,content,avatar,create_time,parent_comment_id FROM comment WHERE ( ( blog_id = ? ) ) order by comment_id desc 
2021-07-28 14:52:51.347 DEBUG 8496 --- [http-nio-8080-exec-8] b.l.b.m.CommentMapper.selectByExample    : ==> Parameters: 22(Integer)
2021-07-28 14:52:51.349 DEBUG 8496 --- [http-nio-8080-exec-8] b.l.b.m.CommentMapper.selectByExample    : <==      Total: 0
2021-07-28 14:53:21.332 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.blog.mapper.TypeMapper.selectCount   : ==>  Preparing: SELECT COUNT(type_id) FROM type 
2021-07-28 14:53:21.332 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.blog.mapper.TypeMapper.selectCount   : ==> Parameters: 
2021-07-28 14:53:21.333 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.blog.mapper.TypeMapper.selectCount   : <==      Total: 1
2021-07-28 14:53:21.335 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.m.B.selectBlogByTypeId_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE type_id = ? 
2021-07-28 14:53:21.335 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.m.B.selectBlogByTypeId_COUNT       : ==> Parameters: 6(Integer)
2021-07-28 14:53:21.336 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.m.B.selectBlogByTypeId_COUNT       : <==      Total: 1
2021-07-28 14:53:21.336 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.selectBlogByTypeId    : ==>  Preparing: select * from blog where type_id = ? LIMIT ? 
2021-07-28 14:53:21.337 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.selectBlogByTypeId    : ==> Parameters: 6(Integer), 5(Integer)
2021-07-28 14:53:21.339 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:53:21.339 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:53:21.340 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:53:21.340 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:53:21.340 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:53:21.341 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:53:21.342 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:53:21.342 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 14:53:21.343 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:53:21.343 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.m.BlogMapper.selectBlogByTypeId    : <==      Total: 5
2021-07-28 14:53:21.344 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 14:53:21.344 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 8(Integer)
2021-07-28 14:53:21.345 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 14:53:21.346 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:53:21.346 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 1(Integer)
2021-07-28 14:53:21.347 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:53:21.348 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 14:53:21.348 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 15(Integer)
2021-07-28 14:53:21.349 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 14:53:21.349 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:53:21.349 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 22(Integer)
2021-07-28 14:53:21.350 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:53:21.351 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 14:53:21.351 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 16(Integer)
2021-07-28 14:53:21.352 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 14:53:21.352 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:53:21.352 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 21(Integer)
2021-07-28 14:53:21.353 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:53:21.354 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 14:53:21.354 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 17(Integer)
2021-07-28 14:53:21.355 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 14:53:21.356 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:53:21.356 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 21(Integer)
2021-07-28 14:53:21.357 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:53:21.358 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 14:53:21.358 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 18(Integer)
2021-07-28 14:53:21.359 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 14:53:21.360 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:53:21.360 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 22(Integer)
2021-07-28 14:53:21.362 DEBUG 8496 --- [http-nio-8080-exec-10] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:53:21.581  INFO 8496 --- [http-nio-8080-exec-7] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:53:22.561 DEBUG 8496 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==>  Preparing: SELECT count(0) FROM blog 
2021-07-28 14:53:22.561 DEBUG 8496 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.findBlogAll_COUNT     : ==> Parameters: 
2021-07-28 14:53:22.563 DEBUG 8496 --- [http-nio-8080-exec-4] b.l.b.m.BlogMapper.findBlogAll_COUNT     : <==      Total: 1
2021-07-28 14:53:22.564 DEBUG 8496 --- [http-nio-8080-exec-4] b.l.blog.mapper.BlogMapper.findBlogAll   : ==>  Preparing: select * from blog order by update_time desc LIMIT ? 
2021-07-28 14:53:22.564 DEBUG 8496 --- [http-nio-8080-exec-4] b.l.blog.mapper.BlogMapper.findBlogAll   : ==> Parameters: 5(Integer)
2021-07-28 14:53:22.566 DEBUG 8496 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:53:22.566 DEBUG 8496 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:53:22.567 DEBUG 8496 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:53:22.567 DEBUG 8496 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:53:22.567 DEBUG 8496 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:53:22.568 DEBUG 8496 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:53:22.568 DEBUG 8496 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:53:22.568 DEBUG 8496 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:53:22.569 DEBUG 8496 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:53:22.569 DEBUG 8496 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:53:22.569 DEBUG 8496 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 14:53:22.570 DEBUG 8496 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:53:22.571 DEBUG 8496 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:53:22.571 DEBUG 8496 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 14:53:22.571 DEBUG 8496 --- [http-nio-8080-exec-4] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:53:22.572 DEBUG 8496 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:53:22.572 DEBUG 8496 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 14:53:22.573 DEBUG 8496 --- [http-nio-8080-exec-4] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:53:22.573 DEBUG 8496 --- [http-nio-8080-exec-4] b.l.blog.mapper.BlogMapper.findBlogAll   : <==      Total: 5
2021-07-28 14:53:22.576  INFO 8496 --- [http-nio-8080-exec-4] black.lyg.blog.service.TagService        : 从redis中获取数据：[TagTops(tagId=20, name=设计模式, BlogNumber=2), TagTops(tagId=21, name=Redis, BlogNumber=4), TagTops(tagId=22, name=Java, BlogNumber=4), TagTops(tagId=2, name=Mybatis, BlogNumber=1), TagTops(tagId=1, name=Spring, BlogNumber=2), TagTops(tagId=24, name=测试, BlogNumber=2), TagTops(tagId=23, name=MySQL, BlogNumber=1)]
2021-07-28 14:53:22.576  INFO 8496 --- [http-nio-8080-exec-4] black.lyg.blog.service.TagService        : 从redis中查找到由标签显示博客的数据：[TagTops(tagId=21, name=Redis, BlogNumber=4), TagTops(tagId=22, name=Java, BlogNumber=4), TagTops(tagId=20, name=设计模式, BlogNumber=2), TagTops(tagId=1, name=Spring, BlogNumber=2), TagTops(tagId=24, name=测试, BlogNumber=2), TagTops(tagId=2, name=Mybatis, BlogNumber=1), TagTops(tagId=23, name=MySQL, BlogNumber=1)]
2021-07-28 14:53:22.578  INFO 8496 --- [http-nio-8080-exec-4] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:53:22.788  INFO 8496 --- [http-nio-8080-exec-3] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:53:27.568  INFO 8496 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.loginPage', args=[]}
2021-07-28 14:53:27.568  INFO 8496 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:53:27.568  INFO 8496 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : admin/login 
2021-07-28 14:53:34.245  INFO 8496 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.LoginController.login', args=[zhangsan, 123456, org.apache.catalina.session.StandardSessionFacade@67ee0559, {}]}
2021-07-28 14:53:34.246 DEBUG 8496 --- [http-nio-8080-exec-6] .l.b.m.U.selectUserNameByNameAndPassWord : ==>  Preparing: select * from user where username = ? and password = ? 
2021-07-28 14:53:34.246 DEBUG 8496 --- [http-nio-8080-exec-6] .l.b.m.U.selectUserNameByNameAndPassWord : ==> Parameters: zhangsan(String), E10ADC3949BA59ABBE56E057F20F883E(String)
2021-07-28 14:53:34.248 DEBUG 8496 --- [http-nio-8080-exec-6] .l.b.m.U.selectUserNameByNameAndPassWord : <==      Total: 1
2021-07-28 14:53:34.248  INFO 8496 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:53:34.248  INFO 8496 --- [http-nio-8080-exec-6] black.lyg.blog.aspect.LogAspect          : result : admin/index 
2021-07-28 14:53:34.458  INFO 8496 --- [http-nio-8080-exec-5] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:53:37.584  INFO 8496 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/zhangsan', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, zhangsan, 1]}
2021-07-28 14:53:37.585 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 14:53:37.585 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: zhangsan(String)
2021-07-28 14:53:37.586 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 14:53:37.586 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 14:53:37.586 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: zhangsan(String), 8(Integer)
2021-07-28 14:53:37.588 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 14:53:37.588 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 14:53:37.588 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 2(Integer)
2021-07-28 14:53:37.589 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:53:37.589 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:53:37.590 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:53:37.590 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:53:37.590 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 14:53:37.591 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:53:37.591 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 1
2021-07-28 14:53:37.591 DEBUG 8496 --- [http-nio-8080-exec-9] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 14:53:37.591 DEBUG 8496 --- [http-nio-8080-exec-9] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 14:53:37.592 DEBUG 8496 --- [http-nio-8080-exec-9] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 14:53:37.592  INFO 8496 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:53:37.592  INFO 8496 --- [http-nio-8080-exec-9] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 14:53:37.787  INFO 8496 --- [http-nio-8080-exec-2] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:53:44.019  INFO 8496 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.search', args=[{}, 1, , , false, zhangsan]}
2021-07-28 14:53:44.019  INFO 8496 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:53:44.019  INFO 8496 --- [http-nio-8080-exec-10] black.lyg.blog.aspect.LogAspect          : result : admin/blogs/zhangsan 
2021-07-28 14:53:44.023 ERROR 8496 --- [http-nio-8080-exec-10] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-10] Exception processing template "admin/blogs/zhangsan": Error resolving template [admin/blogs/zhangsan], template might not exist or might not be accessible by any of the configured Template Resolvers

org.thymeleaf.exceptions.TemplateInputException: Error resolving template [admin/blogs/zhangsan], template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:869) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098) [thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072) [thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362) [thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189) [thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) [tomcat-embed-websocket-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124) [druid-1.1.16.jar:1.1.16]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_221]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_221]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_221]

2021-07-28 14:53:44.024 ERROR 8496 --- [http-nio-8080-exec-10] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: Error resolving template [admin/blogs/zhangsan], template might not exist or might not be accessible by any of the configured Template Resolvers] with root cause

org.thymeleaf.exceptions.TemplateInputException: Error resolving template [admin/blogs/zhangsan], template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:869) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362) ~[thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189) ~[thymeleaf-spring5-3.0.11.RELEASE.jar:3.0.11.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124) ~[druid-1.1.16.jar:1.1.16]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_221]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_221]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_221]

2021-07-28 14:53:45.023  INFO 8496 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/zhangsan', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, zhangsan, 1]}
2021-07-28 14:53:45.024 DEBUG 8496 --- [http-nio-8080-exec-7] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 14:53:45.024 DEBUG 8496 --- [http-nio-8080-exec-7] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: zhangsan(String)
2021-07-28 14:53:45.025 DEBUG 8496 --- [http-nio-8080-exec-7] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 14:53:45.026 DEBUG 8496 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 14:53:45.026 DEBUG 8496 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: zhangsan(String), 8(Integer)
2021-07-28 14:53:45.027 DEBUG 8496 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 14:53:45.028 DEBUG 8496 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 14:53:45.028 DEBUG 8496 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 2(Integer)
2021-07-28 14:53:45.030 DEBUG 8496 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:53:45.030 DEBUG 8496 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:53:45.031 DEBUG 8496 --- [http-nio-8080-exec-7] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:53:45.031 DEBUG 8496 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:53:45.031 DEBUG 8496 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 14:53:45.032 DEBUG 8496 --- [http-nio-8080-exec-7] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:53:45.032 DEBUG 8496 --- [http-nio-8080-exec-7] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 1
2021-07-28 14:53:45.033 DEBUG 8496 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 14:53:45.033 DEBUG 8496 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 14:53:45.034 DEBUG 8496 --- [http-nio-8080-exec-7] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 14:53:45.034  INFO 8496 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:53:45.034  INFO 8496 --- [http-nio-8080-exec-7] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 14:53:45.242  INFO 8496 --- [http-nio-8080-exec-4] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:53:48.441  INFO 8496 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/18/edit', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.editPage', args=[{}, 18]}
2021-07-28 14:53:48.442  INFO 8496 --- [http-nio-8080-exec-3] black.lyg.blog.service.BlogService       : 从redis中获取Blog的数据，标题为Java常见关键字final、static、super、abstract、this
2021-07-28 14:53:48.443 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 14:53:48.443 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 18(Integer)
2021-07-28 14:53:48.444 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 14:53:48.445 DEBUG 8496 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 14:53:48.445 DEBUG 8496 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 14:53:48.446 DEBUG 8496 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 14:53:48.447 DEBUG 8496 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TagMapper.selectAll    : ==>  Preparing: SELECT tag_id,name FROM tag 
2021-07-28 14:53:48.447 DEBUG 8496 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TagMapper.selectAll    : ==> Parameters: 
2021-07-28 14:53:48.448 DEBUG 8496 --- [http-nio-8080-exec-3] b.lyg.blog.mapper.TagMapper.selectAll    : <==      Total: 7
2021-07-28 14:53:48.448  INFO 8496 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:53:48.448  INFO 8496 --- [http-nio-8080-exec-3] black.lyg.blog.aspect.LogAspect          : result : admin/blogs-input 
2021-07-28 14:53:48.660  INFO 8496 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:54:05.625 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.blog.mapper.TypeMapper.selectCount   : ==>  Preparing: SELECT COUNT(type_id) FROM type 
2021-07-28 14:54:05.625 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.blog.mapper.TypeMapper.selectCount   : ==> Parameters: 
2021-07-28 14:54:05.627 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.blog.mapper.TypeMapper.selectCount   : <==      Total: 1
2021-07-28 14:54:05.630 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.B.selectBlogByTypeId_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE type_id = ? 
2021-07-28 14:54:05.630 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.B.selectBlogByTypeId_COUNT       : ==> Parameters: 6(Integer)
2021-07-28 14:54:05.631 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.B.selectBlogByTypeId_COUNT       : <==      Total: 1
2021-07-28 14:54:05.631 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.selectBlogByTypeId    : ==>  Preparing: select * from blog where type_id = ? LIMIT ? 
2021-07-28 14:54:05.631 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.selectBlogByTypeId    : ==> Parameters: 6(Integer), 5(Integer)
2021-07-28 14:54:05.633 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:54:05.633 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:54:05.634 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:54:05.634 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:54:05.634 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:54:05.635 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:54:05.635 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:54:05.636 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 14:54:05.636 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:54:05.636 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.selectBlogByTypeId    : <==      Total: 5
2021-07-28 14:54:05.637 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 14:54:05.637 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 8(Integer)
2021-07-28 14:54:05.638 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 14:54:05.638 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:54:05.638 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 1(Integer)
2021-07-28 14:54:05.639 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:54:05.640 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 14:54:05.641 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 15(Integer)
2021-07-28 14:54:05.641 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 14:54:05.642 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:54:05.642 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 22(Integer)
2021-07-28 14:54:05.642 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:54:05.643 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 14:54:05.644 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 16(Integer)
2021-07-28 14:54:05.644 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 14:54:05.644 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:54:05.645 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 21(Integer)
2021-07-28 14:54:05.645 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:54:05.646 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 14:54:05.646 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 17(Integer)
2021-07-28 14:54:05.647 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 14:54:05.648 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:54:05.648 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 21(Integer)
2021-07-28 14:54:05.648 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:54:05.650 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 14:54:05.650 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 18(Integer)
2021-07-28 14:54:05.650 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 14:54:05.651 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:54:05.651 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 22(Integer)
2021-07-28 14:54:05.651 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:54:05.866  INFO 8496 --- [http-nio-8080-exec-5] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:54:07.518 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.blog.mapper.TypeMapper.selectCount   : ==>  Preparing: SELECT COUNT(type_id) FROM type 
2021-07-28 14:54:07.519 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.blog.mapper.TypeMapper.selectCount   : ==> Parameters: 
2021-07-28 14:54:07.520 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.blog.mapper.TypeMapper.selectCount   : <==      Total: 1
2021-07-28 14:54:07.522 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.B.selectBlogByTypeId_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE type_id = ? 
2021-07-28 14:54:07.522 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.B.selectBlogByTypeId_COUNT       : ==> Parameters: 4(Integer)
2021-07-28 14:54:07.523 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.B.selectBlogByTypeId_COUNT       : <==      Total: 1
2021-07-28 14:54:07.523 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.selectBlogByTypeId    : ==>  Preparing: select * from blog where type_id = ? LIMIT ? 
2021-07-28 14:54:07.523 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.selectBlogByTypeId    : ==> Parameters: 4(Integer), 5(Integer)
2021-07-28 14:54:07.525 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:54:07.525 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:54:07.525 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:54:07.525 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:54:07.525 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:54:07.526 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:54:07.526 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.selectBlogByTypeId    : <==      Total: 3
2021-07-28 14:54:07.527 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 14:54:07.527 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 19(Integer)
2021-07-28 14:54:07.528 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 14:54:07.528 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:54:07.528 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 22(Integer)
2021-07-28 14:54:07.529 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:54:07.530 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 14:54:07.530 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 22(Integer)
2021-07-28 14:54:07.531 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 14:54:07.531 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:54:07.532 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 24(Integer)
2021-07-28 14:54:07.532 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:54:07.533 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 14:54:07.533 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 23(Integer)
2021-07-28 14:54:07.534 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 7
2021-07-28 14:54:07.534 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:54:07.535 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 1(Integer)
2021-07-28 14:54:07.535 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:54:07.535 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:54:07.535 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 2(Integer)
2021-07-28 14:54:07.536 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:54:07.536 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:54:07.536 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 21(Integer)
2021-07-28 14:54:07.537 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:54:07.537 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:54:07.537 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 22(Integer)
2021-07-28 14:54:07.538 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:54:07.538 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:54:07.538 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 23(Integer)
2021-07-28 14:54:07.538 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:54:07.538 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:54:07.538 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 24(Integer)
2021-07-28 14:54:07.539 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:54:07.539 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:54:07.539 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 20(Integer)
2021-07-28 14:54:07.539 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:54:07.729  INFO 8496 --- [http-nio-8080-exec-2] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:54:10.250 DEBUG 8496 --- [http-nio-8080-exec-8] b.l.blog.mapper.TypeMapper.selectCount   : ==>  Preparing: SELECT COUNT(type_id) FROM type 
2021-07-28 14:54:10.250 DEBUG 8496 --- [http-nio-8080-exec-8] b.l.blog.mapper.TypeMapper.selectCount   : ==> Parameters: 
2021-07-28 14:54:10.251 DEBUG 8496 --- [http-nio-8080-exec-8] b.l.blog.mapper.TypeMapper.selectCount   : <==      Total: 1
2021-07-28 14:54:10.253 DEBUG 8496 --- [http-nio-8080-exec-8] b.l.b.m.B.selectBlogByTypeId_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE type_id = ? 
2021-07-28 14:54:10.253 DEBUG 8496 --- [http-nio-8080-exec-8] b.l.b.m.B.selectBlogByTypeId_COUNT       : ==> Parameters: 5(Integer)
2021-07-28 14:54:10.253 DEBUG 8496 --- [http-nio-8080-exec-8] b.l.b.m.B.selectBlogByTypeId_COUNT       : <==      Total: 1
2021-07-28 14:54:10.254 DEBUG 8496 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.selectBlogByTypeId    : ==>  Preparing: select * from blog where type_id = ? LIMIT ? 
2021-07-28 14:54:10.254 DEBUG 8496 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.selectBlogByTypeId    : ==> Parameters: 5(Integer), 5(Integer)
2021-07-28 14:54:10.255 DEBUG 8496 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:54:10.255 DEBUG 8496 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 14:54:10.255 DEBUG 8496 --- [http-nio-8080-exec-8] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:54:10.255 DEBUG 8496 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:54:10.256 DEBUG 8496 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 14:54:10.256 DEBUG 8496 --- [http-nio-8080-exec-8] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:54:10.256 DEBUG 8496 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.selectBlogByTypeId    : <==      Total: 1
2021-07-28 14:54:10.257 DEBUG 8496 --- [http-nio-8080-exec-8] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 14:54:10.257 DEBUG 8496 --- [http-nio-8080-exec-8] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 25(Integer)
2021-07-28 14:54:10.258 DEBUG 8496 --- [http-nio-8080-exec-8] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 2
2021-07-28 14:54:10.258 DEBUG 8496 --- [http-nio-8080-exec-8] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:54:10.258 DEBUG 8496 --- [http-nio-8080-exec-8] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 20(Integer)
2021-07-28 14:54:10.259 DEBUG 8496 --- [http-nio-8080-exec-8] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:54:10.259 DEBUG 8496 --- [http-nio-8080-exec-8] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:54:10.260 DEBUG 8496 --- [http-nio-8080-exec-8] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 21(Integer)
2021-07-28 14:54:10.260 DEBUG 8496 --- [http-nio-8080-exec-8] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:54:10.466  INFO 8496 --- [http-nio-8080-exec-10] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:54:12.153 DEBUG 8496 --- [http-nio-8080-exec-7] b.l.blog.mapper.TypeMapper.selectCount   : ==>  Preparing: SELECT COUNT(type_id) FROM type 
2021-07-28 14:54:12.153 DEBUG 8496 --- [http-nio-8080-exec-7] b.l.blog.mapper.TypeMapper.selectCount   : ==> Parameters: 
2021-07-28 14:54:12.155 DEBUG 8496 --- [http-nio-8080-exec-7] b.l.blog.mapper.TypeMapper.selectCount   : <==      Total: 1
2021-07-28 14:54:12.157 DEBUG 8496 --- [http-nio-8080-exec-7] b.l.b.m.B.selectBlogByTypeId_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE type_id = ? 
2021-07-28 14:54:12.157 DEBUG 8496 --- [http-nio-8080-exec-7] b.l.b.m.B.selectBlogByTypeId_COUNT       : ==> Parameters: 16(Integer)
2021-07-28 14:54:12.158 DEBUG 8496 --- [http-nio-8080-exec-7] b.l.b.m.B.selectBlogByTypeId_COUNT       : <==      Total: 1
2021-07-28 14:54:12.361  INFO 8496 --- [http-nio-8080-exec-4] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:54:14.042 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.blog.mapper.TypeMapper.selectCount   : ==>  Preparing: SELECT COUNT(type_id) FROM type 
2021-07-28 14:54:14.042 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.blog.mapper.TypeMapper.selectCount   : ==> Parameters: 
2021-07-28 14:54:14.044 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.blog.mapper.TypeMapper.selectCount   : <==      Total: 1
2021-07-28 14:54:14.045 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.B.selectBlogByTypeId_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE type_id = ? 
2021-07-28 14:54:14.045 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.B.selectBlogByTypeId_COUNT       : ==> Parameters: 6(Integer)
2021-07-28 14:54:14.046 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.B.selectBlogByTypeId_COUNT       : <==      Total: 1
2021-07-28 14:54:14.046 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.selectBlogByTypeId    : ==>  Preparing: select * from blog where type_id = ? LIMIT ? 
2021-07-28 14:54:14.046 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.selectBlogByTypeId    : ==> Parameters: 6(Integer), 5(Integer)
2021-07-28 14:54:14.047 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:54:14.047 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:54:14.048 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:54:14.049 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:54:14.049 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:54:14.050 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:54:14.050 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:54:14.051 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 14:54:14.052 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:54:14.052 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.BlogMapper.selectBlogByTypeId    : <==      Total: 5
2021-07-28 14:54:14.052 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 14:54:14.053 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 8(Integer)
2021-07-28 14:54:14.053 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 14:54:14.053 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:54:14.054 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 1(Integer)
2021-07-28 14:54:14.054 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:54:14.056 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 14:54:14.056 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 15(Integer)
2021-07-28 14:54:14.056 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 14:54:14.056 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:54:14.057 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 22(Integer)
2021-07-28 14:54:14.057 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:54:14.057 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 14:54:14.057 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 16(Integer)
2021-07-28 14:54:14.057 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 14:54:14.059 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:54:14.059 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 21(Integer)
2021-07-28 14:54:14.059 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:54:14.060 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 14:54:14.060 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 17(Integer)
2021-07-28 14:54:14.060 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 14:54:14.060 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:54:14.060 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 21(Integer)
2021-07-28 14:54:14.060 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:54:14.062 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 14:54:14.062 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 18(Integer)
2021-07-28 14:54:14.062 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 14:54:14.062 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:54:14.062 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 22(Integer)
2021-07-28 14:54:14.062 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:54:14.271  INFO 8496 --- [http-nio-8080-exec-1] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:54:19.143 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.blog.mapper.TypeMapper.selectCount   : ==>  Preparing: SELECT COUNT(type_id) FROM type 
2021-07-28 14:54:19.143 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.blog.mapper.TypeMapper.selectCount   : ==> Parameters: 
2021-07-28 14:54:19.145 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.blog.mapper.TypeMapper.selectCount   : <==      Total: 1
2021-07-28 14:54:19.147 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.B.selectBlogByTypeId_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE type_id = ? 
2021-07-28 14:54:19.148 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.B.selectBlogByTypeId_COUNT       : ==> Parameters: 5(Integer)
2021-07-28 14:54:19.149 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.B.selectBlogByTypeId_COUNT       : <==      Total: 1
2021-07-28 14:54:19.149 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.selectBlogByTypeId    : ==>  Preparing: select * from blog where type_id = ? LIMIT ? 
2021-07-28 14:54:19.150 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.selectBlogByTypeId    : ==> Parameters: 5(Integer), 5(Integer)
2021-07-28 14:54:19.151 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:54:19.151 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 14:54:19.152 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:54:19.152 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:54:19.152 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 14:54:19.153 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:54:19.153 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.BlogMapper.selectBlogByTypeId    : <==      Total: 1
2021-07-28 14:54:19.154 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 14:54:19.154 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 25(Integer)
2021-07-28 14:54:19.155 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 2
2021-07-28 14:54:19.155 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:54:19.156 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 20(Integer)
2021-07-28 14:54:19.156 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:54:19.156 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:54:19.156 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 21(Integer)
2021-07-28 14:54:19.157 DEBUG 8496 --- [http-nio-8080-exec-6] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:54:19.362  INFO 8496 --- [http-nio-8080-exec-5] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:54:21.116 DEBUG 8496 --- [http-nio-8080-exec-9] b.lyg.blog.mapper.TagMapper.selectCount  : ==>  Preparing: SELECT COUNT(tag_id) FROM tag 
2021-07-28 14:54:21.117 DEBUG 8496 --- [http-nio-8080-exec-9] b.lyg.blog.mapper.TagMapper.selectCount  : ==> Parameters: 
2021-07-28 14:54:21.118 DEBUG 8496 --- [http-nio-8080-exec-9] b.lyg.blog.mapper.TagMapper.selectCount  : <==      Total: 1
2021-07-28 14:54:21.120  INFO 8496 --- [http-nio-8080-exec-9] black.lyg.blog.service.TagService        : 从redis中获取数据：[TagTops(tagId=20, name=设计模式, BlogNumber=2), TagTops(tagId=21, name=Redis, BlogNumber=4), TagTops(tagId=22, name=Java, BlogNumber=4), TagTops(tagId=2, name=Mybatis, BlogNumber=1), TagTops(tagId=1, name=Spring, BlogNumber=2), TagTops(tagId=24, name=测试, BlogNumber=2), TagTops(tagId=23, name=MySQL, BlogNumber=1)]
2021-07-28 14:54:21.120  INFO 8496 --- [http-nio-8080-exec-9] black.lyg.blog.service.TagService        : 从redis中查找到由标签显示博客的数据：[TagTops(tagId=21, name=Redis, BlogNumber=4), TagTops(tagId=22, name=Java, BlogNumber=4), TagTops(tagId=20, name=设计模式, BlogNumber=2), TagTops(tagId=1, name=Spring, BlogNumber=2), TagTops(tagId=24, name=测试, BlogNumber=2), TagTops(tagId=2, name=Mybatis, BlogNumber=1), TagTops(tagId=23, name=MySQL, BlogNumber=1)]
2021-07-28 14:54:21.122 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.B.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM blog_tag WHERE ((tag_id = ?)) 
2021-07-28 14:54:21.122 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.B.selectByExample_COUNT          : ==> Parameters: 21(Integer)
2021-07-28 14:54:21.123 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.B.selectByExample_COUNT          : <==      Total: 1
2021-07-28 14:54:21.124 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( tag_id = ? ) ) LIMIT ? 
2021-07-28 14:54:21.124 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 21(Integer), 5(Integer)
2021-07-28 14:54:21.124 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 4
2021-07-28 14:54:21.125 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.selectBlogByBlogId    : ==>  Preparing: select * from blog where blog_id = ? 
2021-07-28 14:54:21.125 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.selectBlogByBlogId    : ==> Parameters: 16(String)
2021-07-28 14:54:21.126 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:54:21.126 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:54:21.126 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:54:21.127 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:54:21.127 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:54:21.127 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:54:21.127 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.selectBlogByBlogId    : <==      Total: 1
2021-07-28 14:54:21.128 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 14:54:21.128 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 16(Integer)
2021-07-28 14:54:21.129 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 14:54:21.129 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:54:21.129 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 21(Integer)
2021-07-28 14:54:21.130 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:54:21.130 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.selectBlogByBlogId    : ==>  Preparing: select * from blog where blog_id = ? 
2021-07-28 14:54:21.130 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.selectBlogByBlogId    : ==> Parameters: 17(String)
2021-07-28 14:54:21.131 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:54:21.131 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:54:21.132 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:54:21.132 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:54:21.132 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:54:21.132 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:54:21.132 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.selectBlogByBlogId    : <==      Total: 1
2021-07-28 14:54:21.133 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 14:54:21.133 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 17(Integer)
2021-07-28 14:54:21.134 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 14:54:21.134 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:54:21.134 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 21(Integer)
2021-07-28 14:54:21.135 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:54:21.135 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.selectBlogByBlogId    : ==>  Preparing: select * from blog where blog_id = ? 
2021-07-28 14:54:21.135 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.selectBlogByBlogId    : ==> Parameters: 23(String)
2021-07-28 14:54:21.136 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:54:21.136 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 4(String)
2021-07-28 14:54:21.137 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:54:21.137 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:54:21.137 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 1(String)
2021-07-28 14:54:21.137 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:54:21.137 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.selectBlogByBlogId    : <==      Total: 1
2021-07-28 14:54:21.138 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 14:54:21.138 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 23(Integer)
2021-07-28 14:54:21.139 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 7
2021-07-28 14:54:21.139 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:54:21.140 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 1(Integer)
2021-07-28 14:54:21.140 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:54:21.140 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:54:21.141 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 2(Integer)
2021-07-28 14:54:21.141 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:54:21.141 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:54:21.141 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 21(Integer)
2021-07-28 14:54:21.142 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:54:21.142 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:54:21.142 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 22(Integer)
2021-07-28 14:54:21.143 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:54:21.143 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:54:21.143 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 23(Integer)
2021-07-28 14:54:21.144 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:54:21.144 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:54:21.144 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 24(Integer)
2021-07-28 14:54:21.145 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:54:21.145 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:54:21.145 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 20(Integer)
2021-07-28 14:54:21.146 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:54:21.146 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.selectBlogByBlogId    : ==>  Preparing: select * from blog where blog_id = ? 
2021-07-28 14:54:21.146 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.selectBlogByBlogId    : ==> Parameters: 25(String)
2021-07-28 14:54:21.147 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:54:21.147 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 5(String)
2021-07-28 14:54:21.148 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:54:21.148 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:54:21.148 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 3(String)
2021-07-28 14:54:21.149 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:54:21.149 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogMapper.selectBlogByBlogId    : <==      Total: 1
2021-07-28 14:54:21.150 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 14:54:21.150 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 25(Integer)
2021-07-28 14:54:21.150 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 2
2021-07-28 14:54:21.150 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:54:21.150 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 20(Integer)
2021-07-28 14:54:21.151 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:54:21.151 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:54:21.151 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 21(Integer)
2021-07-28 14:54:21.152 DEBUG 8496 --- [http-nio-8080-exec-9] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:54:21.375  INFO 8496 --- [http-nio-8080-exec-2] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:54:24.476 DEBUG 8496 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.findYearsGroupByYear  : ==>  Preparing: select date_format(b.update_time,'%Y') as year from blog b group by year order by year desc 
2021-07-28 14:54:24.476 DEBUG 8496 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.findYearsGroupByYear  : ==> Parameters: 
2021-07-28 14:54:24.477 DEBUG 8496 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.findYearsGroupByYear  : <==      Total: 2
2021-07-28 14:54:24.478 DEBUG 8496 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.selectBlogByYear      : ==>  Preparing: select * from blog b where date_format(b.update_time,'%Y') = ? 
2021-07-28 14:54:24.478 DEBUG 8496 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.selectBlogByYear      : ==> Parameters: 2021(String)
2021-07-28 14:54:24.480 DEBUG 8496 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.selectBlogByYear      : <==      Total: 6
2021-07-28 14:54:24.480 DEBUG 8496 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.selectBlogByYear      : ==>  Preparing: select * from blog b where date_format(b.update_time,'%Y') = ? 
2021-07-28 14:54:24.481 DEBUG 8496 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.selectBlogByYear      : ==> Parameters: 2020(String)
2021-07-28 14:54:24.483 DEBUG 8496 --- [http-nio-8080-exec-8] b.l.b.m.BlogMapper.selectBlogByYear      : <==      Total: 3
2021-07-28 14:54:24.484  INFO 8496 --- [http-nio-8080-exec-8] black.lyg.blog.service.BlogService       : 从redis中获取到博客总数量为：9
2021-07-28 14:54:24.684  INFO 8496 --- [http-nio-8080-exec-10] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:54:29.556  INFO 8496 --- [http-nio-8080-exec-7] black.lyg.blog.service.BlogService       : 从redis中获取Blog的数据，标题为redis学习笔记（一）：String
2021-07-28 14:54:29.557 DEBUG 8496 --- [http-nio-8080-exec-7] b.l.b.m.B.updateByPrimaryKeySelective    : ==>  Preparing: UPDATE blog SET title = ?,content = ?,first_picture = ?,flag = ?,description = ?,views = ?,appreciation = ?,share_statement = ?,comment = ?,publish = ?,recommend = ?,create_time = ?,update_time = ? WHERE blog_id = ? 
2021-07-28 14:54:29.558 DEBUG 8496 --- [http-nio-8080-exec-7] b.l.b.m.B.updateByPrimaryKeySelective    : ==> Parameters: redis学习笔记（一）：String(String), # String类型

## 简介
string类型是Redis最基本的数据类型，一个键最大能存储512MB。
string数据结构是最简单的key-value类型，value不仅可以是string，也可以是数字，是包含很多种类型的特殊结构类型。
string类型是二进制安全的。意思是redis可以包含任何数据。比如序列化的对象进行存储，比如一张图片进行二进制存储，再比如一个简单的字符串，数值等等。
## String命令
#### 赋值语法：

**一、SET key value [EX seconds|PX milliseconds] [NX|XX] [KEEPTTL]**
SET 命令用于设置给定 key 的值。如果 key 已经存储值， SET 就覆写旧值，且无视类型 。
### Options
The SET command supports a set of options that modify its behavior:

* EX seconds -- Set the specified expire time, in seconds.
* PX milliseconds -- Set the specified expire time, in milliseconds.
* NX -- Only set the key if it does not already exist.
* XX -- Only set the key if it already exist.
* KEEPTTL -- Retain the time to live associated with the key.
### Examples

```java
127.0.0.1:6379> set name dsy
OK
127.0.0.1:6379> get name
"dsy"
127.0.0.1:6379> set age 23 EX 10   //有效期为60秒
OK
127.0.0.1:6379> keys *   //立刻查询
 1) "name"
 2) "age"

127.0.0.1:6379> keys *   //过一会查询
 1) "name"

```

**二、SETNX key value**
如果键不存在，则将键设置为value值，在这种情况下，它等于SET。当键已经具有值时，将不执行任何操作。 SETNX是“ SET if Not eXists”的缩写。

**返回值**
* 0：如果key之前已经被set
* 1：如果key之前不存在
### Examples

```java
127.0.0.1:6379> setnx key1 hello
(integer) 1
127.0.0.1:6379> setnx key1 world
(integer) 0
127.0.0.1:6379> get key1
"hello"

```
**三、SETEX key seconds value**
将值 value 关联到 key ，并将 key 的过期时间设为 seconds (以秒为单位)。如果 key 已经存在， SETEX 命令将会替换旧的值。
### Examples

```javascript
127.0.0.1:6379> keys *
1) "name"
2) "key1"
127.0.0.1:6379> setex name 10 aaa
OK
127.0.0.1:6379> get name
"aaa"
127.0.0.1:6379> get name
(nil)

```

**四、SETRANGE key offset value**

用指定的字符串覆盖给定 key 所储存的字符串值，覆盖的位置从偏移量 offset 开始。

**返回值：** 被修改后的字符串长度。
### Examples

```java

127.0.0.1:6379> set name hello world
(error) ERR syntax error
127.0.0.1:6379> set name "hello world"
OK
127.0.0.1:6379> setrange name 6 redis
(integer) 11
127.0.0.1:6379> get name
"hello redis"

```

#### 取值语法：
**一、GET key**
Redis Get 命令用于获取指定 key 的值。如果 key 不存在，返回 nil 。如果key 储存的值不是字符串类型，返回一个错误。
### Examples

```java

127.0.0.1:6379> keys *
1) "name"
2) "key1"
127.0.0.1:6379> get name
"hello redis"
127.0.0.1:6379> get key1
"hello"
127.0.0.1:6379> get aaa
(nil)

```

**二、GETRANGE key start end**
Redis Getrange 命令用于获取存储在指定 key 中字符串的子字符串。字符串的截取范围由 start 和 end 两个偏移量决定(包括 start 和 end 在内)。
### Examples

```java
127.0.0.1:6379> get name
"hello redis"
127.0.0.1:6379> getrange name 6 10
"redis"

```
**三、GETSET key value**
Redis Getset 命令用于设置指定 key 的值，并返回 key 旧的值。
### Examples
```java

127.0.0.1:6379> set number 9
OK
127.0.0.1:6379> incr number
(integer) 10
127.0.0.1:6379> getset number 8
"10"
127.0.0.1:6379> get number
"8"

```
**三、STRLEN key**
Redis Strlen 命令用于获取指定 key 所储存的字符串值的长度。当 key 储存的不是字符串值时，返回一个错误。
### Examples
```java

127.0.0.1:6379> get name
"hello redis"
127.0.0.1:6379> strlen name
(integer) 11

```

#### 删除语法：
**DEL key**
Redis DEL 命令用于删除已存在的键。不存在的 key 会被忽略。
### Examples
```java

127.0.0.1:6379> keys *
1) "number"
2) "name"
3) "key1"
127.0.0.1:6379> del number
(integer) 1
127.0.0.1:6379> del number
(integer) 0


```

(String), https://images.unsplash.com/photo-1586397148211-1f5967549ceb?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60(String), 原创(String), string类型是Redis最基本的数据类型，一个键最大能存储512MB。string数据结构是最简单的key-value类型，value不仅可以是string，也可以是数字，是包含很多种类型的特殊结构类型。string类型是二进制安全的。意思是redis可以包含任何数据。比如序列化的对象进行存储，比如一张图片进行二进制存储，再比如一个简单的字符串，数值等等。(String), 1(Integer), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2020-04-11 15:16:59.0(Timestamp), 2020-04-11 15:16:59.0(Timestamp), 16(Integer)
2021-07-28 14:54:29.560 DEBUG 8496 --- [http-nio-8080-exec-7] b.l.b.m.B.updateByPrimaryKeySelective    : <==    Updates: 1
2021-07-28 14:54:29.563  INFO 8496 --- [http-nio-8080-exec-7] black.lyg.blog.service.BlogService       : 更新redis中AllBlog的博客标题为：redis学习笔记（一）：String的views为：1
2021-07-28 14:54:29.569 DEBUG 8496 --- [http-nio-8080-exec-7] b.l.b.m.BlogTagMapper.selectByExample    : ==>  Preparing: SELECT blog_tag_id,blog_id,tag_id FROM blog_tag WHERE ( ( blog_id = ? ) ) 
2021-07-28 14:54:29.569 DEBUG 8496 --- [http-nio-8080-exec-7] b.l.b.m.BlogTagMapper.selectByExample    : ==> Parameters: 16(Integer)
2021-07-28 14:54:29.570 DEBUG 8496 --- [http-nio-8080-exec-7] b.l.b.m.BlogTagMapper.selectByExample    : <==      Total: 1
2021-07-28 14:54:29.570 DEBUG 8496 --- [http-nio-8080-exec-7] b.l.b.m.TagMapper.selectByPrimaryKey     : ==>  Preparing: SELECT tag_id,name FROM tag WHERE tag_id = ? 
2021-07-28 14:54:29.571 DEBUG 8496 --- [http-nio-8080-exec-7] b.l.b.m.TagMapper.selectByPrimaryKey     : ==> Parameters: 21(Integer)
2021-07-28 14:54:29.571 DEBUG 8496 --- [http-nio-8080-exec-7] b.l.b.m.TagMapper.selectByPrimaryKey     : <==      Total: 1
2021-07-28 14:54:29.919  INFO 8496 --- [http-nio-8080-exec-4] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:54:30.009 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.CommentMapper.selectByExample    : ==>  Preparing: SELECT comment_id,blog_id,nick_name,email,content,avatar,create_time,parent_comment_id FROM comment WHERE ( ( blog_id = ? ) ) order by comment_id desc 
2021-07-28 14:54:30.009 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.CommentMapper.selectByExample    : ==> Parameters: 16(Integer)
2021-07-28 14:54:30.010 DEBUG 8496 --- [http-nio-8080-exec-3] b.l.b.m.CommentMapper.selectByExample    : <==      Total: 0
2021-07-28 14:54:40.641  INFO 8496 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/types', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.TypeController.findAllTypes', args=[{}, 1]}
2021-07-28 14:54:40.642 DEBUG 8496 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectAll_COUNT  : ==>  Preparing: SELECT count(0) FROM type 
2021-07-28 14:54:40.643 DEBUG 8496 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectAll_COUNT  : ==> Parameters: 
2021-07-28 14:54:40.645 DEBUG 8496 --- [http-nio-8080-exec-1] b.l.b.mapper.TypeMapper.selectAll_COUNT  : <==      Total: 1
2021-07-28 14:54:40.645 DEBUG 8496 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type LIMIT ? 
2021-07-28 14:54:40.645 DEBUG 8496 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 10(Integer)
2021-07-28 14:54:40.646 DEBUG 8496 --- [http-nio-8080-exec-1] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 14:54:40.647  INFO 8496 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:54:40.647  INFO 8496 --- [http-nio-8080-exec-1] black.lyg.blog.aspect.LogAspect          : result : admin/types 
2021-07-28 14:54:40.866  INFO 8496 --- [http-nio-8080-exec-6] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
2021-07-28 14:54:42.688  INFO 8496 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/blogs/zhangsan', ip='0:0:0:0:0:0:0:1', classMethod='black.lyg.blog.controller.admin.BlogController.blogs', args=[{}, zhangsan, 1]}
2021-07-28 14:54:42.689 DEBUG 8496 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : ==>  Preparing: SELECT count(0) FROM user WHERE username = ? 
2021-07-28 14:54:42.689 DEBUG 8496 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : ==> Parameters: zhangsan(String)
2021-07-28 14:54:42.690 DEBUG 8496 --- [http-nio-8080-exec-5] b.l.b.m.U.selectUserByUsername_COUNT     : <==      Total: 1
2021-07-28 14:54:42.690 DEBUG 8496 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : ==>  Preparing: select * from user where username = ? LIMIT ? 
2021-07-28 14:54:42.691 DEBUG 8496 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : ==> Parameters: zhangsan(String), 8(Integer)
2021-07-28 14:54:42.691 DEBUG 8496 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUsername  : <==      Total: 1
2021-07-28 14:54:42.692 DEBUG 8496 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.selectBlogByUserId    : ==>  Preparing: select * from blog where user_id = ? 
2021-07-28 14:54:42.692 DEBUG 8496 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.selectBlogByUserId    : ==> Parameters: 2(Integer)
2021-07-28 14:54:42.693 DEBUG 8496 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====>  Preparing: select * from type where type_id = ? 
2021-07-28 14:54:42.693 DEBUG 8496 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : ====> Parameters: 6(String)
2021-07-28 14:54:42.694 DEBUG 8496 --- [http-nio-8080-exec-5] b.l.b.mapper.TypeMapper.selectTypeById   : <====      Total: 1
2021-07-28 14:54:42.694 DEBUG 8496 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : ====>  Preparing: select * from user where user_id = ? 
2021-07-28 14:54:42.694 DEBUG 8496 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : ====> Parameters: 2(String)
2021-07-28 14:54:42.694 DEBUG 8496 --- [http-nio-8080-exec-5] b.l.b.m.UserMapper.selectUserByUserId    : <====      Total: 1
2021-07-28 14:54:42.694 DEBUG 8496 --- [http-nio-8080-exec-5] b.l.b.m.BlogMapper.selectBlogByUserId    : <==      Total: 1
2021-07-28 14:54:42.695 DEBUG 8496 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : ==>  Preparing: SELECT type_id,name FROM type 
2021-07-28 14:54:42.695 DEBUG 8496 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : ==> Parameters: 
2021-07-28 14:54:42.696 DEBUG 8496 --- [http-nio-8080-exec-5] b.lyg.blog.mapper.TypeMapper.selectAll   : <==      Total: 7
2021-07-28 14:54:42.696  INFO 8496 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : ////////after/////////
2021-07-28 14:54:42.696  INFO 8496 --- [http-nio-8080-exec-5] black.lyg.blog.aspect.LogAspect          : result : admin/blogs 
2021-07-28 14:54:42.888  INFO 8496 --- [http-nio-8080-exec-9] black.lyg.blog.service.BlogService       : 从redis中获取最新博客
